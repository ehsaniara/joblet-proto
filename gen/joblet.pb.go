// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.12.4
// source: joblet.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Jobs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jobs          []*Job                 `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Jobs) Reset() {
	*x = Jobs{}
	mi := &file_joblet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jobs) ProtoMessage() {}

func (x *Jobs) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jobs.ProtoReflect.Descriptor instead.
func (*Jobs) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{0}
}

func (x *Jobs) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type Job struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Uuid              string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // Job UUID
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // Job name (optional for individual jobs)
	Command           string                 `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	Args              []string               `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	MaxCPU            int32                  `protobuf:"varint,5,opt,name=maxCPU,proto3" json:"maxCPU,omitempty"`
	CpuCores          string                 `protobuf:"bytes,6,opt,name=cpuCores,proto3" json:"cpuCores,omitempty"`
	MaxMemory         int32                  `protobuf:"varint,7,opt,name=maxMemory,proto3" json:"maxMemory,omitempty"`
	MaxIOBPS          int32                  `protobuf:"varint,8,opt,name=maxIOBPS,proto3" json:"maxIOBPS,omitempty"`
	Status            string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	StartTime         string                 `protobuf:"bytes,10,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime           string                 `protobuf:"bytes,11,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ExitCode          int32                  `protobuf:"varint,12,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	ScheduledTime     string                 `protobuf:"bytes,13,opt,name=scheduledTime,proto3" json:"scheduledTime,omitempty"`                                                                                                            // Schedule time (RFC3339, empty = immediate)
	Runtime           string                 `protobuf:"bytes,14,opt,name=runtime,proto3" json:"runtime,omitempty"`                                                                                                                        // Runtime spec
	Environment       map[string]string      `protobuf:"bytes,15,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`                                      // Environment variables
	SecretEnvironment map[string]string      `protobuf:"bytes,16,rep,name=secret_environment,json=secretEnvironment,proto3" json:"secret_environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Secret env vars (masked in logs)
	// GPU fields
	GpuIndices  []int32 `protobuf:"varint,17,rep,packed,name=gpu_indices,json=gpuIndices,proto3" json:"gpu_indices,omitempty"` // Which GPUs allocated
	GpuCount    int32   `protobuf:"varint,18,opt,name=gpu_count,json=gpuCount,proto3" json:"gpu_count,omitempty"`              // Number of GPUs requested/allocated
	GpuMemoryMb int32   `protobuf:"varint,19,opt,name=gpu_memory_mb,json=gpuMemoryMb,proto3" json:"gpu_memory_mb,omitempty"`   // GPU memory requirement (MB)
	// Node identification
	NodeId        string `protobuf:"bytes,20,opt,name=nodeId,proto3" json:"nodeId,omitempty"` // Unique identifier of the Joblet node that executed this job
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_joblet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{1}
}

func (x *Job) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Job) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Job) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Job) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Job) GetMaxCPU() int32 {
	if x != nil {
		return x.MaxCPU
	}
	return 0
}

func (x *Job) GetCpuCores() string {
	if x != nil {
		return x.CpuCores
	}
	return ""
}

func (x *Job) GetMaxMemory() int32 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *Job) GetMaxIOBPS() int32 {
	if x != nil {
		return x.MaxIOBPS
	}
	return 0
}

func (x *Job) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Job) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Job) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *Job) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *Job) GetScheduledTime() string {
	if x != nil {
		return x.ScheduledTime
	}
	return ""
}

func (x *Job) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

func (x *Job) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *Job) GetSecretEnvironment() map[string]string {
	if x != nil {
		return x.SecretEnvironment
	}
	return nil
}

func (x *Job) GetGpuIndices() []int32 {
	if x != nil {
		return x.GpuIndices
	}
	return nil
}

func (x *Job) GetGpuCount() int32 {
	if x != nil {
		return x.GpuCount
	}
	return 0
}

func (x *Job) GetGpuMemoryMb() int32 {
	if x != nil {
		return x.GpuMemoryMb
	}
	return 0
}

func (x *Job) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type EmptyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	mi := &file_joblet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{2}
}

type FileUpload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`                // Path in workspace
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`          // Content
	Mode          uint32                 `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`               // Unix permissions
	IsDirectory   bool                   `protobuf:"varint,4,opt,name=isDirectory,proto3" json:"isDirectory,omitempty"` // Is directory
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUpload) Reset() {
	*x = FileUpload{}
	mi := &file_joblet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUpload) ProtoMessage() {}

func (x *FileUpload) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUpload.ProtoReflect.Descriptor instead.
func (*FileUpload) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{3}
}

func (x *FileUpload) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileUpload) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *FileUpload) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *FileUpload) GetIsDirectory() bool {
	if x != nil {
		return x.IsDirectory
	}
	return false
}

// GetJobStatus
type GetJobStatusReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // Job UUID identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobStatusReq) Reset() {
	*x = GetJobStatusReq{}
	mi := &file_joblet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobStatusReq) ProtoMessage() {}

func (x *GetJobStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobStatusReq.ProtoReflect.Descriptor instead.
func (*GetJobStatusReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{4}
}

func (x *GetJobStatusReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetJobStatusRes struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Uuid              string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // Job UUID identifier
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // Human-readable job name (for workflows, empty for individual jobs)
	Command           string                 `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	Args              []string               `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	MaxCPU            int32                  `protobuf:"varint,5,opt,name=maxCPU,proto3" json:"maxCPU,omitempty"`
	CpuCores          string                 `protobuf:"bytes,6,opt,name=cpuCores,proto3" json:"cpuCores,omitempty"`
	MaxMemory         int32                  `protobuf:"varint,7,opt,name=maxMemory,proto3" json:"maxMemory,omitempty"`
	MaxIOBPS          int32                  `protobuf:"varint,8,opt,name=maxIOBPS,proto3" json:"maxIOBPS,omitempty"`
	Status            string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	StartTime         string                 `protobuf:"bytes,10,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime           string                 `protobuf:"bytes,11,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ExitCode          int32                  `protobuf:"varint,12,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	ScheduledTime     string                 `protobuf:"bytes,13,opt,name=scheduledTime,proto3" json:"scheduledTime,omitempty"`                                                                                                            // When the job should execute (empty if immediate)
	Environment       map[string]string      `protobuf:"bytes,14,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`                                      // Regular environment variables (visible)
	SecretEnvironment map[string]string      `protobuf:"bytes,15,rep,name=secret_environment,json=secretEnvironment,proto3" json:"secret_environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Secret environment variables (masked)
	Network           string                 `protobuf:"bytes,16,opt,name=network,proto3" json:"network,omitempty"`                                                                                                                        // Network configuration
	Volumes           []string               `protobuf:"bytes,17,rep,name=volumes,proto3" json:"volumes,omitempty"`                                                                                                                        // Mounted volumes
	Runtime           string                 `protobuf:"bytes,18,opt,name=runtime,proto3" json:"runtime,omitempty"`                                                                                                                        // Runtime environment
	WorkDir           string                 `protobuf:"bytes,19,opt,name=workDir,proto3" json:"workDir,omitempty"`                                                                                                                        // Working directory
	Uploads           []string               `protobuf:"bytes,20,rep,name=uploads,proto3" json:"uploads,omitempty"`                                                                                                                        // Uploaded files/directories
	Dependencies      []string               `protobuf:"bytes,21,rep,name=dependencies,proto3" json:"dependencies,omitempty"`                                                                                                              // Job dependencies (for workflow jobs)
	WorkflowUuid      string                 `protobuf:"bytes,22,opt,name=workflowUuid,proto3" json:"workflowUuid,omitempty"`                                                                                                              // Workflow UUID (if part of workflow)
	// GPU allocation info
	GpuIndices  []int32 `protobuf:"varint,23,rep,packed,name=gpu_indices,json=gpuIndices,proto3" json:"gpu_indices,omitempty"` // Which GPUs allocated to this job
	GpuCount    int32   `protobuf:"varint,24,opt,name=gpu_count,json=gpuCount,proto3" json:"gpu_count,omitempty"`              // Number of GPUs requested/allocated
	GpuMemoryMb int32   `protobuf:"varint,25,opt,name=gpu_memory_mb,json=gpuMemoryMb,proto3" json:"gpu_memory_mb,omitempty"`   // GPU memory requirement (MB)
	// Node identification
	NodeId        string `protobuf:"bytes,26,opt,name=nodeId,proto3" json:"nodeId,omitempty"` // Unique identifier of the Joblet node that executed this job
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobStatusRes) Reset() {
	*x = GetJobStatusRes{}
	mi := &file_joblet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobStatusRes) ProtoMessage() {}

func (x *GetJobStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobStatusRes.ProtoReflect.Descriptor instead.
func (*GetJobStatusRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{5}
}

func (x *GetJobStatusRes) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetJobStatusRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetJobStatusRes) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *GetJobStatusRes) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *GetJobStatusRes) GetMaxCPU() int32 {
	if x != nil {
		return x.MaxCPU
	}
	return 0
}

func (x *GetJobStatusRes) GetCpuCores() string {
	if x != nil {
		return x.CpuCores
	}
	return ""
}

func (x *GetJobStatusRes) GetMaxMemory() int32 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *GetJobStatusRes) GetMaxIOBPS() int32 {
	if x != nil {
		return x.MaxIOBPS
	}
	return 0
}

func (x *GetJobStatusRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetJobStatusRes) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetJobStatusRes) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetJobStatusRes) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *GetJobStatusRes) GetScheduledTime() string {
	if x != nil {
		return x.ScheduledTime
	}
	return ""
}

func (x *GetJobStatusRes) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *GetJobStatusRes) GetSecretEnvironment() map[string]string {
	if x != nil {
		return x.SecretEnvironment
	}
	return nil
}

func (x *GetJobStatusRes) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetJobStatusRes) GetVolumes() []string {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *GetJobStatusRes) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

func (x *GetJobStatusRes) GetWorkDir() string {
	if x != nil {
		return x.WorkDir
	}
	return ""
}

func (x *GetJobStatusRes) GetUploads() []string {
	if x != nil {
		return x.Uploads
	}
	return nil
}

func (x *GetJobStatusRes) GetDependencies() []string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *GetJobStatusRes) GetWorkflowUuid() string {
	if x != nil {
		return x.WorkflowUuid
	}
	return ""
}

func (x *GetJobStatusRes) GetGpuIndices() []int32 {
	if x != nil {
		return x.GpuIndices
	}
	return nil
}

func (x *GetJobStatusRes) GetGpuCount() int32 {
	if x != nil {
		return x.GpuCount
	}
	return 0
}

func (x *GetJobStatusRes) GetGpuMemoryMb() int32 {
	if x != nil {
		return x.GpuMemoryMb
	}
	return 0
}

func (x *GetJobStatusRes) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

// StopJob
type StopJobReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // Job UUID identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopJobReq) Reset() {
	*x = StopJobReq{}
	mi := &file_joblet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopJobReq) ProtoMessage() {}

func (x *StopJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopJobReq.ProtoReflect.Descriptor instead.
func (*StopJobReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{6}
}

func (x *StopJobReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type StopJobRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // Job UUID identifier
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	EndTime       string                 `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ExitCode      int32                  `protobuf:"varint,4,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopJobRes) Reset() {
	*x = StopJobRes{}
	mi := &file_joblet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopJobRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopJobRes) ProtoMessage() {}

func (x *StopJobRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopJobRes.ProtoReflect.Descriptor instead.
func (*StopJobRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{7}
}

func (x *StopJobRes) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *StopJobRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StopJobRes) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *StopJobRes) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

// CancelJob - for canceling scheduled jobs only
type CancelJobReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // Job UUID identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelJobReq) Reset() {
	*x = CancelJobReq{}
	mi := &file_joblet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobReq) ProtoMessage() {}

func (x *CancelJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobReq.ProtoReflect.Descriptor instead.
func (*CancelJobReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{8}
}

func (x *CancelJobReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type CancelJobRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`     // Job UUID identifier
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // Should be "CANCELED"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelJobRes) Reset() {
	*x = CancelJobRes{}
	mi := &file_joblet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelJobRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobRes) ProtoMessage() {}

func (x *CancelJobRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobRes.ProtoReflect.Descriptor instead.
func (*CancelJobRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{9}
}

func (x *CancelJobRes) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CancelJobRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// DeleteJob
type DeleteJobReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // Job UUID identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteJobReq) Reset() {
	*x = DeleteJobReq{}
	mi := &file_joblet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobReq) ProtoMessage() {}

func (x *DeleteJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobReq.ProtoReflect.Descriptor instead.
func (*DeleteJobReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteJobReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type DeleteJobRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // Job UUID identifier
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteJobRes) Reset() {
	*x = DeleteJobRes{}
	mi := &file_joblet_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteJobRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobRes) ProtoMessage() {}

func (x *DeleteJobRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobRes.ProtoReflect.Descriptor instead.
func (*DeleteJobRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteJobRes) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DeleteJobRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteJobRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// DeleteAllJobs
type DeleteAllJobsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAllJobsReq) Reset() {
	*x = DeleteAllJobsReq{}
	mi := &file_joblet_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAllJobsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllJobsReq) ProtoMessage() {}

func (x *DeleteAllJobsReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllJobsReq.ProtoReflect.Descriptor instead.
func (*DeleteAllJobsReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{12}
}

type DeleteAllJobsRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DeletedCount  int32                  `protobuf:"varint,3,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"` // Jobs deleted
	SkippedCount  int32                  `protobuf:"varint,4,opt,name=skipped_count,json=skippedCount,proto3" json:"skipped_count,omitempty"` // Jobs skipped (still running)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAllJobsRes) Reset() {
	*x = DeleteAllJobsRes{}
	mi := &file_joblet_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAllJobsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllJobsRes) ProtoMessage() {}

func (x *DeleteAllJobsRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllJobsRes.ProtoReflect.Descriptor instead.
func (*DeleteAllJobsRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteAllJobsRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteAllJobsRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteAllJobsRes) GetDeletedCount() int32 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

func (x *DeleteAllJobsRes) GetSkippedCount() int32 {
	if x != nil {
		return x.SkippedCount
	}
	return 0
}

// GetJobLogs
type GetJobLogsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // Job UUID identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobLogsReq) Reset() {
	*x = GetJobLogsReq{}
	mi := &file_joblet_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobLogsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobLogsReq) ProtoMessage() {}

func (x *GetJobLogsReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobLogsReq.ProtoReflect.Descriptor instead.
func (*GetJobLogsReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{14}
}

func (x *GetJobLogsReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type DataChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       []byte                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataChunk) Reset() {
	*x = DataChunk{}
	mi := &file_joblet_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataChunk) ProtoMessage() {}

func (x *DataChunk) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataChunk.ProtoReflect.Descriptor instead.
func (*DataChunk) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{15}
}

func (x *DataChunk) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type RuntimeInstallationChunk struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ChunkType:
	//
	//	*RuntimeInstallationChunk_Progress
	//	*RuntimeInstallationChunk_Log
	//	*RuntimeInstallationChunk_Result
	ChunkType     isRuntimeInstallationChunk_ChunkType `protobuf_oneof:"chunk_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeInstallationChunk) Reset() {
	*x = RuntimeInstallationChunk{}
	mi := &file_joblet_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeInstallationChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInstallationChunk) ProtoMessage() {}

func (x *RuntimeInstallationChunk) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInstallationChunk.ProtoReflect.Descriptor instead.
func (*RuntimeInstallationChunk) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{16}
}

func (x *RuntimeInstallationChunk) GetChunkType() isRuntimeInstallationChunk_ChunkType {
	if x != nil {
		return x.ChunkType
	}
	return nil
}

func (x *RuntimeInstallationChunk) GetProgress() *RuntimeInstallationProgress {
	if x != nil {
		if x, ok := x.ChunkType.(*RuntimeInstallationChunk_Progress); ok {
			return x.Progress
		}
	}
	return nil
}

func (x *RuntimeInstallationChunk) GetLog() *RuntimeInstallationLog {
	if x != nil {
		if x, ok := x.ChunkType.(*RuntimeInstallationChunk_Log); ok {
			return x.Log
		}
	}
	return nil
}

func (x *RuntimeInstallationChunk) GetResult() *RuntimeInstallationResult {
	if x != nil {
		if x, ok := x.ChunkType.(*RuntimeInstallationChunk_Result); ok {
			return x.Result
		}
	}
	return nil
}

type isRuntimeInstallationChunk_ChunkType interface {
	isRuntimeInstallationChunk_ChunkType()
}

type RuntimeInstallationChunk_Progress struct {
	Progress *RuntimeInstallationProgress `protobuf:"bytes,1,opt,name=progress,proto3,oneof"`
}

type RuntimeInstallationChunk_Log struct {
	Log *RuntimeInstallationLog `protobuf:"bytes,2,opt,name=log,proto3,oneof"`
}

type RuntimeInstallationChunk_Result struct {
	Result *RuntimeInstallationResult `protobuf:"bytes,3,opt,name=result,proto3,oneof"`
}

func (*RuntimeInstallationChunk_Progress) isRuntimeInstallationChunk_ChunkType() {}

func (*RuntimeInstallationChunk_Log) isRuntimeInstallationChunk_ChunkType() {}

func (*RuntimeInstallationChunk_Result) isRuntimeInstallationChunk_ChunkType() {}

type RuntimeInstallationProgress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Step          int32                  `protobuf:"varint,2,opt,name=step,proto3" json:"step,omitempty"`
	TotalSteps    int32                  `protobuf:"varint,3,opt,name=total_steps,json=totalSteps,proto3" json:"total_steps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeInstallationProgress) Reset() {
	*x = RuntimeInstallationProgress{}
	mi := &file_joblet_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeInstallationProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInstallationProgress) ProtoMessage() {}

func (x *RuntimeInstallationProgress) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInstallationProgress.ProtoReflect.Descriptor instead.
func (*RuntimeInstallationProgress) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{17}
}

func (x *RuntimeInstallationProgress) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RuntimeInstallationProgress) GetStep() int32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *RuntimeInstallationProgress) GetTotalSteps() int32 {
	if x != nil {
		return x.TotalSteps
	}
	return 0
}

type RuntimeInstallationLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeInstallationLog) Reset() {
	*x = RuntimeInstallationLog{}
	mi := &file_joblet_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeInstallationLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInstallationLog) ProtoMessage() {}

func (x *RuntimeInstallationLog) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInstallationLog.ProtoReflect.Descriptor instead.
func (*RuntimeInstallationLog) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{18}
}

func (x *RuntimeInstallationLog) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type RuntimeInstallationResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RuntimeSpec   string                 `protobuf:"bytes,3,opt,name=runtime_spec,json=runtimeSpec,proto3" json:"runtime_spec,omitempty"`
	InstallPath   string                 `protobuf:"bytes,4,opt,name=install_path,json=installPath,proto3" json:"install_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeInstallationResult) Reset() {
	*x = RuntimeInstallationResult{}
	mi := &file_joblet_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeInstallationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInstallationResult) ProtoMessage() {}

func (x *RuntimeInstallationResult) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInstallationResult.ProtoReflect.Descriptor instead.
func (*RuntimeInstallationResult) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{19}
}

func (x *RuntimeInstallationResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RuntimeInstallationResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RuntimeInstallationResult) GetRuntimeSpec() string {
	if x != nil {
		return x.RuntimeSpec
	}
	return ""
}

func (x *RuntimeInstallationResult) GetInstallPath() string {
	if x != nil {
		return x.InstallPath
	}
	return ""
}

type CreateNetworkReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cidr          string                 `protobuf:"bytes,2,opt,name=cidr,proto3" json:"cidr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNetworkReq) Reset() {
	*x = CreateNetworkReq{}
	mi := &file_joblet_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkReq) ProtoMessage() {}

func (x *CreateNetworkReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkReq.ProtoReflect.Descriptor instead.
func (*CreateNetworkReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{20}
}

func (x *CreateNetworkReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNetworkReq) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

type CreateNetworkRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cidr          string                 `protobuf:"bytes,2,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Bridge        string                 `protobuf:"bytes,3,opt,name=bridge,proto3" json:"bridge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNetworkRes) Reset() {
	*x = CreateNetworkRes{}
	mi := &file_joblet_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkRes) ProtoMessage() {}

func (x *CreateNetworkRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkRes.ProtoReflect.Descriptor instead.
func (*CreateNetworkRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{21}
}

func (x *CreateNetworkRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNetworkRes) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *CreateNetworkRes) GetBridge() string {
	if x != nil {
		return x.Bridge
	}
	return ""
}

type RemoveNetworkReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveNetworkReq) Reset() {
	*x = RemoveNetworkReq{}
	mi := &file_joblet_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveNetworkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNetworkReq) ProtoMessage() {}

func (x *RemoveNetworkReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNetworkReq.ProtoReflect.Descriptor instead.
func (*RemoveNetworkReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{22}
}

func (x *RemoveNetworkReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RemoveNetworkRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveNetworkRes) Reset() {
	*x = RemoveNetworkRes{}
	mi := &file_joblet_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveNetworkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNetworkRes) ProtoMessage() {}

func (x *RemoveNetworkRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNetworkRes.ProtoReflect.Descriptor instead.
func (*RemoveNetworkRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{23}
}

func (x *RemoveNetworkRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveNetworkRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Network struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cidr          string                 `protobuf:"bytes,2,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Bridge        string                 `protobuf:"bytes,3,opt,name=bridge,proto3" json:"bridge,omitempty"`
	JobCount      int32                  `protobuf:"varint,4,opt,name=jobCount,proto3" json:"jobCount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_joblet_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{24}
}

func (x *Network) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Network) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *Network) GetBridge() string {
	if x != nil {
		return x.Bridge
	}
	return ""
}

func (x *Network) GetJobCount() int32 {
	if x != nil {
		return x.JobCount
	}
	return 0
}

type Networks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Networks      []*Network             `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Networks) Reset() {
	*x = Networks{}
	mi := &file_joblet_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Networks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Networks) ProtoMessage() {}

func (x *Networks) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Networks.ProtoReflect.Descriptor instead.
func (*Networks) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{25}
}

func (x *Networks) GetNetworks() []*Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

type CreateVolumeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          string                 `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"` // Size (e.g., "1GB", "500MB")
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"` // Type: filesystem or memory
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolumeReq) Reset() {
	*x = CreateVolumeReq{}
	mi := &file_joblet_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolumeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeReq) ProtoMessage() {}

func (x *CreateVolumeReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeReq.ProtoReflect.Descriptor instead.
func (*CreateVolumeReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{26}
}

func (x *CreateVolumeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVolumeReq) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *CreateVolumeReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type CreateVolumeRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          string                 `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Path          string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"` // Host path
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolumeRes) Reset() {
	*x = CreateVolumeRes{}
	mi := &file_joblet_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolumeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeRes) ProtoMessage() {}

func (x *CreateVolumeRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeRes.ProtoReflect.Descriptor instead.
func (*CreateVolumeRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{27}
}

func (x *CreateVolumeRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVolumeRes) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *CreateVolumeRes) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateVolumeRes) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RemoveVolumeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveVolumeReq) Reset() {
	*x = RemoveVolumeReq{}
	mi := &file_joblet_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveVolumeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveVolumeReq) ProtoMessage() {}

func (x *RemoveVolumeReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveVolumeReq.ProtoReflect.Descriptor instead.
func (*RemoveVolumeReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{28}
}

func (x *RemoveVolumeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RemoveVolumeRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveVolumeRes) Reset() {
	*x = RemoveVolumeRes{}
	mi := &file_joblet_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveVolumeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveVolumeRes) ProtoMessage() {}

func (x *RemoveVolumeRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveVolumeRes.ProtoReflect.Descriptor instead.
func (*RemoveVolumeRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{29}
}

func (x *RemoveVolumeRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveVolumeRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Volume struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          string                 `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Path          string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	CreatedTime   string                 `protobuf:"bytes,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	JobCount      int32                  `protobuf:"varint,6,opt,name=jobCount,proto3" json:"jobCount,omitempty"` // Jobs using this volume
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Volume) Reset() {
	*x = Volume{}
	mi := &file_joblet_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{30}
}

func (x *Volume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Volume) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *Volume) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Volume) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Volume) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *Volume) GetJobCount() int32 {
	if x != nil {
		return x.JobCount
	}
	return 0
}

type Volumes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Volumes       []*Volume              `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Volumes) Reset() {
	*x = Volumes{}
	mi := &file_joblet_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Volumes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volumes) ProtoMessage() {}

func (x *Volumes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volumes.ProtoReflect.Descriptor instead.
func (*Volumes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{31}
}

func (x *Volumes) GetVolumes() []*Volume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

type SystemStatusRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     string                 `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Available     bool                   `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	Host          *HostInfo              `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Cpu           *CPUMetrics            `protobuf:"bytes,4,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        *MemoryMetrics         `protobuf:"bytes,5,opt,name=memory,proto3" json:"memory,omitempty"`
	Disks         []*DiskMetrics         `protobuf:"bytes,6,rep,name=disks,proto3" json:"disks,omitempty"`
	Networks      []*NetworkMetrics      `protobuf:"bytes,7,rep,name=networks,proto3" json:"networks,omitempty"`
	Io            *IOMetrics             `protobuf:"bytes,8,opt,name=io,proto3" json:"io,omitempty"`
	Processes     *ProcessMetrics        `protobuf:"bytes,9,opt,name=processes,proto3" json:"processes,omitempty"`
	Cloud         *CloudInfo             `protobuf:"bytes,10,opt,name=cloud,proto3" json:"cloud,omitempty"`
	ServerVersion *ServerVersionInfo     `protobuf:"bytes,11,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemStatusRes) Reset() {
	*x = SystemStatusRes{}
	mi := &file_joblet_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatusRes) ProtoMessage() {}

func (x *SystemStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatusRes.ProtoReflect.Descriptor instead.
func (*SystemStatusRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{32}
}

func (x *SystemStatusRes) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *SystemStatusRes) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *SystemStatusRes) GetHost() *HostInfo {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *SystemStatusRes) GetCpu() *CPUMetrics {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *SystemStatusRes) GetMemory() *MemoryMetrics {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *SystemStatusRes) GetDisks() []*DiskMetrics {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *SystemStatusRes) GetNetworks() []*NetworkMetrics {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *SystemStatusRes) GetIo() *IOMetrics {
	if x != nil {
		return x.Io
	}
	return nil
}

func (x *SystemStatusRes) GetProcesses() *ProcessMetrics {
	if x != nil {
		return x.Processes
	}
	return nil
}

func (x *SystemStatusRes) GetCloud() *CloudInfo {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *SystemStatusRes) GetServerVersion() *ServerVersionInfo {
	if x != nil {
		return x.ServerVersion
	}
	return nil
}

type SystemMetricsRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     string                 `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Host          *HostInfo              `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Cpu           *CPUMetrics            `protobuf:"bytes,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        *MemoryMetrics         `protobuf:"bytes,4,opt,name=memory,proto3" json:"memory,omitempty"`
	Disks         []*DiskMetrics         `protobuf:"bytes,5,rep,name=disks,proto3" json:"disks,omitempty"`
	Networks      []*NetworkMetrics      `protobuf:"bytes,6,rep,name=networks,proto3" json:"networks,omitempty"`
	Io            *IOMetrics             `protobuf:"bytes,7,opt,name=io,proto3" json:"io,omitempty"`
	Processes     *ProcessMetrics        `protobuf:"bytes,8,opt,name=processes,proto3" json:"processes,omitempty"`
	Cloud         *CloudInfo             `protobuf:"bytes,9,opt,name=cloud,proto3" json:"cloud,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemMetricsRes) Reset() {
	*x = SystemMetricsRes{}
	mi := &file_joblet_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemMetricsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMetricsRes) ProtoMessage() {}

func (x *SystemMetricsRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMetricsRes.ProtoReflect.Descriptor instead.
func (*SystemMetricsRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{33}
}

func (x *SystemMetricsRes) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *SystemMetricsRes) GetHost() *HostInfo {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *SystemMetricsRes) GetCpu() *CPUMetrics {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *SystemMetricsRes) GetMemory() *MemoryMetrics {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *SystemMetricsRes) GetDisks() []*DiskMetrics {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *SystemMetricsRes) GetNetworks() []*NetworkMetrics {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *SystemMetricsRes) GetIo() *IOMetrics {
	if x != nil {
		return x.Io
	}
	return nil
}

func (x *SystemMetricsRes) GetProcesses() *ProcessMetrics {
	if x != nil {
		return x.Processes
	}
	return nil
}

func (x *SystemMetricsRes) GetCloud() *CloudInfo {
	if x != nil {
		return x.Cloud
	}
	return nil
}

type StreamMetricsReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IntervalSeconds int32                  `protobuf:"varint,1,opt,name=intervalSeconds,proto3" json:"intervalSeconds,omitempty"` // How often to send updates (default: 5)
	MetricTypes     []string               `protobuf:"bytes,2,rep,name=metricTypes,proto3" json:"metricTypes,omitempty"`          // Optional: filter by types
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StreamMetricsReq) Reset() {
	*x = StreamMetricsReq{}
	mi := &file_joblet_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMetricsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMetricsReq) ProtoMessage() {}

func (x *StreamMetricsReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMetricsReq.ProtoReflect.Descriptor instead.
func (*StreamMetricsReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{34}
}

func (x *StreamMetricsReq) GetIntervalSeconds() int32 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

func (x *StreamMetricsReq) GetMetricTypes() []string {
	if x != nil {
		return x.MetricTypes
	}
	return nil
}

type HostInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Hostname        string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Os              string                 `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	Platform        string                 `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	PlatformFamily  string                 `protobuf:"bytes,4,opt,name=platformFamily,proto3" json:"platformFamily,omitempty"`
	PlatformVersion string                 `protobuf:"bytes,5,opt,name=platformVersion,proto3" json:"platformVersion,omitempty"`
	KernelVersion   string                 `protobuf:"bytes,6,opt,name=kernelVersion,proto3" json:"kernelVersion,omitempty"`
	KernelArch      string                 `protobuf:"bytes,7,opt,name=kernelArch,proto3" json:"kernelArch,omitempty"`
	Architecture    string                 `protobuf:"bytes,8,opt,name=architecture,proto3" json:"architecture,omitempty"`
	CpuCount        int32                  `protobuf:"varint,9,opt,name=cpuCount,proto3" json:"cpuCount,omitempty"`
	TotalMemory     int64                  `protobuf:"varint,10,opt,name=totalMemory,proto3" json:"totalMemory,omitempty"`
	BootTime        string                 `protobuf:"bytes,11,opt,name=bootTime,proto3" json:"bootTime,omitempty"`
	Uptime          int64                  `protobuf:"varint,12,opt,name=uptime,proto3" json:"uptime,omitempty"`
	NodeId          string                 `protobuf:"bytes,13,opt,name=nodeId,proto3" json:"nodeId,omitempty"`             // Unique node identifier (UUID)
	ServerIPs       []string               `protobuf:"bytes,14,rep,name=serverIPs,proto3" json:"serverIPs,omitempty"`       // Server IP addresses (can have multiple interfaces)
	MacAddresses    []string               `protobuf:"bytes,15,rep,name=macAddresses,proto3" json:"macAddresses,omitempty"` // MAC addresses for network interfaces
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	mi := &file_joblet_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{35}
}

func (x *HostInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *HostInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *HostInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *HostInfo) GetPlatformFamily() string {
	if x != nil {
		return x.PlatformFamily
	}
	return ""
}

func (x *HostInfo) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *HostInfo) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *HostInfo) GetKernelArch() string {
	if x != nil {
		return x.KernelArch
	}
	return ""
}

func (x *HostInfo) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *HostInfo) GetCpuCount() int32 {
	if x != nil {
		return x.CpuCount
	}
	return 0
}

func (x *HostInfo) GetTotalMemory() int64 {
	if x != nil {
		return x.TotalMemory
	}
	return 0
}

func (x *HostInfo) GetBootTime() string {
	if x != nil {
		return x.BootTime
	}
	return ""
}

func (x *HostInfo) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *HostInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *HostInfo) GetServerIPs() []string {
	if x != nil {
		return x.ServerIPs
	}
	return nil
}

func (x *HostInfo) GetMacAddresses() []string {
	if x != nil {
		return x.MacAddresses
	}
	return nil
}

type CPUMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cores         int32                  `protobuf:"varint,1,opt,name=cores,proto3" json:"cores,omitempty"`
	UsagePercent  float64                `protobuf:"fixed64,2,opt,name=usagePercent,proto3" json:"usagePercent,omitempty"`
	UserTime      float64                `protobuf:"fixed64,3,opt,name=userTime,proto3" json:"userTime,omitempty"`
	SystemTime    float64                `protobuf:"fixed64,4,opt,name=systemTime,proto3" json:"systemTime,omitempty"`
	IdleTime      float64                `protobuf:"fixed64,5,opt,name=idleTime,proto3" json:"idleTime,omitempty"`
	IoWaitTime    float64                `protobuf:"fixed64,6,opt,name=ioWaitTime,proto3" json:"ioWaitTime,omitempty"`
	StealTime     float64                `protobuf:"fixed64,7,opt,name=stealTime,proto3" json:"stealTime,omitempty"`
	LoadAverage   []float64              `protobuf:"fixed64,8,rep,packed,name=loadAverage,proto3" json:"loadAverage,omitempty"` // 1, 5, 15 min load
	PerCoreUsage  []float64              `protobuf:"fixed64,9,rep,packed,name=perCoreUsage,proto3" json:"perCoreUsage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPUMetrics) Reset() {
	*x = CPUMetrics{}
	mi := &file_joblet_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUMetrics) ProtoMessage() {}

func (x *CPUMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUMetrics.ProtoReflect.Descriptor instead.
func (*CPUMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{36}
}

func (x *CPUMetrics) GetCores() int32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *CPUMetrics) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

func (x *CPUMetrics) GetUserTime() float64 {
	if x != nil {
		return x.UserTime
	}
	return 0
}

func (x *CPUMetrics) GetSystemTime() float64 {
	if x != nil {
		return x.SystemTime
	}
	return 0
}

func (x *CPUMetrics) GetIdleTime() float64 {
	if x != nil {
		return x.IdleTime
	}
	return 0
}

func (x *CPUMetrics) GetIoWaitTime() float64 {
	if x != nil {
		return x.IoWaitTime
	}
	return 0
}

func (x *CPUMetrics) GetStealTime() float64 {
	if x != nil {
		return x.StealTime
	}
	return 0
}

func (x *CPUMetrics) GetLoadAverage() []float64 {
	if x != nil {
		return x.LoadAverage
	}
	return nil
}

func (x *CPUMetrics) GetPerCoreUsage() []float64 {
	if x != nil {
		return x.PerCoreUsage
	}
	return nil
}

type MemoryMetrics struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TotalBytes     int64                  `protobuf:"varint,1,opt,name=totalBytes,proto3" json:"totalBytes,omitempty"`
	UsedBytes      int64                  `protobuf:"varint,2,opt,name=usedBytes,proto3" json:"usedBytes,omitempty"`
	FreeBytes      int64                  `protobuf:"varint,3,opt,name=freeBytes,proto3" json:"freeBytes,omitempty"`
	AvailableBytes int64                  `protobuf:"varint,4,opt,name=availableBytes,proto3" json:"availableBytes,omitempty"`
	UsagePercent   float64                `protobuf:"fixed64,5,opt,name=usagePercent,proto3" json:"usagePercent,omitempty"`
	CachedBytes    int64                  `protobuf:"varint,6,opt,name=cachedBytes,proto3" json:"cachedBytes,omitempty"`
	BufferedBytes  int64                  `protobuf:"varint,7,opt,name=bufferedBytes,proto3" json:"bufferedBytes,omitempty"`
	SwapTotal      int64                  `protobuf:"varint,8,opt,name=swapTotal,proto3" json:"swapTotal,omitempty"`
	SwapUsed       int64                  `protobuf:"varint,9,opt,name=swapUsed,proto3" json:"swapUsed,omitempty"`
	SwapFree       int64                  `protobuf:"varint,10,opt,name=swapFree,proto3" json:"swapFree,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MemoryMetrics) Reset() {
	*x = MemoryMetrics{}
	mi := &file_joblet_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryMetrics) ProtoMessage() {}

func (x *MemoryMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryMetrics.ProtoReflect.Descriptor instead.
func (*MemoryMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{37}
}

func (x *MemoryMetrics) GetTotalBytes() int64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *MemoryMetrics) GetUsedBytes() int64 {
	if x != nil {
		return x.UsedBytes
	}
	return 0
}

func (x *MemoryMetrics) GetFreeBytes() int64 {
	if x != nil {
		return x.FreeBytes
	}
	return 0
}

func (x *MemoryMetrics) GetAvailableBytes() int64 {
	if x != nil {
		return x.AvailableBytes
	}
	return 0
}

func (x *MemoryMetrics) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

func (x *MemoryMetrics) GetCachedBytes() int64 {
	if x != nil {
		return x.CachedBytes
	}
	return 0
}

func (x *MemoryMetrics) GetBufferedBytes() int64 {
	if x != nil {
		return x.BufferedBytes
	}
	return 0
}

func (x *MemoryMetrics) GetSwapTotal() int64 {
	if x != nil {
		return x.SwapTotal
	}
	return 0
}

func (x *MemoryMetrics) GetSwapUsed() int64 {
	if x != nil {
		return x.SwapUsed
	}
	return 0
}

func (x *MemoryMetrics) GetSwapFree() int64 {
	if x != nil {
		return x.SwapFree
	}
	return 0
}

type DiskMetrics struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Device             string                 `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	MountPoint         string                 `protobuf:"bytes,2,opt,name=mountPoint,proto3" json:"mountPoint,omitempty"`
	Filesystem         string                 `protobuf:"bytes,3,opt,name=filesystem,proto3" json:"filesystem,omitempty"`
	TotalBytes         int64                  `protobuf:"varint,4,opt,name=totalBytes,proto3" json:"totalBytes,omitempty"`
	UsedBytes          int64                  `protobuf:"varint,5,opt,name=usedBytes,proto3" json:"usedBytes,omitempty"`
	FreeBytes          int64                  `protobuf:"varint,6,opt,name=freeBytes,proto3" json:"freeBytes,omitempty"`
	UsagePercent       float64                `protobuf:"fixed64,7,opt,name=usagePercent,proto3" json:"usagePercent,omitempty"`
	InodesTotal        int64                  `protobuf:"varint,8,opt,name=inodesTotal,proto3" json:"inodesTotal,omitempty"`
	InodesUsed         int64                  `protobuf:"varint,9,opt,name=inodesUsed,proto3" json:"inodesUsed,omitempty"`
	InodesFree         int64                  `protobuf:"varint,10,opt,name=inodesFree,proto3" json:"inodesFree,omitempty"`
	InodesUsagePercent float64                `protobuf:"fixed64,11,opt,name=inodesUsagePercent,proto3" json:"inodesUsagePercent,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DiskMetrics) Reset() {
	*x = DiskMetrics{}
	mi := &file_joblet_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskMetrics) ProtoMessage() {}

func (x *DiskMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskMetrics.ProtoReflect.Descriptor instead.
func (*DiskMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{38}
}

func (x *DiskMetrics) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DiskMetrics) GetMountPoint() string {
	if x != nil {
		return x.MountPoint
	}
	return ""
}

func (x *DiskMetrics) GetFilesystem() string {
	if x != nil {
		return x.Filesystem
	}
	return ""
}

func (x *DiskMetrics) GetTotalBytes() int64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *DiskMetrics) GetUsedBytes() int64 {
	if x != nil {
		return x.UsedBytes
	}
	return 0
}

func (x *DiskMetrics) GetFreeBytes() int64 {
	if x != nil {
		return x.FreeBytes
	}
	return 0
}

func (x *DiskMetrics) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

func (x *DiskMetrics) GetInodesTotal() int64 {
	if x != nil {
		return x.InodesTotal
	}
	return 0
}

func (x *DiskMetrics) GetInodesUsed() int64 {
	if x != nil {
		return x.InodesUsed
	}
	return 0
}

func (x *DiskMetrics) GetInodesFree() int64 {
	if x != nil {
		return x.InodesFree
	}
	return 0
}

func (x *DiskMetrics) GetInodesUsagePercent() float64 {
	if x != nil {
		return x.InodesUsagePercent
	}
	return 0
}

type NetworkMetrics struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Interface       string                 `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	BytesReceived   int64                  `protobuf:"varint,2,opt,name=bytesReceived,proto3" json:"bytesReceived,omitempty"`
	BytesSent       int64                  `protobuf:"varint,3,opt,name=bytesSent,proto3" json:"bytesSent,omitempty"`
	PacketsReceived int64                  `protobuf:"varint,4,opt,name=packetsReceived,proto3" json:"packetsReceived,omitempty"`
	PacketsSent     int64                  `protobuf:"varint,5,opt,name=packetsSent,proto3" json:"packetsSent,omitempty"`
	ErrorsIn        int64                  `protobuf:"varint,6,opt,name=errorsIn,proto3" json:"errorsIn,omitempty"`
	ErrorsOut       int64                  `protobuf:"varint,7,opt,name=errorsOut,proto3" json:"errorsOut,omitempty"`
	DropsIn         int64                  `protobuf:"varint,8,opt,name=dropsIn,proto3" json:"dropsIn,omitempty"`
	DropsOut        int64                  `protobuf:"varint,9,opt,name=dropsOut,proto3" json:"dropsOut,omitempty"`
	ReceiveRate     float64                `protobuf:"fixed64,10,opt,name=receiveRate,proto3" json:"receiveRate,omitempty"`   // bytes/sec
	TransmitRate    float64                `protobuf:"fixed64,11,opt,name=transmitRate,proto3" json:"transmitRate,omitempty"` // bytes/sec
	IpAddresses     []string               `protobuf:"bytes,12,rep,name=ipAddresses,proto3" json:"ipAddresses,omitempty"`     // IP addresses assigned to this interface (e.g., ["192.168.1.10", "fe80::1"])
	MacAddress      string                 `protobuf:"bytes,13,opt,name=macAddress,proto3" json:"macAddress,omitempty"`       // Hardware MAC address (e.g., "00:1a:2b:3c:4d:5e")
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NetworkMetrics) Reset() {
	*x = NetworkMetrics{}
	mi := &file_joblet_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkMetrics) ProtoMessage() {}

func (x *NetworkMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkMetrics.ProtoReflect.Descriptor instead.
func (*NetworkMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{39}
}

func (x *NetworkMetrics) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *NetworkMetrics) GetBytesReceived() int64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *NetworkMetrics) GetBytesSent() int64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *NetworkMetrics) GetPacketsReceived() int64 {
	if x != nil {
		return x.PacketsReceived
	}
	return 0
}

func (x *NetworkMetrics) GetPacketsSent() int64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *NetworkMetrics) GetErrorsIn() int64 {
	if x != nil {
		return x.ErrorsIn
	}
	return 0
}

func (x *NetworkMetrics) GetErrorsOut() int64 {
	if x != nil {
		return x.ErrorsOut
	}
	return 0
}

func (x *NetworkMetrics) GetDropsIn() int64 {
	if x != nil {
		return x.DropsIn
	}
	return 0
}

func (x *NetworkMetrics) GetDropsOut() int64 {
	if x != nil {
		return x.DropsOut
	}
	return 0
}

func (x *NetworkMetrics) GetReceiveRate() float64 {
	if x != nil {
		return x.ReceiveRate
	}
	return 0
}

func (x *NetworkMetrics) GetTransmitRate() float64 {
	if x != nil {
		return x.TransmitRate
	}
	return 0
}

func (x *NetworkMetrics) GetIpAddresses() []string {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

func (x *NetworkMetrics) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

type IOMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalReads    int64                  `protobuf:"varint,1,opt,name=totalReads,proto3" json:"totalReads,omitempty"`
	TotalWrites   int64                  `protobuf:"varint,2,opt,name=totalWrites,proto3" json:"totalWrites,omitempty"`
	ReadBytes     int64                  `protobuf:"varint,3,opt,name=readBytes,proto3" json:"readBytes,omitempty"`
	WriteBytes    int64                  `protobuf:"varint,4,opt,name=writeBytes,proto3" json:"writeBytes,omitempty"`
	ReadRate      float64                `protobuf:"fixed64,5,opt,name=readRate,proto3" json:"readRate,omitempty"`   // bytes/sec
	WriteRate     float64                `protobuf:"fixed64,6,opt,name=writeRate,proto3" json:"writeRate,omitempty"` // bytes/sec
	DiskIO        []*DiskIOMetrics       `protobuf:"bytes,7,rep,name=diskIO,proto3" json:"diskIO,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IOMetrics) Reset() {
	*x = IOMetrics{}
	mi := &file_joblet_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IOMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IOMetrics) ProtoMessage() {}

func (x *IOMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IOMetrics.ProtoReflect.Descriptor instead.
func (*IOMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{40}
}

func (x *IOMetrics) GetTotalReads() int64 {
	if x != nil {
		return x.TotalReads
	}
	return 0
}

func (x *IOMetrics) GetTotalWrites() int64 {
	if x != nil {
		return x.TotalWrites
	}
	return 0
}

func (x *IOMetrics) GetReadBytes() int64 {
	if x != nil {
		return x.ReadBytes
	}
	return 0
}

func (x *IOMetrics) GetWriteBytes() int64 {
	if x != nil {
		return x.WriteBytes
	}
	return 0
}

func (x *IOMetrics) GetReadRate() float64 {
	if x != nil {
		return x.ReadRate
	}
	return 0
}

func (x *IOMetrics) GetWriteRate() float64 {
	if x != nil {
		return x.WriteRate
	}
	return 0
}

func (x *IOMetrics) GetDiskIO() []*DiskIOMetrics {
	if x != nil {
		return x.DiskIO
	}
	return nil
}

type DiskIOMetrics struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Device          string                 `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	ReadsCompleted  int64                  `protobuf:"varint,2,opt,name=readsCompleted,proto3" json:"readsCompleted,omitempty"`
	WritesCompleted int64                  `protobuf:"varint,3,opt,name=writesCompleted,proto3" json:"writesCompleted,omitempty"`
	ReadBytes       int64                  `protobuf:"varint,4,opt,name=readBytes,proto3" json:"readBytes,omitempty"`
	WriteBytes      int64                  `protobuf:"varint,5,opt,name=writeBytes,proto3" json:"writeBytes,omitempty"`
	ReadTime        int64                  `protobuf:"varint,6,opt,name=readTime,proto3" json:"readTime,omitempty"`        // ms
	WriteTime       int64                  `protobuf:"varint,7,opt,name=writeTime,proto3" json:"writeTime,omitempty"`      // ms
	IoTime          int64                  `protobuf:"varint,8,opt,name=ioTime,proto3" json:"ioTime,omitempty"`            // ms
	Utilization     float64                `protobuf:"fixed64,9,opt,name=utilization,proto3" json:"utilization,omitempty"` // percent
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DiskIOMetrics) Reset() {
	*x = DiskIOMetrics{}
	mi := &file_joblet_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskIOMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskIOMetrics) ProtoMessage() {}

func (x *DiskIOMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskIOMetrics.ProtoReflect.Descriptor instead.
func (*DiskIOMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{41}
}

func (x *DiskIOMetrics) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DiskIOMetrics) GetReadsCompleted() int64 {
	if x != nil {
		return x.ReadsCompleted
	}
	return 0
}

func (x *DiskIOMetrics) GetWritesCompleted() int64 {
	if x != nil {
		return x.WritesCompleted
	}
	return 0
}

func (x *DiskIOMetrics) GetReadBytes() int64 {
	if x != nil {
		return x.ReadBytes
	}
	return 0
}

func (x *DiskIOMetrics) GetWriteBytes() int64 {
	if x != nil {
		return x.WriteBytes
	}
	return 0
}

func (x *DiskIOMetrics) GetReadTime() int64 {
	if x != nil {
		return x.ReadTime
	}
	return 0
}

func (x *DiskIOMetrics) GetWriteTime() int64 {
	if x != nil {
		return x.WriteTime
	}
	return 0
}

func (x *DiskIOMetrics) GetIoTime() int64 {
	if x != nil {
		return x.IoTime
	}
	return 0
}

func (x *DiskIOMetrics) GetUtilization() float64 {
	if x != nil {
		return x.Utilization
	}
	return 0
}

type ProcessMetrics struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TotalProcesses    int32                  `protobuf:"varint,1,opt,name=totalProcesses,proto3" json:"totalProcesses,omitempty"`
	RunningProcesses  int32                  `protobuf:"varint,2,opt,name=runningProcesses,proto3" json:"runningProcesses,omitempty"`
	SleepingProcesses int32                  `protobuf:"varint,3,opt,name=sleepingProcesses,proto3" json:"sleepingProcesses,omitempty"`
	StoppedProcesses  int32                  `protobuf:"varint,4,opt,name=stoppedProcesses,proto3" json:"stoppedProcesses,omitempty"`
	ZombieProcesses   int32                  `protobuf:"varint,5,opt,name=zombieProcesses,proto3" json:"zombieProcesses,omitempty"`
	TotalThreads      int32                  `protobuf:"varint,6,opt,name=totalThreads,proto3" json:"totalThreads,omitempty"`
	TopByCPU          []*ProcessInfo         `protobuf:"bytes,7,rep,name=topByCPU,proto3" json:"topByCPU,omitempty"`
	TopByMemory       []*ProcessInfo         `protobuf:"bytes,8,rep,name=topByMemory,proto3" json:"topByMemory,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ProcessMetrics) Reset() {
	*x = ProcessMetrics{}
	mi := &file_joblet_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessMetrics) ProtoMessage() {}

func (x *ProcessMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessMetrics.ProtoReflect.Descriptor instead.
func (*ProcessMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{42}
}

func (x *ProcessMetrics) GetTotalProcesses() int32 {
	if x != nil {
		return x.TotalProcesses
	}
	return 0
}

func (x *ProcessMetrics) GetRunningProcesses() int32 {
	if x != nil {
		return x.RunningProcesses
	}
	return 0
}

func (x *ProcessMetrics) GetSleepingProcesses() int32 {
	if x != nil {
		return x.SleepingProcesses
	}
	return 0
}

func (x *ProcessMetrics) GetStoppedProcesses() int32 {
	if x != nil {
		return x.StoppedProcesses
	}
	return 0
}

func (x *ProcessMetrics) GetZombieProcesses() int32 {
	if x != nil {
		return x.ZombieProcesses
	}
	return 0
}

func (x *ProcessMetrics) GetTotalThreads() int32 {
	if x != nil {
		return x.TotalThreads
	}
	return 0
}

func (x *ProcessMetrics) GetTopByCPU() []*ProcessInfo {
	if x != nil {
		return x.TopByCPU
	}
	return nil
}

func (x *ProcessMetrics) GetTopByMemory() []*ProcessInfo {
	if x != nil {
		return x.TopByMemory
	}
	return nil
}

type ProcessInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           int32                  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Ppid          int32                  `protobuf:"varint,2,opt,name=ppid,proto3" json:"ppid,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Command       string                 `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	CpuPercent    float64                `protobuf:"fixed64,5,opt,name=cpuPercent,proto3" json:"cpuPercent,omitempty"`
	MemoryPercent float64                `protobuf:"fixed64,6,opt,name=memoryPercent,proto3" json:"memoryPercent,omitempty"`
	MemoryBytes   int64                  `protobuf:"varint,7,opt,name=memoryBytes,proto3" json:"memoryBytes,omitempty"`
	Status        string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	StartTime     string                 `protobuf:"bytes,9,opt,name=startTime,proto3" json:"startTime,omitempty"`
	User          string                 `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessInfo) Reset() {
	*x = ProcessInfo{}
	mi := &file_joblet_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInfo) ProtoMessage() {}

func (x *ProcessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInfo.ProtoReflect.Descriptor instead.
func (*ProcessInfo) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{43}
}

func (x *ProcessInfo) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ProcessInfo) GetPpid() int32 {
	if x != nil {
		return x.Ppid
	}
	return 0
}

func (x *ProcessInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcessInfo) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ProcessInfo) GetCpuPercent() float64 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *ProcessInfo) GetMemoryPercent() float64 {
	if x != nil {
		return x.MemoryPercent
	}
	return 0
}

func (x *ProcessInfo) GetMemoryBytes() int64 {
	if x != nil {
		return x.MemoryBytes
	}
	return 0
}

func (x *ProcessInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessInfo) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ProcessInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type CloudInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Provider       string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region         string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Zone           string                 `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`
	InstanceID     string                 `protobuf:"bytes,4,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	InstanceType   string                 `protobuf:"bytes,5,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	HypervisorType string                 `protobuf:"bytes,6,opt,name=hypervisorType,proto3" json:"hypervisorType,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CloudInfo) Reset() {
	*x = CloudInfo{}
	mi := &file_joblet_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudInfo) ProtoMessage() {}

func (x *CloudInfo) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudInfo.ProtoReflect.Descriptor instead.
func (*CloudInfo) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{44}
}

func (x *CloudInfo) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CloudInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CloudInfo) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *CloudInfo) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

func (x *CloudInfo) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *CloudInfo) GetHypervisorType() string {
	if x != nil {
		return x.HypervisorType
	}
	return ""
}

func (x *CloudInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ServerVersionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`                            // Version (e.g., "v1.2.3")
	GitCommit     string                 `protobuf:"bytes,2,opt,name=git_commit,json=gitCommit,proto3" json:"git_commit,omitempty"`       // Git commit
	GitTag        string                 `protobuf:"bytes,3,opt,name=git_tag,json=gitTag,proto3" json:"git_tag,omitempty"`                // Git tag
	BuildDate     string                 `protobuf:"bytes,4,opt,name=build_date,json=buildDate,proto3" json:"build_date,omitempty"`       // Build date
	Component     string                 `protobuf:"bytes,5,opt,name=component,proto3" json:"component,omitempty"`                        // Component ("joblet")
	GoVersion     string                 `protobuf:"bytes,6,opt,name=go_version,json=goVersion,proto3" json:"go_version,omitempty"`       // Go version
	Platform      string                 `protobuf:"bytes,7,opt,name=platform,proto3" json:"platform,omitempty"`                          // OS/arch (e.g., "linux/amd64")
	ProtoCommit   string                 `protobuf:"bytes,8,opt,name=proto_commit,json=protoCommit,proto3" json:"proto_commit,omitempty"` // Proto repository commit hash
	ProtoTag      string                 `protobuf:"bytes,9,opt,name=proto_tag,json=protoTag,proto3" json:"proto_tag,omitempty"`          // Proto repository tag
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerVersionInfo) Reset() {
	*x = ServerVersionInfo{}
	mi := &file_joblet_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerVersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerVersionInfo) ProtoMessage() {}

func (x *ServerVersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerVersionInfo.ProtoReflect.Descriptor instead.
func (*ServerVersionInfo) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{45}
}

func (x *ServerVersionInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServerVersionInfo) GetGitCommit() string {
	if x != nil {
		return x.GitCommit
	}
	return ""
}

func (x *ServerVersionInfo) GetGitTag() string {
	if x != nil {
		return x.GitTag
	}
	return ""
}

func (x *ServerVersionInfo) GetBuildDate() string {
	if x != nil {
		return x.BuildDate
	}
	return ""
}

func (x *ServerVersionInfo) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *ServerVersionInfo) GetGoVersion() string {
	if x != nil {
		return x.GoVersion
	}
	return ""
}

func (x *ServerVersionInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ServerVersionInfo) GetProtoCommit() string {
	if x != nil {
		return x.ProtoCommit
	}
	return ""
}

func (x *ServerVersionInfo) GetProtoTag() string {
	if x != nil {
		return x.ProtoTag
	}
	return ""
}

// Runtime management messages
type RuntimesRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Runtimes      []*RuntimeInfo         `protobuf:"bytes,1,rep,name=runtimes,proto3" json:"runtimes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimesRes) Reset() {
	*x = RuntimesRes{}
	mi := &file_joblet_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimesRes) ProtoMessage() {}

func (x *RuntimesRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimesRes.ProtoReflect.Descriptor instead.
func (*RuntimesRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{46}
}

func (x *RuntimesRes) GetRuntimes() []*RuntimeInfo {
	if x != nil {
		return x.Runtimes
	}
	return nil
}

type RuntimeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`               // Runtime name (e.g., "python-3.11-ml")
	Language      string                 `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`       // Language (e.g., "python")
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`         // Version (e.g., "3.11")
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` // Description
	SizeBytes     int64                  `protobuf:"varint,5,opt,name=sizeBytes,proto3" json:"sizeBytes,omitempty"`    // Size in bytes
	Packages      []string               `protobuf:"bytes,6,rep,name=packages,proto3" json:"packages,omitempty"`       // Installed packages
	Available     bool                   `protobuf:"varint,7,opt,name=available,proto3" json:"available,omitempty"`    // Ready to use
	Requirements  *RuntimeRequirements   `protobuf:"bytes,8,opt,name=requirements,proto3" json:"requirements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeInfo) Reset() {
	*x = RuntimeInfo{}
	mi := &file_joblet_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfo) ProtoMessage() {}

func (x *RuntimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfo.ProtoReflect.Descriptor instead.
func (*RuntimeInfo) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{47}
}

func (x *RuntimeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuntimeInfo) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *RuntimeInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RuntimeInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RuntimeInfo) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *RuntimeInfo) GetPackages() []string {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *RuntimeInfo) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *RuntimeInfo) GetRequirements() *RuntimeRequirements {
	if x != nil {
		return x.Requirements
	}
	return nil
}

type RuntimeRequirements struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Architectures []string               `protobuf:"bytes,1,rep,name=architectures,proto3" json:"architectures,omitempty"` // Supported archs
	Gpu           bool                   `protobuf:"varint,2,opt,name=gpu,proto3" json:"gpu,omitempty"`                    // Needs GPU
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeRequirements) Reset() {
	*x = RuntimeRequirements{}
	mi := &file_joblet_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeRequirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeRequirements) ProtoMessage() {}

func (x *RuntimeRequirements) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeRequirements.ProtoReflect.Descriptor instead.
func (*RuntimeRequirements) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{48}
}

func (x *RuntimeRequirements) GetArchitectures() []string {
	if x != nil {
		return x.Architectures
	}
	return nil
}

func (x *RuntimeRequirements) GetGpu() bool {
	if x != nil {
		return x.Gpu
	}
	return false
}

type RuntimeInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Runtime       string                 `protobuf:"bytes,1,opt,name=runtime,proto3" json:"runtime,omitempty"` // e.g., "python-3.11-ml"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeInfoReq) Reset() {
	*x = RuntimeInfoReq{}
	mi := &file_joblet_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfoReq) ProtoMessage() {}

func (x *RuntimeInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfoReq.ProtoReflect.Descriptor instead.
func (*RuntimeInfoReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{49}
}

func (x *RuntimeInfoReq) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

type RuntimeInfoRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Runtime       *RuntimeInfo           `protobuf:"bytes,1,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Found         bool                   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeInfoRes) Reset() {
	*x = RuntimeInfoRes{}
	mi := &file_joblet_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfoRes) ProtoMessage() {}

func (x *RuntimeInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfoRes.ProtoReflect.Descriptor instead.
func (*RuntimeInfoRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{50}
}

func (x *RuntimeInfoRes) GetRuntime() *RuntimeInfo {
	if x != nil {
		return x.Runtime
	}
	return nil
}

func (x *RuntimeInfoRes) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type RuntimeTestReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Runtime       string                 `protobuf:"bytes,1,opt,name=runtime,proto3" json:"runtime,omitempty"` // e.g., "python-3.11-ml"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeTestReq) Reset() {
	*x = RuntimeTestReq{}
	mi := &file_joblet_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeTestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeTestReq) ProtoMessage() {}

func (x *RuntimeTestReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeTestReq.ProtoReflect.Descriptor instead.
func (*RuntimeTestReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{51}
}

func (x *RuntimeTestReq) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

type RuntimeTestRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Output        string                 `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	ExitCode      int32                  `protobuf:"varint,5,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeTestRes) Reset() {
	*x = RuntimeTestRes{}
	mi := &file_joblet_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeTestRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeTestRes) ProtoMessage() {}

func (x *RuntimeTestRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeTestRes.ProtoReflect.Descriptor instead.
func (*RuntimeTestRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{52}
}

func (x *RuntimeTestRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RuntimeTestRes) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *RuntimeTestRes) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RuntimeTestRes) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type RunJobRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Job name
	Command           string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Args              []string               `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	MaxCpu            int32                  `protobuf:"varint,4,opt,name=maxCpu,proto3" json:"maxCpu,omitempty"`
	CpuCores          string                 `protobuf:"bytes,5,opt,name=cpuCores,proto3" json:"cpuCores,omitempty"`
	MaxMemory         int32                  `protobuf:"varint,6,opt,name=maxMemory,proto3" json:"maxMemory,omitempty"`
	MaxIobps          int32                  `protobuf:"varint,7,opt,name=maxIobps,proto3" json:"maxIobps,omitempty"`
	Uploads           []*FileUpload          `protobuf:"bytes,8,rep,name=uploads,proto3" json:"uploads,omitempty"`
	Schedule          string                 `protobuf:"bytes,9,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Network           string                 `protobuf:"bytes,10,opt,name=network,proto3" json:"network,omitempty"`
	Volumes           []string               `protobuf:"bytes,11,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Runtime           string                 `protobuf:"bytes,12,opt,name=runtime,proto3" json:"runtime,omitempty"`
	WorkDir           string                 `protobuf:"bytes,13,opt,name=workDir,proto3" json:"workDir,omitempty"`
	Environment       map[string]string      `protobuf:"bytes,14,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SecretEnvironment map[string]string      `protobuf:"bytes,18,rep,name=secret_environment,json=secretEnvironment,proto3" json:"secret_environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Secret env vars
	// Workflow fields (when job is part of workflow)
	WorkflowUuid string            `protobuf:"bytes,15,opt,name=workflowUuid,proto3" json:"workflowUuid,omitempty"` // Workflow UUID
	JobUuid      string            `protobuf:"bytes,16,opt,name=jobUuid,proto3" json:"jobUuid,omitempty"`           // Job UUID
	Requirements []*JobRequirement `protobuf:"bytes,17,rep,name=requirements,proto3" json:"requirements,omitempty"`
	// GPU fields (new GPU support)
	GpuCount      int32 `protobuf:"varint,19,opt,name=gpu_count,json=gpuCount,proto3" json:"gpu_count,omitempty"`            // How many GPUs requested
	GpuMemoryMb   int32 `protobuf:"varint,20,opt,name=gpu_memory_mb,json=gpuMemoryMb,proto3" json:"gpu_memory_mb,omitempty"` // Minimum GPU memory needed (MB)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunJobRequest) Reset() {
	*x = RunJobRequest{}
	mi := &file_joblet_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunJobRequest) ProtoMessage() {}

func (x *RunJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunJobRequest.ProtoReflect.Descriptor instead.
func (*RunJobRequest) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{53}
}

func (x *RunJobRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunJobRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *RunJobRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *RunJobRequest) GetMaxCpu() int32 {
	if x != nil {
		return x.MaxCpu
	}
	return 0
}

func (x *RunJobRequest) GetCpuCores() string {
	if x != nil {
		return x.CpuCores
	}
	return ""
}

func (x *RunJobRequest) GetMaxMemory() int32 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *RunJobRequest) GetMaxIobps() int32 {
	if x != nil {
		return x.MaxIobps
	}
	return 0
}

func (x *RunJobRequest) GetUploads() []*FileUpload {
	if x != nil {
		return x.Uploads
	}
	return nil
}

func (x *RunJobRequest) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *RunJobRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *RunJobRequest) GetVolumes() []string {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *RunJobRequest) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

func (x *RunJobRequest) GetWorkDir() string {
	if x != nil {
		return x.WorkDir
	}
	return ""
}

func (x *RunJobRequest) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *RunJobRequest) GetSecretEnvironment() map[string]string {
	if x != nil {
		return x.SecretEnvironment
	}
	return nil
}

func (x *RunJobRequest) GetWorkflowUuid() string {
	if x != nil {
		return x.WorkflowUuid
	}
	return ""
}

func (x *RunJobRequest) GetJobUuid() string {
	if x != nil {
		return x.JobUuid
	}
	return ""
}

func (x *RunJobRequest) GetRequirements() []*JobRequirement {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *RunJobRequest) GetGpuCount() int32 {
	if x != nil {
		return x.GpuCount
	}
	return 0
}

func (x *RunJobRequest) GetGpuMemoryMb() int32 {
	if x != nil {
		return x.GpuMemoryMb
	}
	return 0
}

type RunJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobUuid       string                 `protobuf:"bytes,1,opt,name=jobUuid,proto3" json:"jobUuid,omitempty"` // Job UUID identifier
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Command       string                 `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	Args          []string               `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	MaxCpu        int32                  `protobuf:"varint,5,opt,name=maxCpu,proto3" json:"maxCpu,omitempty"`
	CpuCores      string                 `protobuf:"bytes,6,opt,name=cpuCores,proto3" json:"cpuCores,omitempty"`
	MaxMemory     int32                  `protobuf:"varint,7,opt,name=maxMemory,proto3" json:"maxMemory,omitempty"`
	MaxIobps      int32                  `protobuf:"varint,8,opt,name=maxIobps,proto3" json:"maxIobps,omitempty"`
	StartTime     string                 `protobuf:"bytes,9,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       string                 `protobuf:"bytes,10,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ExitCode      int32                  `protobuf:"varint,11,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	ScheduledTime string                 `protobuf:"bytes,12,opt,name=scheduledTime,proto3" json:"scheduledTime,omitempty"` // Schedule time
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunJobResponse) Reset() {
	*x = RunJobResponse{}
	mi := &file_joblet_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunJobResponse) ProtoMessage() {}

func (x *RunJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunJobResponse.ProtoReflect.Descriptor instead.
func (*RunJobResponse) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{54}
}

func (x *RunJobResponse) GetJobUuid() string {
	if x != nil {
		return x.JobUuid
	}
	return ""
}

func (x *RunJobResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RunJobResponse) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *RunJobResponse) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *RunJobResponse) GetMaxCpu() int32 {
	if x != nil {
		return x.MaxCpu
	}
	return 0
}

func (x *RunJobResponse) GetCpuCores() string {
	if x != nil {
		return x.CpuCores
	}
	return ""
}

func (x *RunJobResponse) GetMaxMemory() int32 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *RunJobResponse) GetMaxIobps() int32 {
	if x != nil {
		return x.MaxIobps
	}
	return 0
}

func (x *RunJobResponse) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *RunJobResponse) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *RunJobResponse) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *RunJobResponse) GetScheduledTime() string {
	if x != nil {
		return x.ScheduledTime
	}
	return ""
}

type JobRequirement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobUuid       string                 `protobuf:"bytes,1,opt,name=jobUuid,proto3" json:"jobUuid,omitempty"` // Job UUID identifier
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Expression    string                 `protobuf:"bytes,3,opt,name=expression,proto3" json:"expression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobRequirement) Reset() {
	*x = JobRequirement{}
	mi := &file_joblet_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRequirement) ProtoMessage() {}

func (x *JobRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRequirement.ProtoReflect.Descriptor instead.
func (*JobRequirement) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{55}
}

func (x *JobRequirement) GetJobUuid() string {
	if x != nil {
		return x.JobUuid
	}
	return ""
}

func (x *JobRequirement) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JobRequirement) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

type RunWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workflow      string                 `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"` // Workflow filename
	TotalJobs     int32                  `protobuf:"varint,2,opt,name=totalJobs,proto3" json:"totalJobs,omitempty"`
	JobOrder      []string               `protobuf:"bytes,3,rep,name=jobOrder,proto3" json:"jobOrder,omitempty"`
	YamlContent   string                 `protobuf:"bytes,4,opt,name=yamlContent,proto3" json:"yamlContent,omitempty"`     // YAML content
	WorkflowFiles []*FileUpload          `protobuf:"bytes,5,rep,name=workflowFiles,proto3" json:"workflowFiles,omitempty"` // Workflow files
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunWorkflowRequest) Reset() {
	*x = RunWorkflowRequest{}
	mi := &file_joblet_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunWorkflowRequest) ProtoMessage() {}

func (x *RunWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunWorkflowRequest.ProtoReflect.Descriptor instead.
func (*RunWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{56}
}

func (x *RunWorkflowRequest) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

func (x *RunWorkflowRequest) GetTotalJobs() int32 {
	if x != nil {
		return x.TotalJobs
	}
	return 0
}

func (x *RunWorkflowRequest) GetJobOrder() []string {
	if x != nil {
		return x.JobOrder
	}
	return nil
}

func (x *RunWorkflowRequest) GetYamlContent() string {
	if x != nil {
		return x.YamlContent
	}
	return ""
}

func (x *RunWorkflowRequest) GetWorkflowFiles() []*FileUpload {
	if x != nil {
		return x.WorkflowFiles
	}
	return nil
}

type RunWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowUuid  string                 `protobuf:"bytes,1,opt,name=workflowUuid,proto3" json:"workflowUuid,omitempty"` // Workflow UUID identifier
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunWorkflowResponse) Reset() {
	*x = RunWorkflowResponse{}
	mi := &file_joblet_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunWorkflowResponse) ProtoMessage() {}

func (x *RunWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunWorkflowResponse.ProtoReflect.Descriptor instead.
func (*RunWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{57}
}

func (x *RunWorkflowResponse) GetWorkflowUuid() string {
	if x != nil {
		return x.WorkflowUuid
	}
	return ""
}

func (x *RunWorkflowResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetWorkflowStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowUuid  string                 `protobuf:"bytes,1,opt,name=workflowUuid,proto3" json:"workflowUuid,omitempty"` // Workflow UUID identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowStatusRequest) Reset() {
	*x = GetWorkflowStatusRequest{}
	mi := &file_joblet_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowStatusRequest) ProtoMessage() {}

func (x *GetWorkflowStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowStatusRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowStatusRequest) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{58}
}

func (x *GetWorkflowStatusRequest) GetWorkflowUuid() string {
	if x != nil {
		return x.WorkflowUuid
	}
	return ""
}

type GetWorkflowStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workflow      *WorkflowInfo          `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Jobs          []*WorkflowJob         `protobuf:"bytes,2,rep,name=jobs,proto3" json:"jobs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowStatusResponse) Reset() {
	*x = GetWorkflowStatusResponse{}
	mi := &file_joblet_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowStatusResponse) ProtoMessage() {}

func (x *GetWorkflowStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowStatusResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowStatusResponse) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{59}
}

func (x *GetWorkflowStatusResponse) GetWorkflow() *WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *GetWorkflowStatusResponse) GetJobs() []*WorkflowJob {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type ListWorkflowsRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	IncludeCompleted bool                   `protobuf:"varint,1,opt,name=includeCompleted,proto3" json:"includeCompleted,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListWorkflowsRequest) Reset() {
	*x = ListWorkflowsRequest{}
	mi := &file_joblet_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsRequest) ProtoMessage() {}

func (x *ListWorkflowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowsRequest) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{60}
}

func (x *ListWorkflowsRequest) GetIncludeCompleted() bool {
	if x != nil {
		return x.IncludeCompleted
	}
	return false
}

type ListWorkflowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workflows     []*WorkflowInfo        `protobuf:"bytes,1,rep,name=workflows,proto3" json:"workflows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowsResponse) Reset() {
	*x = ListWorkflowsResponse{}
	mi := &file_joblet_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsResponse) ProtoMessage() {}

func (x *ListWorkflowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsResponse.ProtoReflect.Descriptor instead.
func (*ListWorkflowsResponse) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{61}
}

func (x *ListWorkflowsResponse) GetWorkflows() []*WorkflowInfo {
	if x != nil {
		return x.Workflows
	}
	return nil
}

type GetWorkflowJobsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowUuid  string                 `protobuf:"bytes,1,opt,name=workflowUuid,proto3" json:"workflowUuid,omitempty"` // Workflow UUID identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowJobsRequest) Reset() {
	*x = GetWorkflowJobsRequest{}
	mi := &file_joblet_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowJobsRequest) ProtoMessage() {}

func (x *GetWorkflowJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowJobsRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowJobsRequest) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{62}
}

func (x *GetWorkflowJobsRequest) GetWorkflowUuid() string {
	if x != nil {
		return x.WorkflowUuid
	}
	return ""
}

type GetWorkflowJobsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jobs          []*WorkflowJob         `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowJobsResponse) Reset() {
	*x = GetWorkflowJobsResponse{}
	mi := &file_joblet_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowJobsResponse) ProtoMessage() {}

func (x *GetWorkflowJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowJobsResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowJobsResponse) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{63}
}

func (x *GetWorkflowJobsResponse) GetJobs() []*WorkflowJob {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type WorkflowInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // Workflow UUID identifier
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	TotalJobs     int32                  `protobuf:"varint,3,opt,name=totalJobs,proto3" json:"totalJobs,omitempty"`
	CompletedJobs int32                  `protobuf:"varint,4,opt,name=completedJobs,proto3" json:"completedJobs,omitempty"`
	FailedJobs    int32                  `protobuf:"varint,5,opt,name=failedJobs,proto3" json:"failedJobs,omitempty"`
	CanceledJobs  int32                  `protobuf:"varint,6,opt,name=canceledJobs,proto3" json:"canceledJobs,omitempty"`
	CreatedAt     *Timestamp             `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	StartedAt     *Timestamp             `protobuf:"bytes,8,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	CompletedAt   *Timestamp             `protobuf:"bytes,9,opt,name=completedAt,proto3" json:"completedAt,omitempty"`
	YamlContent   string                 `protobuf:"bytes,10,opt,name=yamlContent,proto3" json:"yamlContent,omitempty"` // Original YAML
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowInfo) Reset() {
	*x = WorkflowInfo{}
	mi := &file_joblet_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowInfo) ProtoMessage() {}

func (x *WorkflowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowInfo.ProtoReflect.Descriptor instead.
func (*WorkflowInfo) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{64}
}

func (x *WorkflowInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *WorkflowInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WorkflowInfo) GetTotalJobs() int32 {
	if x != nil {
		return x.TotalJobs
	}
	return 0
}

func (x *WorkflowInfo) GetCompletedJobs() int32 {
	if x != nil {
		return x.CompletedJobs
	}
	return 0
}

func (x *WorkflowInfo) GetFailedJobs() int32 {
	if x != nil {
		return x.FailedJobs
	}
	return 0
}

func (x *WorkflowInfo) GetCanceledJobs() int32 {
	if x != nil {
		return x.CanceledJobs
	}
	return 0
}

func (x *WorkflowInfo) GetCreatedAt() *Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *WorkflowInfo) GetStartedAt() *Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *WorkflowInfo) GetCompletedAt() *Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *WorkflowInfo) GetYamlContent() string {
	if x != nil {
		return x.YamlContent
	}
	return ""
}

type WorkflowJob struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobUuid       string                 `protobuf:"bytes,1,opt,name=jobUuid,proto3" json:"jobUuid,omitempty"` // Job UUID identifier
	JobName       string                 `protobuf:"bytes,2,opt,name=jobName,proto3" json:"jobName,omitempty"` // Job name from workflow
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Dependencies  []string               `protobuf:"bytes,4,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	StartTime     *Timestamp             `protobuf:"bytes,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       *Timestamp             `protobuf:"bytes,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ExitCode      int32                  `protobuf:"varint,7,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowJob) Reset() {
	*x = WorkflowJob{}
	mi := &file_joblet_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowJob) ProtoMessage() {}

func (x *WorkflowJob) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowJob.ProtoReflect.Descriptor instead.
func (*WorkflowJob) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{65}
}

func (x *WorkflowJob) GetJobUuid() string {
	if x != nil {
		return x.JobUuid
	}
	return ""
}

func (x *WorkflowJob) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *WorkflowJob) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WorkflowJob) GetDependencies() []string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *WorkflowJob) GetStartTime() *Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *WorkflowJob) GetEndTime() *Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *WorkflowJob) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type Timestamp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Seconds       int64                  `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanos         int32                  `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Timestamp) Reset() {
	*x = Timestamp{}
	mi := &file_joblet_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamp) ProtoMessage() {}

func (x *Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamp.ProtoReflect.Descriptor instead.
func (*Timestamp) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{66}
}

func (x *Timestamp) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *Timestamp) GetNanos() int32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

type InstallRuntimeRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RuntimeSpec    string                 `protobuf:"bytes,1,opt,name=runtimeSpec,proto3" json:"runtimeSpec,omitempty"`        // Runtime spec
	Repository     string                 `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`          // GitHub repo
	Branch         string                 `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`                  // Branch
	Path           string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`                      // Path in repo
	ForceReinstall bool                   `protobuf:"varint,5,opt,name=forceReinstall,proto3" json:"forceReinstall,omitempty"` // Force reinstall
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InstallRuntimeRequest) Reset() {
	*x = InstallRuntimeRequest{}
	mi := &file_joblet_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallRuntimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallRuntimeRequest) ProtoMessage() {}

func (x *InstallRuntimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallRuntimeRequest.ProtoReflect.Descriptor instead.
func (*InstallRuntimeRequest) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{67}
}

func (x *InstallRuntimeRequest) GetRuntimeSpec() string {
	if x != nil {
		return x.RuntimeSpec
	}
	return ""
}

func (x *InstallRuntimeRequest) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *InstallRuntimeRequest) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *InstallRuntimeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *InstallRuntimeRequest) GetForceReinstall() bool {
	if x != nil {
		return x.ForceReinstall
	}
	return false
}

type InstallRuntimeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BuildJobUuid  string                 `protobuf:"bytes,1,opt,name=buildJobUuid,proto3" json:"buildJobUuid,omitempty"` // Install job UUID
	RuntimeSpec   string                 `protobuf:"bytes,2,opt,name=runtimeSpec,proto3" json:"runtimeSpec,omitempty"`   // Runtime spec
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`             // Status
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`           // Message
	Repository    string                 `protobuf:"bytes,5,opt,name=repository,proto3" json:"repository,omitempty"`     // Repo
	ResolvedPath  string                 `protobuf:"bytes,6,opt,name=resolvedPath,proto3" json:"resolvedPath,omitempty"` // Path in repo
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallRuntimeResponse) Reset() {
	*x = InstallRuntimeResponse{}
	mi := &file_joblet_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallRuntimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallRuntimeResponse) ProtoMessage() {}

func (x *InstallRuntimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallRuntimeResponse.ProtoReflect.Descriptor instead.
func (*InstallRuntimeResponse) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{68}
}

func (x *InstallRuntimeResponse) GetBuildJobUuid() string {
	if x != nil {
		return x.BuildJobUuid
	}
	return ""
}

func (x *InstallRuntimeResponse) GetRuntimeSpec() string {
	if x != nil {
		return x.RuntimeSpec
	}
	return ""
}

func (x *InstallRuntimeResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InstallRuntimeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InstallRuntimeResponse) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *InstallRuntimeResponse) GetResolvedPath() string {
	if x != nil {
		return x.ResolvedPath
	}
	return ""
}

type InstallRuntimeFromLocalRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RuntimeSpec    string                 `protobuf:"bytes,1,opt,name=runtimeSpec,proto3" json:"runtimeSpec,omitempty"`        // Runtime spec
	Files          []*RuntimeFile         `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`                    // Files to upload
	ForceReinstall bool                   `protobuf:"varint,3,opt,name=forceReinstall,proto3" json:"forceReinstall,omitempty"` // Force reinstall
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InstallRuntimeFromLocalRequest) Reset() {
	*x = InstallRuntimeFromLocalRequest{}
	mi := &file_joblet_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallRuntimeFromLocalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallRuntimeFromLocalRequest) ProtoMessage() {}

func (x *InstallRuntimeFromLocalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallRuntimeFromLocalRequest.ProtoReflect.Descriptor instead.
func (*InstallRuntimeFromLocalRequest) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{69}
}

func (x *InstallRuntimeFromLocalRequest) GetRuntimeSpec() string {
	if x != nil {
		return x.RuntimeSpec
	}
	return ""
}

func (x *InstallRuntimeFromLocalRequest) GetFiles() []*RuntimeFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *InstallRuntimeFromLocalRequest) GetForceReinstall() bool {
	if x != nil {
		return x.ForceReinstall
	}
	return false
}

type RuntimeFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`              // Path in runtime dir
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`        // Content
	Executable    bool                   `protobuf:"varint,3,opt,name=executable,proto3" json:"executable,omitempty"` // Make executable
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeFile) Reset() {
	*x = RuntimeFile{}
	mi := &file_joblet_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeFile) ProtoMessage() {}

func (x *RuntimeFile) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeFile.ProtoReflect.Descriptor instead.
func (*RuntimeFile) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{70}
}

func (x *RuntimeFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RuntimeFile) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *RuntimeFile) GetExecutable() bool {
	if x != nil {
		return x.Executable
	}
	return false
}

type ValidateRuntimeSpecRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuntimeSpec   string                 `protobuf:"bytes,1,opt,name=runtimeSpec,proto3" json:"runtimeSpec,omitempty"` // Runtime spec to validate
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateRuntimeSpecRequest) Reset() {
	*x = ValidateRuntimeSpecRequest{}
	mi := &file_joblet_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateRuntimeSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRuntimeSpecRequest) ProtoMessage() {}

func (x *ValidateRuntimeSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRuntimeSpecRequest.ProtoReflect.Descriptor instead.
func (*ValidateRuntimeSpecRequest) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{71}
}

func (x *ValidateRuntimeSpecRequest) GetRuntimeSpec() string {
	if x != nil {
		return x.RuntimeSpec
	}
	return ""
}

type ValidateRuntimeSpecResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Valid          bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`                  // Is valid
	Message        string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`               // Message
	NormalizedSpec string                 `protobuf:"bytes,3,opt,name=normalizedSpec,proto3" json:"normalizedSpec,omitempty"` // Normalized spec
	SpecInfo       *RuntimeSpecInfo       `protobuf:"bytes,4,opt,name=specInfo,proto3" json:"specInfo,omitempty"`             // Parsed spec
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ValidateRuntimeSpecResponse) Reset() {
	*x = ValidateRuntimeSpecResponse{}
	mi := &file_joblet_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateRuntimeSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRuntimeSpecResponse) ProtoMessage() {}

func (x *ValidateRuntimeSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRuntimeSpecResponse.ProtoReflect.Descriptor instead.
func (*ValidateRuntimeSpecResponse) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{72}
}

func (x *ValidateRuntimeSpecResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateRuntimeSpecResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidateRuntimeSpecResponse) GetNormalizedSpec() string {
	if x != nil {
		return x.NormalizedSpec
	}
	return ""
}

func (x *ValidateRuntimeSpecResponse) GetSpecInfo() *RuntimeSpecInfo {
	if x != nil {
		return x.SpecInfo
	}
	return nil
}

type RuntimeRemoveReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Runtime       string                 `protobuf:"bytes,1,opt,name=runtime,proto3" json:"runtime,omitempty"` // Runtime to remove
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeRemoveReq) Reset() {
	*x = RuntimeRemoveReq{}
	mi := &file_joblet_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeRemoveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeRemoveReq) ProtoMessage() {}

func (x *RuntimeRemoveReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeRemoveReq.ProtoReflect.Descriptor instead.
func (*RuntimeRemoveReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{73}
}

func (x *RuntimeRemoveReq) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

type RuntimeRemoveRes struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                 // Success
	Message         string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                  // Message
	FreedSpaceBytes int64                  `protobuf:"varint,3,opt,name=freedSpaceBytes,proto3" json:"freedSpaceBytes,omitempty"` // Space freed
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RuntimeRemoveRes) Reset() {
	*x = RuntimeRemoveRes{}
	mi := &file_joblet_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeRemoveRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeRemoveRes) ProtoMessage() {}

func (x *RuntimeRemoveRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeRemoveRes.ProtoReflect.Descriptor instead.
func (*RuntimeRemoveRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{74}
}

func (x *RuntimeRemoveRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RuntimeRemoveRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RuntimeRemoveRes) GetFreedSpaceBytes() int64 {
	if x != nil {
		return x.FreedSpaceBytes
	}
	return 0
}

type RuntimeSpecInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      string                 `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`         // Language
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`           // Version
	Variants      []string               `protobuf:"bytes,3,rep,name=variants,proto3" json:"variants,omitempty"`         // Variants
	Architecture  string                 `protobuf:"bytes,4,opt,name=architecture,proto3" json:"architecture,omitempty"` // Architecture
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeSpecInfo) Reset() {
	*x = RuntimeSpecInfo{}
	mi := &file_joblet_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeSpecInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeSpecInfo) ProtoMessage() {}

func (x *RuntimeSpecInfo) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeSpecInfo.ProtoReflect.Descriptor instead.
func (*RuntimeSpecInfo) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{75}
}

func (x *RuntimeSpecInfo) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *RuntimeSpecInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RuntimeSpecInfo) GetVariants() []string {
	if x != nil {
		return x.Variants
	}
	return nil
}

func (x *RuntimeSpecInfo) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

type JobMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // Job UUID identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobMetricsRequest) Reset() {
	*x = JobMetricsRequest{}
	mi := &file_joblet_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMetricsRequest) ProtoMessage() {}

func (x *JobMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMetricsRequest.ProtoReflect.Descriptor instead.
func (*JobMetricsRequest) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{76}
}

func (x *JobMetricsRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type JobMetricsSummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`                    // Job UUID identifier
	PeriodSeconds int32                  `protobuf:"varint,2,opt,name=periodSeconds,proto3" json:"periodSeconds,omitempty"` // Aggregation period (default: 300s = 5min)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobMetricsSummaryRequest) Reset() {
	*x = JobMetricsSummaryRequest{}
	mi := &file_joblet_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobMetricsSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMetricsSummaryRequest) ProtoMessage() {}

func (x *JobMetricsSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMetricsSummaryRequest.ProtoReflect.Descriptor instead.
func (*JobMetricsSummaryRequest) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{77}
}

func (x *JobMetricsSummaryRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *JobMetricsSummaryRequest) GetPeriodSeconds() int32 {
	if x != nil {
		return x.PeriodSeconds
	}
	return 0
}

type JobMetricsSummaryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           *JobMetricsAggregate   `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        *JobMetricsAggregate   `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Io            *JobMetricsAggregate   `protobuf:"bytes,3,opt,name=io,proto3" json:"io,omitempty"`
	Network       *JobMetricsAggregate   `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobMetricsSummaryResponse) Reset() {
	*x = JobMetricsSummaryResponse{}
	mi := &file_joblet_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobMetricsSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMetricsSummaryResponse) ProtoMessage() {}

func (x *JobMetricsSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMetricsSummaryResponse.ProtoReflect.Descriptor instead.
func (*JobMetricsSummaryResponse) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{78}
}

func (x *JobMetricsSummaryResponse) GetCpu() *JobMetricsAggregate {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *JobMetricsSummaryResponse) GetMemory() *JobMetricsAggregate {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *JobMetricsSummaryResponse) GetIo() *JobMetricsAggregate {
	if x != nil {
		return x.Io
	}
	return nil
}

func (x *JobMetricsSummaryResponse) GetNetwork() *JobMetricsAggregate {
	if x != nil {
		return x.Network
	}
	return nil
}

type JobMetricsSample struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	JobId                 string                 `protobuf:"bytes,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
	Timestamp             int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix timestamp in seconds
	SampleIntervalSeconds int32                  `protobuf:"varint,3,opt,name=sampleIntervalSeconds,proto3" json:"sampleIntervalSeconds,omitempty"`
	// Metrics
	Cpu     *JobCPUMetrics     `protobuf:"bytes,4,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory  *JobMemoryMetrics  `protobuf:"bytes,5,opt,name=memory,proto3" json:"memory,omitempty"`
	Io      *JobIOMetrics      `protobuf:"bytes,6,opt,name=io,proto3" json:"io,omitempty"`
	Network *JobNetworkMetrics `protobuf:"bytes,7,opt,name=network,proto3" json:"network,omitempty"`
	Process *JobProcessMetrics `protobuf:"bytes,8,opt,name=process,proto3" json:"process,omitempty"`
	Gpu     []*JobGPUMetrics   `protobuf:"bytes,9,rep,name=gpu,proto3" json:"gpu,omitempty"`
	// Metadata
	CgroupPath    string             `protobuf:"bytes,10,opt,name=cgroupPath,proto3" json:"cgroupPath,omitempty"`
	Limits        *JobResourceLimits `protobuf:"bytes,11,opt,name=limits,proto3" json:"limits,omitempty"`
	GpuAllocation []int32            `protobuf:"varint,12,rep,packed,name=gpuAllocation,proto3" json:"gpuAllocation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobMetricsSample) Reset() {
	*x = JobMetricsSample{}
	mi := &file_joblet_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobMetricsSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMetricsSample) ProtoMessage() {}

func (x *JobMetricsSample) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMetricsSample.ProtoReflect.Descriptor instead.
func (*JobMetricsSample) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{79}
}

func (x *JobMetricsSample) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobMetricsSample) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *JobMetricsSample) GetSampleIntervalSeconds() int32 {
	if x != nil {
		return x.SampleIntervalSeconds
	}
	return 0
}

func (x *JobMetricsSample) GetCpu() *JobCPUMetrics {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *JobMetricsSample) GetMemory() *JobMemoryMetrics {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *JobMetricsSample) GetIo() *JobIOMetrics {
	if x != nil {
		return x.Io
	}
	return nil
}

func (x *JobMetricsSample) GetNetwork() *JobNetworkMetrics {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *JobMetricsSample) GetProcess() *JobProcessMetrics {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *JobMetricsSample) GetGpu() []*JobGPUMetrics {
	if x != nil {
		return x.Gpu
	}
	return nil
}

func (x *JobMetricsSample) GetCgroupPath() string {
	if x != nil {
		return x.CgroupPath
	}
	return ""
}

func (x *JobMetricsSample) GetLimits() *JobResourceLimits {
	if x != nil {
		return x.Limits
	}
	return nil
}

func (x *JobMetricsSample) GetGpuAllocation() []int32 {
	if x != nil {
		return x.GpuAllocation
	}
	return nil
}

type JobResourceLimits struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           int32                  `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`       // CPU percentage limit
	Memory        int64                  `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"` // Memory limit in bytes
	Io            int32                  `protobuf:"varint,3,opt,name=io,proto3" json:"io,omitempty"`         // I/O limit in bytes/sec
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobResourceLimits) Reset() {
	*x = JobResourceLimits{}
	mi := &file_joblet_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobResourceLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResourceLimits) ProtoMessage() {}

func (x *JobResourceLimits) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResourceLimits.ProtoReflect.Descriptor instead.
func (*JobResourceLimits) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{80}
}

func (x *JobResourceLimits) GetCpu() int32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *JobResourceLimits) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *JobResourceLimits) GetIo() int32 {
	if x != nil {
		return x.Io
	}
	return 0
}

type JobCPUMetrics struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UsageUsec       uint64                 `protobuf:"varint,1,opt,name=usageUsec,proto3" json:"usageUsec,omitempty"`              // Total CPU time in microseconds
	UserUsec        uint64                 `protobuf:"varint,2,opt,name=userUsec,proto3" json:"userUsec,omitempty"`                // User mode CPU time
	SystemUsec      uint64                 `protobuf:"varint,3,opt,name=systemUsec,proto3" json:"systemUsec,omitempty"`            // Kernel mode CPU time
	NrPeriods       uint64                 `protobuf:"varint,4,opt,name=nrPeriods,proto3" json:"nrPeriods,omitempty"`              // Number of enforcement periods
	NrThrottled     uint64                 `protobuf:"varint,5,opt,name=nrThrottled,proto3" json:"nrThrottled,omitempty"`          // Number of throttled periods
	ThrottledUsec   uint64                 `protobuf:"varint,6,opt,name=throttledUsec,proto3" json:"throttledUsec,omitempty"`      // Total throttled time
	UsagePercent    float64                `protobuf:"fixed64,7,opt,name=usagePercent,proto3" json:"usagePercent,omitempty"`       // Current CPU usage %
	ThrottlePercent float64                `protobuf:"fixed64,8,opt,name=throttlePercent,proto3" json:"throttlePercent,omitempty"` // Percentage of time throttled
	// PSI (Pressure Stall Information)
	PressureSome10  float64 `protobuf:"fixed64,9,opt,name=pressureSome10,proto3" json:"pressureSome10,omitempty"`
	PressureSome60  float64 `protobuf:"fixed64,10,opt,name=pressureSome60,proto3" json:"pressureSome60,omitempty"`
	PressureSome300 float64 `protobuf:"fixed64,11,opt,name=pressureSome300,proto3" json:"pressureSome300,omitempty"`
	PressureFull10  float64 `protobuf:"fixed64,12,opt,name=pressureFull10,proto3" json:"pressureFull10,omitempty"`
	PressureFull60  float64 `protobuf:"fixed64,13,opt,name=pressureFull60,proto3" json:"pressureFull60,omitempty"`
	PressureFull300 float64 `protobuf:"fixed64,14,opt,name=pressureFull300,proto3" json:"pressureFull300,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *JobCPUMetrics) Reset() {
	*x = JobCPUMetrics{}
	mi := &file_joblet_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobCPUMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCPUMetrics) ProtoMessage() {}

func (x *JobCPUMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCPUMetrics.ProtoReflect.Descriptor instead.
func (*JobCPUMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{81}
}

func (x *JobCPUMetrics) GetUsageUsec() uint64 {
	if x != nil {
		return x.UsageUsec
	}
	return 0
}

func (x *JobCPUMetrics) GetUserUsec() uint64 {
	if x != nil {
		return x.UserUsec
	}
	return 0
}

func (x *JobCPUMetrics) GetSystemUsec() uint64 {
	if x != nil {
		return x.SystemUsec
	}
	return 0
}

func (x *JobCPUMetrics) GetNrPeriods() uint64 {
	if x != nil {
		return x.NrPeriods
	}
	return 0
}

func (x *JobCPUMetrics) GetNrThrottled() uint64 {
	if x != nil {
		return x.NrThrottled
	}
	return 0
}

func (x *JobCPUMetrics) GetThrottledUsec() uint64 {
	if x != nil {
		return x.ThrottledUsec
	}
	return 0
}

func (x *JobCPUMetrics) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

func (x *JobCPUMetrics) GetThrottlePercent() float64 {
	if x != nil {
		return x.ThrottlePercent
	}
	return 0
}

func (x *JobCPUMetrics) GetPressureSome10() float64 {
	if x != nil {
		return x.PressureSome10
	}
	return 0
}

func (x *JobCPUMetrics) GetPressureSome60() float64 {
	if x != nil {
		return x.PressureSome60
	}
	return 0
}

func (x *JobCPUMetrics) GetPressureSome300() float64 {
	if x != nil {
		return x.PressureSome300
	}
	return 0
}

func (x *JobCPUMetrics) GetPressureFull10() float64 {
	if x != nil {
		return x.PressureFull10
	}
	return 0
}

func (x *JobCPUMetrics) GetPressureFull60() float64 {
	if x != nil {
		return x.PressureFull60
	}
	return 0
}

func (x *JobCPUMetrics) GetPressureFull300() float64 {
	if x != nil {
		return x.PressureFull300
	}
	return 0
}

type JobMemoryMetrics struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Current      uint64                 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`            // Current memory usage in bytes
	Max          uint64                 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`                    // Memory limit in bytes
	UsagePercent float64                `protobuf:"fixed64,3,opt,name=usagePercent,proto3" json:"usagePercent,omitempty"` // Memory usage percentage
	// Detailed memory stats
	Anon          uint64 `protobuf:"varint,4,opt,name=anon,proto3" json:"anon,omitempty"`                    // Anonymous memory
	File          uint64 `protobuf:"varint,5,opt,name=file,proto3" json:"file,omitempty"`                    // File-backed memory (cache)
	KernelStack   uint64 `protobuf:"varint,6,opt,name=kernelStack,proto3" json:"kernelStack,omitempty"`      // Kernel stack memory
	Slab          uint64 `protobuf:"varint,7,opt,name=slab,proto3" json:"slab,omitempty"`                    // Kernel slab memory
	Sock          uint64 `protobuf:"varint,8,opt,name=sock,proto3" json:"sock,omitempty"`                    // Socket buffer memory
	Shmem         uint64 `protobuf:"varint,9,opt,name=shmem,proto3" json:"shmem,omitempty"`                  // Shared memory
	FileMapped    uint64 `protobuf:"varint,10,opt,name=fileMapped,proto3" json:"fileMapped,omitempty"`       // Memory-mapped files
	FileDirty     uint64 `protobuf:"varint,11,opt,name=fileDirty,proto3" json:"fileDirty,omitempty"`         // Dirty page cache
	FileWriteback uint64 `protobuf:"varint,12,opt,name=fileWriteback,proto3" json:"fileWriteback,omitempty"` // Pages under writeback
	PgFault       uint64 `protobuf:"varint,13,opt,name=pgFault,proto3" json:"pgFault,omitempty"`             // Page fault count
	PgMajFault    uint64 `protobuf:"varint,14,opt,name=pgMajFault,proto3" json:"pgMajFault,omitempty"`       // Major page fault count
	OomEvents     uint64 `protobuf:"varint,15,opt,name=oomEvents,proto3" json:"oomEvents,omitempty"`         // OOM killer invocations
	OomKill       uint64 `protobuf:"varint,16,opt,name=oomKill,proto3" json:"oomKill,omitempty"`             // Processes killed by OOM
	// PSI
	PressureSome10  float64 `protobuf:"fixed64,17,opt,name=pressureSome10,proto3" json:"pressureSome10,omitempty"`
	PressureSome60  float64 `protobuf:"fixed64,18,opt,name=pressureSome60,proto3" json:"pressureSome60,omitempty"`
	PressureSome300 float64 `protobuf:"fixed64,19,opt,name=pressureSome300,proto3" json:"pressureSome300,omitempty"`
	PressureFull10  float64 `protobuf:"fixed64,20,opt,name=pressureFull10,proto3" json:"pressureFull10,omitempty"`
	PressureFull60  float64 `protobuf:"fixed64,21,opt,name=pressureFull60,proto3" json:"pressureFull60,omitempty"`
	PressureFull300 float64 `protobuf:"fixed64,22,opt,name=pressureFull300,proto3" json:"pressureFull300,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *JobMemoryMetrics) Reset() {
	*x = JobMemoryMetrics{}
	mi := &file_joblet_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobMemoryMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMemoryMetrics) ProtoMessage() {}

func (x *JobMemoryMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMemoryMetrics.ProtoReflect.Descriptor instead.
func (*JobMemoryMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{82}
}

func (x *JobMemoryMetrics) GetCurrent() uint64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *JobMemoryMetrics) GetMax() uint64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *JobMemoryMetrics) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

func (x *JobMemoryMetrics) GetAnon() uint64 {
	if x != nil {
		return x.Anon
	}
	return 0
}

func (x *JobMemoryMetrics) GetFile() uint64 {
	if x != nil {
		return x.File
	}
	return 0
}

func (x *JobMemoryMetrics) GetKernelStack() uint64 {
	if x != nil {
		return x.KernelStack
	}
	return 0
}

func (x *JobMemoryMetrics) GetSlab() uint64 {
	if x != nil {
		return x.Slab
	}
	return 0
}

func (x *JobMemoryMetrics) GetSock() uint64 {
	if x != nil {
		return x.Sock
	}
	return 0
}

func (x *JobMemoryMetrics) GetShmem() uint64 {
	if x != nil {
		return x.Shmem
	}
	return 0
}

func (x *JobMemoryMetrics) GetFileMapped() uint64 {
	if x != nil {
		return x.FileMapped
	}
	return 0
}

func (x *JobMemoryMetrics) GetFileDirty() uint64 {
	if x != nil {
		return x.FileDirty
	}
	return 0
}

func (x *JobMemoryMetrics) GetFileWriteback() uint64 {
	if x != nil {
		return x.FileWriteback
	}
	return 0
}

func (x *JobMemoryMetrics) GetPgFault() uint64 {
	if x != nil {
		return x.PgFault
	}
	return 0
}

func (x *JobMemoryMetrics) GetPgMajFault() uint64 {
	if x != nil {
		return x.PgMajFault
	}
	return 0
}

func (x *JobMemoryMetrics) GetOomEvents() uint64 {
	if x != nil {
		return x.OomEvents
	}
	return 0
}

func (x *JobMemoryMetrics) GetOomKill() uint64 {
	if x != nil {
		return x.OomKill
	}
	return 0
}

func (x *JobMemoryMetrics) GetPressureSome10() float64 {
	if x != nil {
		return x.PressureSome10
	}
	return 0
}

func (x *JobMemoryMetrics) GetPressureSome60() float64 {
	if x != nil {
		return x.PressureSome60
	}
	return 0
}

func (x *JobMemoryMetrics) GetPressureSome300() float64 {
	if x != nil {
		return x.PressureSome300
	}
	return 0
}

func (x *JobMemoryMetrics) GetPressureFull10() float64 {
	if x != nil {
		return x.PressureFull10
	}
	return 0
}

func (x *JobMemoryMetrics) GetPressureFull60() float64 {
	if x != nil {
		return x.PressureFull60
	}
	return 0
}

func (x *JobMemoryMetrics) GetPressureFull300() float64 {
	if x != nil {
		return x.PressureFull300
	}
	return 0
}

type JobIOMetrics struct {
	state   protoimpl.MessageState      `protogen:"open.v1"`
	Devices map[string]*DeviceIOMetrics `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Per-device metrics
	// Aggregated metrics
	TotalReadBytes    uint64 `protobuf:"varint,2,opt,name=totalReadBytes,proto3" json:"totalReadBytes,omitempty"`
	TotalWriteBytes   uint64 `protobuf:"varint,3,opt,name=totalWriteBytes,proto3" json:"totalWriteBytes,omitempty"`
	TotalReadOps      uint64 `protobuf:"varint,4,opt,name=totalReadOps,proto3" json:"totalReadOps,omitempty"`
	TotalWriteOps     uint64 `protobuf:"varint,5,opt,name=totalWriteOps,proto3" json:"totalWriteOps,omitempty"`
	TotalDiscardBytes uint64 `protobuf:"varint,6,opt,name=totalDiscardBytes,proto3" json:"totalDiscardBytes,omitempty"`
	TotalDiscardOps   uint64 `protobuf:"varint,7,opt,name=totalDiscardOps,proto3" json:"totalDiscardOps,omitempty"`
	// Calculated rates
	ReadBPS   float64 `protobuf:"fixed64,8,opt,name=readBPS,proto3" json:"readBPS,omitempty"`      // Read bandwidth (bytes/sec)
	WriteBPS  float64 `protobuf:"fixed64,9,opt,name=writeBPS,proto3" json:"writeBPS,omitempty"`    // Write bandwidth (bytes/sec)
	ReadIOPS  float64 `protobuf:"fixed64,10,opt,name=readIOPS,proto3" json:"readIOPS,omitempty"`   // Read IOPS
	WriteIOPS float64 `protobuf:"fixed64,11,opt,name=writeIOPS,proto3" json:"writeIOPS,omitempty"` // Write IOPS
	// PSI
	PressureSome10  float64 `protobuf:"fixed64,12,opt,name=pressureSome10,proto3" json:"pressureSome10,omitempty"`
	PressureSome60  float64 `protobuf:"fixed64,13,opt,name=pressureSome60,proto3" json:"pressureSome60,omitempty"`
	PressureSome300 float64 `protobuf:"fixed64,14,opt,name=pressureSome300,proto3" json:"pressureSome300,omitempty"`
	PressureFull10  float64 `protobuf:"fixed64,15,opt,name=pressureFull10,proto3" json:"pressureFull10,omitempty"`
	PressureFull60  float64 `protobuf:"fixed64,16,opt,name=pressureFull60,proto3" json:"pressureFull60,omitempty"`
	PressureFull300 float64 `protobuf:"fixed64,17,opt,name=pressureFull300,proto3" json:"pressureFull300,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *JobIOMetrics) Reset() {
	*x = JobIOMetrics{}
	mi := &file_joblet_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobIOMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobIOMetrics) ProtoMessage() {}

func (x *JobIOMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobIOMetrics.ProtoReflect.Descriptor instead.
func (*JobIOMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{83}
}

func (x *JobIOMetrics) GetDevices() map[string]*DeviceIOMetrics {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *JobIOMetrics) GetTotalReadBytes() uint64 {
	if x != nil {
		return x.TotalReadBytes
	}
	return 0
}

func (x *JobIOMetrics) GetTotalWriteBytes() uint64 {
	if x != nil {
		return x.TotalWriteBytes
	}
	return 0
}

func (x *JobIOMetrics) GetTotalReadOps() uint64 {
	if x != nil {
		return x.TotalReadOps
	}
	return 0
}

func (x *JobIOMetrics) GetTotalWriteOps() uint64 {
	if x != nil {
		return x.TotalWriteOps
	}
	return 0
}

func (x *JobIOMetrics) GetTotalDiscardBytes() uint64 {
	if x != nil {
		return x.TotalDiscardBytes
	}
	return 0
}

func (x *JobIOMetrics) GetTotalDiscardOps() uint64 {
	if x != nil {
		return x.TotalDiscardOps
	}
	return 0
}

func (x *JobIOMetrics) GetReadBPS() float64 {
	if x != nil {
		return x.ReadBPS
	}
	return 0
}

func (x *JobIOMetrics) GetWriteBPS() float64 {
	if x != nil {
		return x.WriteBPS
	}
	return 0
}

func (x *JobIOMetrics) GetReadIOPS() float64 {
	if x != nil {
		return x.ReadIOPS
	}
	return 0
}

func (x *JobIOMetrics) GetWriteIOPS() float64 {
	if x != nil {
		return x.WriteIOPS
	}
	return 0
}

func (x *JobIOMetrics) GetPressureSome10() float64 {
	if x != nil {
		return x.PressureSome10
	}
	return 0
}

func (x *JobIOMetrics) GetPressureSome60() float64 {
	if x != nil {
		return x.PressureSome60
	}
	return 0
}

func (x *JobIOMetrics) GetPressureSome300() float64 {
	if x != nil {
		return x.PressureSome300
	}
	return 0
}

func (x *JobIOMetrics) GetPressureFull10() float64 {
	if x != nil {
		return x.PressureFull10
	}
	return 0
}

func (x *JobIOMetrics) GetPressureFull60() float64 {
	if x != nil {
		return x.PressureFull60
	}
	return 0
}

func (x *JobIOMetrics) GetPressureFull300() float64 {
	if x != nil {
		return x.PressureFull300
	}
	return 0
}

type DeviceIOMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Device        string                 `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"` // Device identifier (major:minor)
	ReadBytes     uint64                 `protobuf:"varint,2,opt,name=readBytes,proto3" json:"readBytes,omitempty"`
	WriteBytes    uint64                 `protobuf:"varint,3,opt,name=writeBytes,proto3" json:"writeBytes,omitempty"`
	ReadOps       uint64                 `protobuf:"varint,4,opt,name=readOps,proto3" json:"readOps,omitempty"`
	WriteOps      uint64                 `protobuf:"varint,5,opt,name=writeOps,proto3" json:"writeOps,omitempty"`
	DiscardBytes  uint64                 `protobuf:"varint,6,opt,name=discardBytes,proto3" json:"discardBytes,omitempty"`
	DiscardOps    uint64                 `protobuf:"varint,7,opt,name=discardOps,proto3" json:"discardOps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceIOMetrics) Reset() {
	*x = DeviceIOMetrics{}
	mi := &file_joblet_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceIOMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceIOMetrics) ProtoMessage() {}

func (x *DeviceIOMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceIOMetrics.ProtoReflect.Descriptor instead.
func (*DeviceIOMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{84}
}

func (x *DeviceIOMetrics) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DeviceIOMetrics) GetReadBytes() uint64 {
	if x != nil {
		return x.ReadBytes
	}
	return 0
}

func (x *DeviceIOMetrics) GetWriteBytes() uint64 {
	if x != nil {
		return x.WriteBytes
	}
	return 0
}

func (x *DeviceIOMetrics) GetReadOps() uint64 {
	if x != nil {
		return x.ReadOps
	}
	return 0
}

func (x *DeviceIOMetrics) GetWriteOps() uint64 {
	if x != nil {
		return x.WriteOps
	}
	return 0
}

func (x *DeviceIOMetrics) GetDiscardBytes() uint64 {
	if x != nil {
		return x.DiscardBytes
	}
	return 0
}

func (x *DeviceIOMetrics) GetDiscardOps() uint64 {
	if x != nil {
		return x.DiscardOps
	}
	return 0
}

type JobNetworkMetrics struct {
	state      protoimpl.MessageState              `protogen:"open.v1"`
	Interfaces map[string]*NetworkInterfaceMetrics `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Aggregated metrics
	TotalRxBytes   uint64 `protobuf:"varint,2,opt,name=totalRxBytes,proto3" json:"totalRxBytes,omitempty"`
	TotalTxBytes   uint64 `protobuf:"varint,3,opt,name=totalTxBytes,proto3" json:"totalTxBytes,omitempty"`
	TotalRxPackets uint64 `protobuf:"varint,4,opt,name=totalRxPackets,proto3" json:"totalRxPackets,omitempty"`
	TotalTxPackets uint64 `protobuf:"varint,5,opt,name=totalTxPackets,proto3" json:"totalTxPackets,omitempty"`
	TotalRxErrors  uint64 `protobuf:"varint,6,opt,name=totalRxErrors,proto3" json:"totalRxErrors,omitempty"`
	TotalTxErrors  uint64 `protobuf:"varint,7,opt,name=totalTxErrors,proto3" json:"totalTxErrors,omitempty"`
	TotalRxDropped uint64 `protobuf:"varint,8,opt,name=totalRxDropped,proto3" json:"totalRxDropped,omitempty"`
	TotalTxDropped uint64 `protobuf:"varint,9,opt,name=totalTxDropped,proto3" json:"totalTxDropped,omitempty"`
	// Calculated rates
	RxBPS         float64 `protobuf:"fixed64,10,opt,name=rxBPS,proto3" json:"rxBPS,omitempty"` // Receive bandwidth (bytes/sec)
	TxBPS         float64 `protobuf:"fixed64,11,opt,name=txBPS,proto3" json:"txBPS,omitempty"` // Transmit bandwidth (bytes/sec)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobNetworkMetrics) Reset() {
	*x = JobNetworkMetrics{}
	mi := &file_joblet_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobNetworkMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobNetworkMetrics) ProtoMessage() {}

func (x *JobNetworkMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobNetworkMetrics.ProtoReflect.Descriptor instead.
func (*JobNetworkMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{85}
}

func (x *JobNetworkMetrics) GetInterfaces() map[string]*NetworkInterfaceMetrics {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *JobNetworkMetrics) GetTotalRxBytes() uint64 {
	if x != nil {
		return x.TotalRxBytes
	}
	return 0
}

func (x *JobNetworkMetrics) GetTotalTxBytes() uint64 {
	if x != nil {
		return x.TotalTxBytes
	}
	return 0
}

func (x *JobNetworkMetrics) GetTotalRxPackets() uint64 {
	if x != nil {
		return x.TotalRxPackets
	}
	return 0
}

func (x *JobNetworkMetrics) GetTotalTxPackets() uint64 {
	if x != nil {
		return x.TotalTxPackets
	}
	return 0
}

func (x *JobNetworkMetrics) GetTotalRxErrors() uint64 {
	if x != nil {
		return x.TotalRxErrors
	}
	return 0
}

func (x *JobNetworkMetrics) GetTotalTxErrors() uint64 {
	if x != nil {
		return x.TotalTxErrors
	}
	return 0
}

func (x *JobNetworkMetrics) GetTotalRxDropped() uint64 {
	if x != nil {
		return x.TotalRxDropped
	}
	return 0
}

func (x *JobNetworkMetrics) GetTotalTxDropped() uint64 {
	if x != nil {
		return x.TotalTxDropped
	}
	return 0
}

func (x *JobNetworkMetrics) GetRxBPS() float64 {
	if x != nil {
		return x.RxBPS
	}
	return 0
}

func (x *JobNetworkMetrics) GetTxBPS() float64 {
	if x != nil {
		return x.TxBPS
	}
	return 0
}

type NetworkInterfaceMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interface     string                 `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	RxBytes       uint64                 `protobuf:"varint,2,opt,name=rxBytes,proto3" json:"rxBytes,omitempty"`
	TxBytes       uint64                 `protobuf:"varint,3,opt,name=txBytes,proto3" json:"txBytes,omitempty"`
	RxPackets     uint64                 `protobuf:"varint,4,opt,name=rxPackets,proto3" json:"rxPackets,omitempty"`
	TxPackets     uint64                 `protobuf:"varint,5,opt,name=txPackets,proto3" json:"txPackets,omitempty"`
	RxErrors      uint64                 `protobuf:"varint,6,opt,name=rxErrors,proto3" json:"rxErrors,omitempty"`
	TxErrors      uint64                 `protobuf:"varint,7,opt,name=txErrors,proto3" json:"txErrors,omitempty"`
	RxDropped     uint64                 `protobuf:"varint,8,opt,name=rxDropped,proto3" json:"rxDropped,omitempty"`
	TxDropped     uint64                 `protobuf:"varint,9,opt,name=txDropped,proto3" json:"txDropped,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInterfaceMetrics) Reset() {
	*x = NetworkInterfaceMetrics{}
	mi := &file_joblet_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInterfaceMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceMetrics) ProtoMessage() {}

func (x *NetworkInterfaceMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceMetrics.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{86}
}

func (x *NetworkInterfaceMetrics) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *NetworkInterfaceMetrics) GetRxBytes() uint64 {
	if x != nil {
		return x.RxBytes
	}
	return 0
}

func (x *NetworkInterfaceMetrics) GetTxBytes() uint64 {
	if x != nil {
		return x.TxBytes
	}
	return 0
}

func (x *NetworkInterfaceMetrics) GetRxPackets() uint64 {
	if x != nil {
		return x.RxPackets
	}
	return 0
}

func (x *NetworkInterfaceMetrics) GetTxPackets() uint64 {
	if x != nil {
		return x.TxPackets
	}
	return 0
}

func (x *NetworkInterfaceMetrics) GetRxErrors() uint64 {
	if x != nil {
		return x.RxErrors
	}
	return 0
}

func (x *NetworkInterfaceMetrics) GetTxErrors() uint64 {
	if x != nil {
		return x.TxErrors
	}
	return 0
}

func (x *NetworkInterfaceMetrics) GetRxDropped() uint64 {
	if x != nil {
		return x.RxDropped
	}
	return 0
}

func (x *NetworkInterfaceMetrics) GetTxDropped() uint64 {
	if x != nil {
		return x.TxDropped
	}
	return 0
}

type JobProcessMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Current       uint64                 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`   // Current number of processes/threads
	Max           uint64                 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`           // Maximum PIDs allowed
	Events        uint64                 `protobuf:"varint,3,opt,name=events,proto3" json:"events,omitempty"`     // PID limit hit count
	Threads       uint64                 `protobuf:"varint,4,opt,name=threads,proto3" json:"threads,omitempty"`   // Total thread count
	Running       uint64                 `protobuf:"varint,5,opt,name=running,proto3" json:"running,omitempty"`   // Running processes
	Sleeping      uint64                 `protobuf:"varint,6,opt,name=sleeping,proto3" json:"sleeping,omitempty"` // Sleeping processes
	Stopped       uint64                 `protobuf:"varint,7,opt,name=stopped,proto3" json:"stopped,omitempty"`   // Stopped processes
	Zombie        uint64                 `protobuf:"varint,8,opt,name=zombie,proto3" json:"zombie,omitempty"`     // Zombie processes
	OpenFDs       uint64                 `protobuf:"varint,9,opt,name=openFDs,proto3" json:"openFDs,omitempty"`   // Open file descriptors
	MaxFDs        uint64                 `protobuf:"varint,10,opt,name=maxFDs,proto3" json:"maxFDs,omitempty"`    // FD limit
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobProcessMetrics) Reset() {
	*x = JobProcessMetrics{}
	mi := &file_joblet_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobProcessMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobProcessMetrics) ProtoMessage() {}

func (x *JobProcessMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobProcessMetrics.ProtoReflect.Descriptor instead.
func (*JobProcessMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{87}
}

func (x *JobProcessMetrics) GetCurrent() uint64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *JobProcessMetrics) GetMax() uint64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *JobProcessMetrics) GetEvents() uint64 {
	if x != nil {
		return x.Events
	}
	return 0
}

func (x *JobProcessMetrics) GetThreads() uint64 {
	if x != nil {
		return x.Threads
	}
	return 0
}

func (x *JobProcessMetrics) GetRunning() uint64 {
	if x != nil {
		return x.Running
	}
	return 0
}

func (x *JobProcessMetrics) GetSleeping() uint64 {
	if x != nil {
		return x.Sleeping
	}
	return 0
}

func (x *JobProcessMetrics) GetStopped() uint64 {
	if x != nil {
		return x.Stopped
	}
	return 0
}

func (x *JobProcessMetrics) GetZombie() uint64 {
	if x != nil {
		return x.Zombie
	}
	return 0
}

func (x *JobProcessMetrics) GetOpenFDs() uint64 {
	if x != nil {
		return x.OpenFDs
	}
	return 0
}

func (x *JobProcessMetrics) GetMaxFDs() uint64 {
	if x != nil {
		return x.MaxFDs
	}
	return 0
}

type JobGPUMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Device identification
	Index             int32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`                        // GPU device index
	Uuid              string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`                           // GPU unique identifier
	Name              string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                           // GPU model name
	ComputeCapability string `protobuf:"bytes,4,opt,name=computeCapability,proto3" json:"computeCapability,omitempty"` // CUDA compute capability
	DriverVersion     string `protobuf:"bytes,5,opt,name=driverVersion,proto3" json:"driverVersion,omitempty"`         // NVIDIA driver version
	// Utilization metrics
	Utilization   float64 `protobuf:"fixed64,6,opt,name=utilization,proto3" json:"utilization,omitempty"`      // GPU core utilization (0-100%)
	MemoryUsed    uint64  `protobuf:"varint,7,opt,name=memoryUsed,proto3" json:"memoryUsed,omitempty"`         // GPU memory used (bytes)
	MemoryTotal   uint64  `protobuf:"varint,8,opt,name=memoryTotal,proto3" json:"memoryTotal,omitempty"`       // GPU memory total (bytes)
	MemoryFree    uint64  `protobuf:"varint,9,opt,name=memoryFree,proto3" json:"memoryFree,omitempty"`         // GPU memory free (bytes)
	MemoryPercent float64 `protobuf:"fixed64,10,opt,name=memoryPercent,proto3" json:"memoryPercent,omitempty"` // Memory utilization percentage
	EncoderUtil   float64 `protobuf:"fixed64,11,opt,name=encoderUtil,proto3" json:"encoderUtil,omitempty"`     // Video encoder utilization
	DecoderUtil   float64 `protobuf:"fixed64,12,opt,name=decoderUtil,proto3" json:"decoderUtil,omitempty"`     // Video decoder utilization
	// Performance metrics
	SmClock          uint64  `protobuf:"varint,13,opt,name=smClock,proto3" json:"smClock,omitempty"`                    // Streaming Multiprocessor clock (MHz)
	MemoryClock      uint64  `protobuf:"varint,14,opt,name=memoryClock,proto3" json:"memoryClock,omitempty"`            // Memory clock speed (MHz)
	PcieThroughputRx float64 `protobuf:"fixed64,15,opt,name=pcieThroughputRx,proto3" json:"pcieThroughputRx,omitempty"` // PCIe receive throughput (MB/s)
	PcieThroughputTx float64 `protobuf:"fixed64,16,opt,name=pcieThroughputTx,proto3" json:"pcieThroughputTx,omitempty"` // PCIe transmit throughput (MB/s)
	// Thermal & Power
	Temperature       float64 `protobuf:"fixed64,17,opt,name=temperature,proto3" json:"temperature,omitempty"`             // GPU temperature (Celsius)
	TemperatureMemory float64 `protobuf:"fixed64,18,opt,name=temperatureMemory,proto3" json:"temperatureMemory,omitempty"` // Memory temperature
	PowerDraw         float64 `protobuf:"fixed64,19,opt,name=powerDraw,proto3" json:"powerDraw,omitempty"`                 // Current power draw (Watts)
	PowerLimit        float64 `protobuf:"fixed64,20,opt,name=powerLimit,proto3" json:"powerLimit,omitempty"`               // Power limit (Watts)
	FanSpeed          float64 `protobuf:"fixed64,21,opt,name=fanSpeed,proto3" json:"fanSpeed,omitempty"`                   // Fan speed percentage
	// Error & Health
	EccErrorsSingle uint64 `protobuf:"varint,22,opt,name=eccErrorsSingle,proto3" json:"eccErrorsSingle,omitempty"` // Single-bit ECC errors
	EccErrorsDouble uint64 `protobuf:"varint,23,opt,name=eccErrorsDouble,proto3" json:"eccErrorsDouble,omitempty"` // Double-bit ECC errors
	XidErrors       uint64 `protobuf:"varint,24,opt,name=xidErrors,proto3" json:"xidErrors,omitempty"`             // XID error events
	RetiredPages    uint64 `protobuf:"varint,25,opt,name=retiredPages,proto3" json:"retiredPages,omitempty"`       // Retired memory pages
	ThrottleReasons uint64 `protobuf:"varint,26,opt,name=throttleReasons,proto3" json:"throttleReasons,omitempty"` // Throttling reason bitmask
	// Process metrics
	ProcessesCount  uint64 `protobuf:"varint,27,opt,name=processesCount,proto3" json:"processesCount,omitempty"`   // Number of processes using GPU
	ProcessesMemory uint64 `protobuf:"varint,28,opt,name=processesMemory,proto3" json:"processesMemory,omitempty"` // Memory used by job processes
	ComputeMode     string `protobuf:"bytes,29,opt,name=computeMode,proto3" json:"computeMode,omitempty"`          // Compute mode (exclusive/shared)
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *JobGPUMetrics) Reset() {
	*x = JobGPUMetrics{}
	mi := &file_joblet_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobGPUMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGPUMetrics) ProtoMessage() {}

func (x *JobGPUMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGPUMetrics.ProtoReflect.Descriptor instead.
func (*JobGPUMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{88}
}

func (x *JobGPUMetrics) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *JobGPUMetrics) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *JobGPUMetrics) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobGPUMetrics) GetComputeCapability() string {
	if x != nil {
		return x.ComputeCapability
	}
	return ""
}

func (x *JobGPUMetrics) GetDriverVersion() string {
	if x != nil {
		return x.DriverVersion
	}
	return ""
}

func (x *JobGPUMetrics) GetUtilization() float64 {
	if x != nil {
		return x.Utilization
	}
	return 0
}

func (x *JobGPUMetrics) GetMemoryUsed() uint64 {
	if x != nil {
		return x.MemoryUsed
	}
	return 0
}

func (x *JobGPUMetrics) GetMemoryTotal() uint64 {
	if x != nil {
		return x.MemoryTotal
	}
	return 0
}

func (x *JobGPUMetrics) GetMemoryFree() uint64 {
	if x != nil {
		return x.MemoryFree
	}
	return 0
}

func (x *JobGPUMetrics) GetMemoryPercent() float64 {
	if x != nil {
		return x.MemoryPercent
	}
	return 0
}

func (x *JobGPUMetrics) GetEncoderUtil() float64 {
	if x != nil {
		return x.EncoderUtil
	}
	return 0
}

func (x *JobGPUMetrics) GetDecoderUtil() float64 {
	if x != nil {
		return x.DecoderUtil
	}
	return 0
}

func (x *JobGPUMetrics) GetSmClock() uint64 {
	if x != nil {
		return x.SmClock
	}
	return 0
}

func (x *JobGPUMetrics) GetMemoryClock() uint64 {
	if x != nil {
		return x.MemoryClock
	}
	return 0
}

func (x *JobGPUMetrics) GetPcieThroughputRx() float64 {
	if x != nil {
		return x.PcieThroughputRx
	}
	return 0
}

func (x *JobGPUMetrics) GetPcieThroughputTx() float64 {
	if x != nil {
		return x.PcieThroughputTx
	}
	return 0
}

func (x *JobGPUMetrics) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *JobGPUMetrics) GetTemperatureMemory() float64 {
	if x != nil {
		return x.TemperatureMemory
	}
	return 0
}

func (x *JobGPUMetrics) GetPowerDraw() float64 {
	if x != nil {
		return x.PowerDraw
	}
	return 0
}

func (x *JobGPUMetrics) GetPowerLimit() float64 {
	if x != nil {
		return x.PowerLimit
	}
	return 0
}

func (x *JobGPUMetrics) GetFanSpeed() float64 {
	if x != nil {
		return x.FanSpeed
	}
	return 0
}

func (x *JobGPUMetrics) GetEccErrorsSingle() uint64 {
	if x != nil {
		return x.EccErrorsSingle
	}
	return 0
}

func (x *JobGPUMetrics) GetEccErrorsDouble() uint64 {
	if x != nil {
		return x.EccErrorsDouble
	}
	return 0
}

func (x *JobGPUMetrics) GetXidErrors() uint64 {
	if x != nil {
		return x.XidErrors
	}
	return 0
}

func (x *JobGPUMetrics) GetRetiredPages() uint64 {
	if x != nil {
		return x.RetiredPages
	}
	return 0
}

func (x *JobGPUMetrics) GetThrottleReasons() uint64 {
	if x != nil {
		return x.ThrottleReasons
	}
	return 0
}

func (x *JobGPUMetrics) GetProcessesCount() uint64 {
	if x != nil {
		return x.ProcessesCount
	}
	return 0
}

func (x *JobGPUMetrics) GetProcessesMemory() uint64 {
	if x != nil {
		return x.ProcessesMemory
	}
	return 0
}

func (x *JobGPUMetrics) GetComputeMode() string {
	if x != nil {
		return x.ComputeMode
	}
	return ""
}

type JobMetricsAggregate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Min           float64                `protobuf:"fixed64,1,opt,name=min,proto3" json:"min,omitempty"`
	Max           float64                `protobuf:"fixed64,2,opt,name=max,proto3" json:"max,omitempty"`
	Avg           float64                `protobuf:"fixed64,3,opt,name=avg,proto3" json:"avg,omitempty"`
	P50           float64                `protobuf:"fixed64,4,opt,name=p50,proto3" json:"p50,omitempty"` // Median
	P95           float64                `protobuf:"fixed64,5,opt,name=p95,proto3" json:"p95,omitempty"`
	P99           float64                `protobuf:"fixed64,6,opt,name=p99,proto3" json:"p99,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobMetricsAggregate) Reset() {
	*x = JobMetricsAggregate{}
	mi := &file_joblet_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobMetricsAggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMetricsAggregate) ProtoMessage() {}

func (x *JobMetricsAggregate) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMetricsAggregate.ProtoReflect.Descriptor instead.
func (*JobMetricsAggregate) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{89}
}

func (x *JobMetricsAggregate) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *JobMetricsAggregate) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *JobMetricsAggregate) GetAvg() float64 {
	if x != nil {
		return x.Avg
	}
	return 0
}

func (x *JobMetricsAggregate) GetP50() float64 {
	if x != nil {
		return x.P50
	}
	return 0
}

func (x *JobMetricsAggregate) GetP95() float64 {
	if x != nil {
		return x.P95
	}
	return 0
}

func (x *JobMetricsAggregate) GetP99() float64 {
	if x != nil {
		return x.P99
	}
	return 0
}

var File_joblet_proto protoreflect.FileDescriptor

const file_joblet_proto_rawDesc = "" +
	"\n" +
	"\fjoblet.proto\x12\x06joblet\"'\n" +
	"\x04Jobs\x12\x1f\n" +
	"\x04jobs\x18\x01 \x03(\v2\v.joblet.JobR\x04jobs\"\x88\x06\n" +
	"\x03Job\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\acommand\x18\x03 \x01(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x04 \x03(\tR\x04args\x12\x16\n" +
	"\x06maxCPU\x18\x05 \x01(\x05R\x06maxCPU\x12\x1a\n" +
	"\bcpuCores\x18\x06 \x01(\tR\bcpuCores\x12\x1c\n" +
	"\tmaxMemory\x18\a \x01(\x05R\tmaxMemory\x12\x1a\n" +
	"\bmaxIOBPS\x18\b \x01(\x05R\bmaxIOBPS\x12\x16\n" +
	"\x06status\x18\t \x01(\tR\x06status\x12\x1c\n" +
	"\tstartTime\x18\n" +
	" \x01(\tR\tstartTime\x12\x18\n" +
	"\aendTime\x18\v \x01(\tR\aendTime\x12\x1a\n" +
	"\bexitCode\x18\f \x01(\x05R\bexitCode\x12$\n" +
	"\rscheduledTime\x18\r \x01(\tR\rscheduledTime\x12\x18\n" +
	"\aruntime\x18\x0e \x01(\tR\aruntime\x12>\n" +
	"\venvironment\x18\x0f \x03(\v2\x1c.joblet.Job.EnvironmentEntryR\venvironment\x12Q\n" +
	"\x12secret_environment\x18\x10 \x03(\v2\".joblet.Job.SecretEnvironmentEntryR\x11secretEnvironment\x12\x1f\n" +
	"\vgpu_indices\x18\x11 \x03(\x05R\n" +
	"gpuIndices\x12\x1b\n" +
	"\tgpu_count\x18\x12 \x01(\x05R\bgpuCount\x12\"\n" +
	"\rgpu_memory_mb\x18\x13 \x01(\x05R\vgpuMemoryMb\x12\x16\n" +
	"\x06nodeId\x18\x14 \x01(\tR\x06nodeId\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aD\n" +
	"\x16SecretEnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x0e\n" +
	"\fEmptyRequest\"p\n" +
	"\n" +
	"FileUpload\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent\x12\x12\n" +
	"\x04mode\x18\x03 \x01(\rR\x04mode\x12 \n" +
	"\visDirectory\x18\x04 \x01(\bR\visDirectory\"%\n" +
	"\x0fGetJobStatusReq\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"\xdc\a\n" +
	"\x0fGetJobStatusRes\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\acommand\x18\x03 \x01(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x04 \x03(\tR\x04args\x12\x16\n" +
	"\x06maxCPU\x18\x05 \x01(\x05R\x06maxCPU\x12\x1a\n" +
	"\bcpuCores\x18\x06 \x01(\tR\bcpuCores\x12\x1c\n" +
	"\tmaxMemory\x18\a \x01(\x05R\tmaxMemory\x12\x1a\n" +
	"\bmaxIOBPS\x18\b \x01(\x05R\bmaxIOBPS\x12\x16\n" +
	"\x06status\x18\t \x01(\tR\x06status\x12\x1c\n" +
	"\tstartTime\x18\n" +
	" \x01(\tR\tstartTime\x12\x18\n" +
	"\aendTime\x18\v \x01(\tR\aendTime\x12\x1a\n" +
	"\bexitCode\x18\f \x01(\x05R\bexitCode\x12$\n" +
	"\rscheduledTime\x18\r \x01(\tR\rscheduledTime\x12J\n" +
	"\venvironment\x18\x0e \x03(\v2(.joblet.GetJobStatusRes.EnvironmentEntryR\venvironment\x12]\n" +
	"\x12secret_environment\x18\x0f \x03(\v2..joblet.GetJobStatusRes.SecretEnvironmentEntryR\x11secretEnvironment\x12\x18\n" +
	"\anetwork\x18\x10 \x01(\tR\anetwork\x12\x18\n" +
	"\avolumes\x18\x11 \x03(\tR\avolumes\x12\x18\n" +
	"\aruntime\x18\x12 \x01(\tR\aruntime\x12\x18\n" +
	"\aworkDir\x18\x13 \x01(\tR\aworkDir\x12\x18\n" +
	"\auploads\x18\x14 \x03(\tR\auploads\x12\"\n" +
	"\fdependencies\x18\x15 \x03(\tR\fdependencies\x12\"\n" +
	"\fworkflowUuid\x18\x16 \x01(\tR\fworkflowUuid\x12\x1f\n" +
	"\vgpu_indices\x18\x17 \x03(\x05R\n" +
	"gpuIndices\x12\x1b\n" +
	"\tgpu_count\x18\x18 \x01(\x05R\bgpuCount\x12\"\n" +
	"\rgpu_memory_mb\x18\x19 \x01(\x05R\vgpuMemoryMb\x12\x16\n" +
	"\x06nodeId\x18\x1a \x01(\tR\x06nodeId\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aD\n" +
	"\x16SecretEnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\" \n" +
	"\n" +
	"StopJobReq\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"n\n" +
	"\n" +
	"StopJobRes\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\aendTime\x18\x03 \x01(\tR\aendTime\x12\x1a\n" +
	"\bexitCode\x18\x04 \x01(\x05R\bexitCode\"\"\n" +
	"\fCancelJobReq\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\":\n" +
	"\fCancelJobRes\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"\"\n" +
	"\fDeleteJobReq\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"V\n" +
	"\fDeleteJobRes\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\x12\n" +
	"\x10DeleteAllJobsReq\"\x90\x01\n" +
	"\x10DeleteAllJobsRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12#\n" +
	"\rdeleted_count\x18\x03 \x01(\x05R\fdeletedCount\x12#\n" +
	"\rskipped_count\x18\x04 \x01(\x05R\fskippedCount\"#\n" +
	"\rGetJobLogsReq\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"%\n" +
	"\tDataChunk\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\"\xdc\x01\n" +
	"\x18RuntimeInstallationChunk\x12A\n" +
	"\bprogress\x18\x01 \x01(\v2#.joblet.RuntimeInstallationProgressH\x00R\bprogress\x122\n" +
	"\x03log\x18\x02 \x01(\v2\x1e.joblet.RuntimeInstallationLogH\x00R\x03log\x12;\n" +
	"\x06result\x18\x03 \x01(\v2!.joblet.RuntimeInstallationResultH\x00R\x06resultB\f\n" +
	"\n" +
	"chunk_type\"l\n" +
	"\x1bRuntimeInstallationProgress\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04step\x18\x02 \x01(\x05R\x04step\x12\x1f\n" +
	"\vtotal_steps\x18\x03 \x01(\x05R\n" +
	"totalSteps\",\n" +
	"\x16RuntimeInstallationLog\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"\x95\x01\n" +
	"\x19RuntimeInstallationResult\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12!\n" +
	"\fruntime_spec\x18\x03 \x01(\tR\vruntimeSpec\x12!\n" +
	"\finstall_path\x18\x04 \x01(\tR\vinstallPath\":\n" +
	"\x10CreateNetworkReq\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04cidr\x18\x02 \x01(\tR\x04cidr\"R\n" +
	"\x10CreateNetworkRes\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04cidr\x18\x02 \x01(\tR\x04cidr\x12\x16\n" +
	"\x06bridge\x18\x03 \x01(\tR\x06bridge\"&\n" +
	"\x10RemoveNetworkReq\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"F\n" +
	"\x10RemoveNetworkRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"e\n" +
	"\aNetwork\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04cidr\x18\x02 \x01(\tR\x04cidr\x12\x16\n" +
	"\x06bridge\x18\x03 \x01(\tR\x06bridge\x12\x1a\n" +
	"\bjobCount\x18\x04 \x01(\x05R\bjobCount\"7\n" +
	"\bNetworks\x12+\n" +
	"\bnetworks\x18\x01 \x03(\v2\x0f.joblet.NetworkR\bnetworks\"M\n" +
	"\x0fCreateVolumeReq\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\tR\x04size\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\"a\n" +
	"\x0fCreateVolumeRes\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\tR\x04size\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\"%\n" +
	"\x0fRemoveVolumeReq\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"E\n" +
	"\x0fRemoveVolumeRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x96\x01\n" +
	"\x06Volume\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\tR\x04size\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\x12 \n" +
	"\vcreatedTime\x18\x05 \x01(\tR\vcreatedTime\x12\x1a\n" +
	"\bjobCount\x18\x06 \x01(\x05R\bjobCount\"3\n" +
	"\aVolumes\x12(\n" +
	"\avolumes\x18\x01 \x03(\v2\x0e.joblet.VolumeR\avolumes\"\xeb\x03\n" +
	"\x0fSystemStatusRes\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\tR\ttimestamp\x12\x1c\n" +
	"\tavailable\x18\x02 \x01(\bR\tavailable\x12$\n" +
	"\x04host\x18\x03 \x01(\v2\x10.joblet.HostInfoR\x04host\x12$\n" +
	"\x03cpu\x18\x04 \x01(\v2\x12.joblet.CPUMetricsR\x03cpu\x12-\n" +
	"\x06memory\x18\x05 \x01(\v2\x15.joblet.MemoryMetricsR\x06memory\x12)\n" +
	"\x05disks\x18\x06 \x03(\v2\x13.joblet.DiskMetricsR\x05disks\x122\n" +
	"\bnetworks\x18\a \x03(\v2\x16.joblet.NetworkMetricsR\bnetworks\x12!\n" +
	"\x02io\x18\b \x01(\v2\x11.joblet.IOMetricsR\x02io\x124\n" +
	"\tprocesses\x18\t \x01(\v2\x16.joblet.ProcessMetricsR\tprocesses\x12'\n" +
	"\x05cloud\x18\n" +
	" \x01(\v2\x11.joblet.CloudInfoR\x05cloud\x12@\n" +
	"\x0eserver_version\x18\v \x01(\v2\x19.joblet.ServerVersionInfoR\rserverVersion\"\x8c\x03\n" +
	"\x10SystemMetricsRes\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\tR\ttimestamp\x12$\n" +
	"\x04host\x18\x02 \x01(\v2\x10.joblet.HostInfoR\x04host\x12$\n" +
	"\x03cpu\x18\x03 \x01(\v2\x12.joblet.CPUMetricsR\x03cpu\x12-\n" +
	"\x06memory\x18\x04 \x01(\v2\x15.joblet.MemoryMetricsR\x06memory\x12)\n" +
	"\x05disks\x18\x05 \x03(\v2\x13.joblet.DiskMetricsR\x05disks\x122\n" +
	"\bnetworks\x18\x06 \x03(\v2\x16.joblet.NetworkMetricsR\bnetworks\x12!\n" +
	"\x02io\x18\a \x01(\v2\x11.joblet.IOMetricsR\x02io\x124\n" +
	"\tprocesses\x18\b \x01(\v2\x16.joblet.ProcessMetricsR\tprocesses\x12'\n" +
	"\x05cloud\x18\t \x01(\v2\x11.joblet.CloudInfoR\x05cloud\"^\n" +
	"\x10StreamMetricsReq\x12(\n" +
	"\x0fintervalSeconds\x18\x01 \x01(\x05R\x0fintervalSeconds\x12 \n" +
	"\vmetricTypes\x18\x02 \x03(\tR\vmetricTypes\"\xda\x03\n" +
	"\bHostInfo\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x0e\n" +
	"\x02os\x18\x02 \x01(\tR\x02os\x12\x1a\n" +
	"\bplatform\x18\x03 \x01(\tR\bplatform\x12&\n" +
	"\x0eplatformFamily\x18\x04 \x01(\tR\x0eplatformFamily\x12(\n" +
	"\x0fplatformVersion\x18\x05 \x01(\tR\x0fplatformVersion\x12$\n" +
	"\rkernelVersion\x18\x06 \x01(\tR\rkernelVersion\x12\x1e\n" +
	"\n" +
	"kernelArch\x18\a \x01(\tR\n" +
	"kernelArch\x12\"\n" +
	"\farchitecture\x18\b \x01(\tR\farchitecture\x12\x1a\n" +
	"\bcpuCount\x18\t \x01(\x05R\bcpuCount\x12 \n" +
	"\vtotalMemory\x18\n" +
	" \x01(\x03R\vtotalMemory\x12\x1a\n" +
	"\bbootTime\x18\v \x01(\tR\bbootTime\x12\x16\n" +
	"\x06uptime\x18\f \x01(\x03R\x06uptime\x12\x16\n" +
	"\x06nodeId\x18\r \x01(\tR\x06nodeId\x12\x1c\n" +
	"\tserverIPs\x18\x0e \x03(\tR\tserverIPs\x12\"\n" +
	"\fmacAddresses\x18\x0f \x03(\tR\fmacAddresses\"\xa2\x02\n" +
	"\n" +
	"CPUMetrics\x12\x14\n" +
	"\x05cores\x18\x01 \x01(\x05R\x05cores\x12\"\n" +
	"\fusagePercent\x18\x02 \x01(\x01R\fusagePercent\x12\x1a\n" +
	"\buserTime\x18\x03 \x01(\x01R\buserTime\x12\x1e\n" +
	"\n" +
	"systemTime\x18\x04 \x01(\x01R\n" +
	"systemTime\x12\x1a\n" +
	"\bidleTime\x18\x05 \x01(\x01R\bidleTime\x12\x1e\n" +
	"\n" +
	"ioWaitTime\x18\x06 \x01(\x01R\n" +
	"ioWaitTime\x12\x1c\n" +
	"\tstealTime\x18\a \x01(\x01R\tstealTime\x12 \n" +
	"\vloadAverage\x18\b \x03(\x01R\vloadAverage\x12\"\n" +
	"\fperCoreUsage\x18\t \x03(\x01R\fperCoreUsage\"\xd5\x02\n" +
	"\rMemoryMetrics\x12\x1e\n" +
	"\n" +
	"totalBytes\x18\x01 \x01(\x03R\n" +
	"totalBytes\x12\x1c\n" +
	"\tusedBytes\x18\x02 \x01(\x03R\tusedBytes\x12\x1c\n" +
	"\tfreeBytes\x18\x03 \x01(\x03R\tfreeBytes\x12&\n" +
	"\x0eavailableBytes\x18\x04 \x01(\x03R\x0eavailableBytes\x12\"\n" +
	"\fusagePercent\x18\x05 \x01(\x01R\fusagePercent\x12 \n" +
	"\vcachedBytes\x18\x06 \x01(\x03R\vcachedBytes\x12$\n" +
	"\rbufferedBytes\x18\a \x01(\x03R\rbufferedBytes\x12\x1c\n" +
	"\tswapTotal\x18\b \x01(\x03R\tswapTotal\x12\x1a\n" +
	"\bswapUsed\x18\t \x01(\x03R\bswapUsed\x12\x1a\n" +
	"\bswapFree\x18\n" +
	" \x01(\x03R\bswapFree\"\xf7\x02\n" +
	"\vDiskMetrics\x12\x16\n" +
	"\x06device\x18\x01 \x01(\tR\x06device\x12\x1e\n" +
	"\n" +
	"mountPoint\x18\x02 \x01(\tR\n" +
	"mountPoint\x12\x1e\n" +
	"\n" +
	"filesystem\x18\x03 \x01(\tR\n" +
	"filesystem\x12\x1e\n" +
	"\n" +
	"totalBytes\x18\x04 \x01(\x03R\n" +
	"totalBytes\x12\x1c\n" +
	"\tusedBytes\x18\x05 \x01(\x03R\tusedBytes\x12\x1c\n" +
	"\tfreeBytes\x18\x06 \x01(\x03R\tfreeBytes\x12\"\n" +
	"\fusagePercent\x18\a \x01(\x01R\fusagePercent\x12 \n" +
	"\vinodesTotal\x18\b \x01(\x03R\vinodesTotal\x12\x1e\n" +
	"\n" +
	"inodesUsed\x18\t \x01(\x03R\n" +
	"inodesUsed\x12\x1e\n" +
	"\n" +
	"inodesFree\x18\n" +
	" \x01(\x03R\n" +
	"inodesFree\x12.\n" +
	"\x12inodesUsagePercent\x18\v \x01(\x01R\x12inodesUsagePercent\"\xb6\x03\n" +
	"\x0eNetworkMetrics\x12\x1c\n" +
	"\tinterface\x18\x01 \x01(\tR\tinterface\x12$\n" +
	"\rbytesReceived\x18\x02 \x01(\x03R\rbytesReceived\x12\x1c\n" +
	"\tbytesSent\x18\x03 \x01(\x03R\tbytesSent\x12(\n" +
	"\x0fpacketsReceived\x18\x04 \x01(\x03R\x0fpacketsReceived\x12 \n" +
	"\vpacketsSent\x18\x05 \x01(\x03R\vpacketsSent\x12\x1a\n" +
	"\berrorsIn\x18\x06 \x01(\x03R\berrorsIn\x12\x1c\n" +
	"\terrorsOut\x18\a \x01(\x03R\terrorsOut\x12\x18\n" +
	"\adropsIn\x18\b \x01(\x03R\adropsIn\x12\x1a\n" +
	"\bdropsOut\x18\t \x01(\x03R\bdropsOut\x12 \n" +
	"\vreceiveRate\x18\n" +
	" \x01(\x01R\vreceiveRate\x12\"\n" +
	"\ftransmitRate\x18\v \x01(\x01R\ftransmitRate\x12 \n" +
	"\vipAddresses\x18\f \x03(\tR\vipAddresses\x12\x1e\n" +
	"\n" +
	"macAddress\x18\r \x01(\tR\n" +
	"macAddress\"\xf4\x01\n" +
	"\tIOMetrics\x12\x1e\n" +
	"\n" +
	"totalReads\x18\x01 \x01(\x03R\n" +
	"totalReads\x12 \n" +
	"\vtotalWrites\x18\x02 \x01(\x03R\vtotalWrites\x12\x1c\n" +
	"\treadBytes\x18\x03 \x01(\x03R\treadBytes\x12\x1e\n" +
	"\n" +
	"writeBytes\x18\x04 \x01(\x03R\n" +
	"writeBytes\x12\x1a\n" +
	"\breadRate\x18\x05 \x01(\x01R\breadRate\x12\x1c\n" +
	"\twriteRate\x18\x06 \x01(\x01R\twriteRate\x12-\n" +
	"\x06diskIO\x18\a \x03(\v2\x15.joblet.DiskIOMetricsR\x06diskIO\"\xab\x02\n" +
	"\rDiskIOMetrics\x12\x16\n" +
	"\x06device\x18\x01 \x01(\tR\x06device\x12&\n" +
	"\x0ereadsCompleted\x18\x02 \x01(\x03R\x0ereadsCompleted\x12(\n" +
	"\x0fwritesCompleted\x18\x03 \x01(\x03R\x0fwritesCompleted\x12\x1c\n" +
	"\treadBytes\x18\x04 \x01(\x03R\treadBytes\x12\x1e\n" +
	"\n" +
	"writeBytes\x18\x05 \x01(\x03R\n" +
	"writeBytes\x12\x1a\n" +
	"\breadTime\x18\x06 \x01(\x03R\breadTime\x12\x1c\n" +
	"\twriteTime\x18\a \x01(\x03R\twriteTime\x12\x16\n" +
	"\x06ioTime\x18\b \x01(\x03R\x06ioTime\x12 \n" +
	"\vutilization\x18\t \x01(\x01R\vutilization\"\xf4\x02\n" +
	"\x0eProcessMetrics\x12&\n" +
	"\x0etotalProcesses\x18\x01 \x01(\x05R\x0etotalProcesses\x12*\n" +
	"\x10runningProcesses\x18\x02 \x01(\x05R\x10runningProcesses\x12,\n" +
	"\x11sleepingProcesses\x18\x03 \x01(\x05R\x11sleepingProcesses\x12*\n" +
	"\x10stoppedProcesses\x18\x04 \x01(\x05R\x10stoppedProcesses\x12(\n" +
	"\x0fzombieProcesses\x18\x05 \x01(\x05R\x0fzombieProcesses\x12\"\n" +
	"\ftotalThreads\x18\x06 \x01(\x05R\ftotalThreads\x12/\n" +
	"\btopByCPU\x18\a \x03(\v2\x13.joblet.ProcessInfoR\btopByCPU\x125\n" +
	"\vtopByMemory\x18\b \x03(\v2\x13.joblet.ProcessInfoR\vtopByMemory\"\x93\x02\n" +
	"\vProcessInfo\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\x05R\x03pid\x12\x12\n" +
	"\x04ppid\x18\x02 \x01(\x05R\x04ppid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x18\n" +
	"\acommand\x18\x04 \x01(\tR\acommand\x12\x1e\n" +
	"\n" +
	"cpuPercent\x18\x05 \x01(\x01R\n" +
	"cpuPercent\x12$\n" +
	"\rmemoryPercent\x18\x06 \x01(\x01R\rmemoryPercent\x12 \n" +
	"\vmemoryBytes\x18\a \x01(\x03R\vmemoryBytes\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12\x1c\n" +
	"\tstartTime\x18\t \x01(\tR\tstartTime\x12\x12\n" +
	"\x04user\x18\n" +
	" \x01(\tR\x04user\"\xb9\x02\n" +
	"\tCloudInfo\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12\x12\n" +
	"\x04zone\x18\x03 \x01(\tR\x04zone\x12\x1e\n" +
	"\n" +
	"instanceID\x18\x04 \x01(\tR\n" +
	"instanceID\x12\"\n" +
	"\finstanceType\x18\x05 \x01(\tR\finstanceType\x12&\n" +
	"\x0ehypervisorType\x18\x06 \x01(\tR\x0ehypervisorType\x12;\n" +
	"\bmetadata\x18\a \x03(\v2\x1f.joblet.CloudInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9d\x02\n" +
	"\x11ServerVersionInfo\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x1d\n" +
	"\n" +
	"git_commit\x18\x02 \x01(\tR\tgitCommit\x12\x17\n" +
	"\agit_tag\x18\x03 \x01(\tR\x06gitTag\x12\x1d\n" +
	"\n" +
	"build_date\x18\x04 \x01(\tR\tbuildDate\x12\x1c\n" +
	"\tcomponent\x18\x05 \x01(\tR\tcomponent\x12\x1d\n" +
	"\n" +
	"go_version\x18\x06 \x01(\tR\tgoVersion\x12\x1a\n" +
	"\bplatform\x18\a \x01(\tR\bplatform\x12!\n" +
	"\fproto_commit\x18\b \x01(\tR\vprotoCommit\x12\x1b\n" +
	"\tproto_tag\x18\t \x01(\tR\bprotoTag\">\n" +
	"\vRuntimesRes\x12/\n" +
	"\bruntimes\x18\x01 \x03(\v2\x13.joblet.RuntimeInfoR\bruntimes\"\x92\x02\n" +
	"\vRuntimeInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\blanguage\x18\x02 \x01(\tR\blanguage\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1c\n" +
	"\tsizeBytes\x18\x05 \x01(\x03R\tsizeBytes\x12\x1a\n" +
	"\bpackages\x18\x06 \x03(\tR\bpackages\x12\x1c\n" +
	"\tavailable\x18\a \x01(\bR\tavailable\x12?\n" +
	"\frequirements\x18\b \x01(\v2\x1b.joblet.RuntimeRequirementsR\frequirements\"M\n" +
	"\x13RuntimeRequirements\x12$\n" +
	"\rarchitectures\x18\x01 \x03(\tR\rarchitectures\x12\x10\n" +
	"\x03gpu\x18\x02 \x01(\bR\x03gpu\"*\n" +
	"\x0eRuntimeInfoReq\x12\x18\n" +
	"\aruntime\x18\x01 \x01(\tR\aruntime\"U\n" +
	"\x0eRuntimeInfoRes\x12-\n" +
	"\aruntime\x18\x01 \x01(\v2\x13.joblet.RuntimeInfoR\aruntime\x12\x14\n" +
	"\x05found\x18\x02 \x01(\bR\x05found\"*\n" +
	"\x0eRuntimeTestReq\x12\x18\n" +
	"\aruntime\x18\x01 \x01(\tR\aruntime\"t\n" +
	"\x0eRuntimeTestRes\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x16\n" +
	"\x06output\x18\x03 \x01(\tR\x06output\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\x12\x1a\n" +
	"\bexitCode\x18\x05 \x01(\x05R\bexitCode\"\xd9\x06\n" +
	"\rRunJobRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x03 \x03(\tR\x04args\x12\x16\n" +
	"\x06maxCpu\x18\x04 \x01(\x05R\x06maxCpu\x12\x1a\n" +
	"\bcpuCores\x18\x05 \x01(\tR\bcpuCores\x12\x1c\n" +
	"\tmaxMemory\x18\x06 \x01(\x05R\tmaxMemory\x12\x1a\n" +
	"\bmaxIobps\x18\a \x01(\x05R\bmaxIobps\x12,\n" +
	"\auploads\x18\b \x03(\v2\x12.joblet.FileUploadR\auploads\x12\x1a\n" +
	"\bschedule\x18\t \x01(\tR\bschedule\x12\x18\n" +
	"\anetwork\x18\n" +
	" \x01(\tR\anetwork\x12\x18\n" +
	"\avolumes\x18\v \x03(\tR\avolumes\x12\x18\n" +
	"\aruntime\x18\f \x01(\tR\aruntime\x12\x18\n" +
	"\aworkDir\x18\r \x01(\tR\aworkDir\x12H\n" +
	"\venvironment\x18\x0e \x03(\v2&.joblet.RunJobRequest.EnvironmentEntryR\venvironment\x12[\n" +
	"\x12secret_environment\x18\x12 \x03(\v2,.joblet.RunJobRequest.SecretEnvironmentEntryR\x11secretEnvironment\x12\"\n" +
	"\fworkflowUuid\x18\x0f \x01(\tR\fworkflowUuid\x12\x18\n" +
	"\ajobUuid\x18\x10 \x01(\tR\ajobUuid\x12:\n" +
	"\frequirements\x18\x11 \x03(\v2\x16.joblet.JobRequirementR\frequirements\x12\x1b\n" +
	"\tgpu_count\x18\x13 \x01(\x05R\bgpuCount\x12\"\n" +
	"\rgpu_memory_mb\x18\x14 \x01(\x05R\vgpuMemoryMb\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aD\n" +
	"\x16SecretEnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd8\x02\n" +
	"\x0eRunJobResponse\x12\x18\n" +
	"\ajobUuid\x18\x01 \x01(\tR\ajobUuid\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\acommand\x18\x03 \x01(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x04 \x03(\tR\x04args\x12\x16\n" +
	"\x06maxCpu\x18\x05 \x01(\x05R\x06maxCpu\x12\x1a\n" +
	"\bcpuCores\x18\x06 \x01(\tR\bcpuCores\x12\x1c\n" +
	"\tmaxMemory\x18\a \x01(\x05R\tmaxMemory\x12\x1a\n" +
	"\bmaxIobps\x18\b \x01(\x05R\bmaxIobps\x12\x1c\n" +
	"\tstartTime\x18\t \x01(\tR\tstartTime\x12\x18\n" +
	"\aendTime\x18\n" +
	" \x01(\tR\aendTime\x12\x1a\n" +
	"\bexitCode\x18\v \x01(\x05R\bexitCode\x12$\n" +
	"\rscheduledTime\x18\f \x01(\tR\rscheduledTime\"b\n" +
	"\x0eJobRequirement\x12\x18\n" +
	"\ajobUuid\x18\x01 \x01(\tR\ajobUuid\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1e\n" +
	"\n" +
	"expression\x18\x03 \x01(\tR\n" +
	"expression\"\xc6\x01\n" +
	"\x12RunWorkflowRequest\x12\x1a\n" +
	"\bworkflow\x18\x01 \x01(\tR\bworkflow\x12\x1c\n" +
	"\ttotalJobs\x18\x02 \x01(\x05R\ttotalJobs\x12\x1a\n" +
	"\bjobOrder\x18\x03 \x03(\tR\bjobOrder\x12 \n" +
	"\vyamlContent\x18\x04 \x01(\tR\vyamlContent\x128\n" +
	"\rworkflowFiles\x18\x05 \x03(\v2\x12.joblet.FileUploadR\rworkflowFiles\"Q\n" +
	"\x13RunWorkflowResponse\x12\"\n" +
	"\fworkflowUuid\x18\x01 \x01(\tR\fworkflowUuid\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\">\n" +
	"\x18GetWorkflowStatusRequest\x12\"\n" +
	"\fworkflowUuid\x18\x01 \x01(\tR\fworkflowUuid\"v\n" +
	"\x19GetWorkflowStatusResponse\x120\n" +
	"\bworkflow\x18\x01 \x01(\v2\x14.joblet.WorkflowInfoR\bworkflow\x12'\n" +
	"\x04jobs\x18\x02 \x03(\v2\x13.joblet.WorkflowJobR\x04jobs\"B\n" +
	"\x14ListWorkflowsRequest\x12*\n" +
	"\x10includeCompleted\x18\x01 \x01(\bR\x10includeCompleted\"K\n" +
	"\x15ListWorkflowsResponse\x122\n" +
	"\tworkflows\x18\x01 \x03(\v2\x14.joblet.WorkflowInfoR\tworkflows\"<\n" +
	"\x16GetWorkflowJobsRequest\x12\"\n" +
	"\fworkflowUuid\x18\x01 \x01(\tR\fworkflowUuid\"B\n" +
	"\x17GetWorkflowJobsResponse\x12'\n" +
	"\x04jobs\x18\x01 \x03(\v2\x13.joblet.WorkflowJobR\x04jobs\"\xfb\x02\n" +
	"\fWorkflowInfo\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1c\n" +
	"\ttotalJobs\x18\x03 \x01(\x05R\ttotalJobs\x12$\n" +
	"\rcompletedJobs\x18\x04 \x01(\x05R\rcompletedJobs\x12\x1e\n" +
	"\n" +
	"failedJobs\x18\x05 \x01(\x05R\n" +
	"failedJobs\x12\"\n" +
	"\fcanceledJobs\x18\x06 \x01(\x05R\fcanceledJobs\x12/\n" +
	"\tcreatedAt\x18\a \x01(\v2\x11.joblet.TimestampR\tcreatedAt\x12/\n" +
	"\tstartedAt\x18\b \x01(\v2\x11.joblet.TimestampR\tstartedAt\x123\n" +
	"\vcompletedAt\x18\t \x01(\v2\x11.joblet.TimestampR\vcompletedAt\x12 \n" +
	"\vyamlContent\x18\n" +
	" \x01(\tR\vyamlContent\"\xf7\x01\n" +
	"\vWorkflowJob\x12\x18\n" +
	"\ajobUuid\x18\x01 \x01(\tR\ajobUuid\x12\x18\n" +
	"\ajobName\x18\x02 \x01(\tR\ajobName\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\"\n" +
	"\fdependencies\x18\x04 \x03(\tR\fdependencies\x12/\n" +
	"\tstartTime\x18\x05 \x01(\v2\x11.joblet.TimestampR\tstartTime\x12+\n" +
	"\aendTime\x18\x06 \x01(\v2\x11.joblet.TimestampR\aendTime\x12\x1a\n" +
	"\bexitCode\x18\a \x01(\x05R\bexitCode\";\n" +
	"\tTimestamp\x12\x18\n" +
	"\aseconds\x18\x01 \x01(\x03R\aseconds\x12\x14\n" +
	"\x05nanos\x18\x02 \x01(\x05R\x05nanos\"\xad\x01\n" +
	"\x15InstallRuntimeRequest\x12 \n" +
	"\vruntimeSpec\x18\x01 \x01(\tR\vruntimeSpec\x12\x1e\n" +
	"\n" +
	"repository\x18\x02 \x01(\tR\n" +
	"repository\x12\x16\n" +
	"\x06branch\x18\x03 \x01(\tR\x06branch\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\x12&\n" +
	"\x0eforceReinstall\x18\x05 \x01(\bR\x0eforceReinstall\"\xd4\x01\n" +
	"\x16InstallRuntimeResponse\x12\"\n" +
	"\fbuildJobUuid\x18\x01 \x01(\tR\fbuildJobUuid\x12 \n" +
	"\vruntimeSpec\x18\x02 \x01(\tR\vruntimeSpec\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x1e\n" +
	"\n" +
	"repository\x18\x05 \x01(\tR\n" +
	"repository\x12\"\n" +
	"\fresolvedPath\x18\x06 \x01(\tR\fresolvedPath\"\x95\x01\n" +
	"\x1eInstallRuntimeFromLocalRequest\x12 \n" +
	"\vruntimeSpec\x18\x01 \x01(\tR\vruntimeSpec\x12)\n" +
	"\x05files\x18\x02 \x03(\v2\x13.joblet.RuntimeFileR\x05files\x12&\n" +
	"\x0eforceReinstall\x18\x03 \x01(\bR\x0eforceReinstall\"[\n" +
	"\vRuntimeFile\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent\x12\x1e\n" +
	"\n" +
	"executable\x18\x03 \x01(\bR\n" +
	"executable\">\n" +
	"\x1aValidateRuntimeSpecRequest\x12 \n" +
	"\vruntimeSpec\x18\x01 \x01(\tR\vruntimeSpec\"\xaa\x01\n" +
	"\x1bValidateRuntimeSpecResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12&\n" +
	"\x0enormalizedSpec\x18\x03 \x01(\tR\x0enormalizedSpec\x123\n" +
	"\bspecInfo\x18\x04 \x01(\v2\x17.joblet.RuntimeSpecInfoR\bspecInfo\",\n" +
	"\x10RuntimeRemoveReq\x12\x18\n" +
	"\aruntime\x18\x01 \x01(\tR\aruntime\"p\n" +
	"\x10RuntimeRemoveRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12(\n" +
	"\x0ffreedSpaceBytes\x18\x03 \x01(\x03R\x0ffreedSpaceBytes\"\x87\x01\n" +
	"\x0fRuntimeSpecInfo\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1a\n" +
	"\bvariants\x18\x03 \x03(\tR\bvariants\x12\"\n" +
	"\farchitecture\x18\x04 \x01(\tR\farchitecture\"'\n" +
	"\x11JobMetricsRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"T\n" +
	"\x18JobMetricsSummaryRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12$\n" +
	"\rperiodSeconds\x18\x02 \x01(\x05R\rperiodSeconds\"\xe3\x01\n" +
	"\x19JobMetricsSummaryResponse\x12-\n" +
	"\x03cpu\x18\x01 \x01(\v2\x1b.joblet.JobMetricsAggregateR\x03cpu\x123\n" +
	"\x06memory\x18\x02 \x01(\v2\x1b.joblet.JobMetricsAggregateR\x06memory\x12+\n" +
	"\x02io\x18\x03 \x01(\v2\x1b.joblet.JobMetricsAggregateR\x02io\x125\n" +
	"\anetwork\x18\x04 \x01(\v2\x1b.joblet.JobMetricsAggregateR\anetwork\"\x89\x04\n" +
	"\x10JobMetricsSample\x12\x14\n" +
	"\x05jobId\x18\x01 \x01(\tR\x05jobId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x124\n" +
	"\x15sampleIntervalSeconds\x18\x03 \x01(\x05R\x15sampleIntervalSeconds\x12'\n" +
	"\x03cpu\x18\x04 \x01(\v2\x15.joblet.JobCPUMetricsR\x03cpu\x120\n" +
	"\x06memory\x18\x05 \x01(\v2\x18.joblet.JobMemoryMetricsR\x06memory\x12$\n" +
	"\x02io\x18\x06 \x01(\v2\x14.joblet.JobIOMetricsR\x02io\x123\n" +
	"\anetwork\x18\a \x01(\v2\x19.joblet.JobNetworkMetricsR\anetwork\x123\n" +
	"\aprocess\x18\b \x01(\v2\x19.joblet.JobProcessMetricsR\aprocess\x12'\n" +
	"\x03gpu\x18\t \x03(\v2\x15.joblet.JobGPUMetricsR\x03gpu\x12\x1e\n" +
	"\n" +
	"cgroupPath\x18\n" +
	" \x01(\tR\n" +
	"cgroupPath\x121\n" +
	"\x06limits\x18\v \x01(\v2\x19.joblet.JobResourceLimitsR\x06limits\x12$\n" +
	"\rgpuAllocation\x18\f \x03(\x05R\rgpuAllocation\"M\n" +
	"\x11JobResourceLimits\x12\x10\n" +
	"\x03cpu\x18\x01 \x01(\x05R\x03cpu\x12\x16\n" +
	"\x06memory\x18\x02 \x01(\x03R\x06memory\x12\x0e\n" +
	"\x02io\x18\x03 \x01(\x05R\x02io\"\x91\x04\n" +
	"\rJobCPUMetrics\x12\x1c\n" +
	"\tusageUsec\x18\x01 \x01(\x04R\tusageUsec\x12\x1a\n" +
	"\buserUsec\x18\x02 \x01(\x04R\buserUsec\x12\x1e\n" +
	"\n" +
	"systemUsec\x18\x03 \x01(\x04R\n" +
	"systemUsec\x12\x1c\n" +
	"\tnrPeriods\x18\x04 \x01(\x04R\tnrPeriods\x12 \n" +
	"\vnrThrottled\x18\x05 \x01(\x04R\vnrThrottled\x12$\n" +
	"\rthrottledUsec\x18\x06 \x01(\x04R\rthrottledUsec\x12\"\n" +
	"\fusagePercent\x18\a \x01(\x01R\fusagePercent\x12(\n" +
	"\x0fthrottlePercent\x18\b \x01(\x01R\x0fthrottlePercent\x12&\n" +
	"\x0epressureSome10\x18\t \x01(\x01R\x0epressureSome10\x12&\n" +
	"\x0epressureSome60\x18\n" +
	" \x01(\x01R\x0epressureSome60\x12(\n" +
	"\x0fpressureSome300\x18\v \x01(\x01R\x0fpressureSome300\x12&\n" +
	"\x0epressureFull10\x18\f \x01(\x01R\x0epressureFull10\x12&\n" +
	"\x0epressureFull60\x18\r \x01(\x01R\x0epressureFull60\x12(\n" +
	"\x0fpressureFull300\x18\x0e \x01(\x01R\x0fpressureFull300\"\xb4\x05\n" +
	"\x10JobMemoryMetrics\x12\x18\n" +
	"\acurrent\x18\x01 \x01(\x04R\acurrent\x12\x10\n" +
	"\x03max\x18\x02 \x01(\x04R\x03max\x12\"\n" +
	"\fusagePercent\x18\x03 \x01(\x01R\fusagePercent\x12\x12\n" +
	"\x04anon\x18\x04 \x01(\x04R\x04anon\x12\x12\n" +
	"\x04file\x18\x05 \x01(\x04R\x04file\x12 \n" +
	"\vkernelStack\x18\x06 \x01(\x04R\vkernelStack\x12\x12\n" +
	"\x04slab\x18\a \x01(\x04R\x04slab\x12\x12\n" +
	"\x04sock\x18\b \x01(\x04R\x04sock\x12\x14\n" +
	"\x05shmem\x18\t \x01(\x04R\x05shmem\x12\x1e\n" +
	"\n" +
	"fileMapped\x18\n" +
	" \x01(\x04R\n" +
	"fileMapped\x12\x1c\n" +
	"\tfileDirty\x18\v \x01(\x04R\tfileDirty\x12$\n" +
	"\rfileWriteback\x18\f \x01(\x04R\rfileWriteback\x12\x18\n" +
	"\apgFault\x18\r \x01(\x04R\apgFault\x12\x1e\n" +
	"\n" +
	"pgMajFault\x18\x0e \x01(\x04R\n" +
	"pgMajFault\x12\x1c\n" +
	"\toomEvents\x18\x0f \x01(\x04R\toomEvents\x12\x18\n" +
	"\aoomKill\x18\x10 \x01(\x04R\aoomKill\x12&\n" +
	"\x0epressureSome10\x18\x11 \x01(\x01R\x0epressureSome10\x12&\n" +
	"\x0epressureSome60\x18\x12 \x01(\x01R\x0epressureSome60\x12(\n" +
	"\x0fpressureSome300\x18\x13 \x01(\x01R\x0fpressureSome300\x12&\n" +
	"\x0epressureFull10\x18\x14 \x01(\x01R\x0epressureFull10\x12&\n" +
	"\x0epressureFull60\x18\x15 \x01(\x01R\x0epressureFull60\x12(\n" +
	"\x0fpressureFull300\x18\x16 \x01(\x01R\x0fpressureFull300\"\xf8\x05\n" +
	"\fJobIOMetrics\x12;\n" +
	"\adevices\x18\x01 \x03(\v2!.joblet.JobIOMetrics.DevicesEntryR\adevices\x12&\n" +
	"\x0etotalReadBytes\x18\x02 \x01(\x04R\x0etotalReadBytes\x12(\n" +
	"\x0ftotalWriteBytes\x18\x03 \x01(\x04R\x0ftotalWriteBytes\x12\"\n" +
	"\ftotalReadOps\x18\x04 \x01(\x04R\ftotalReadOps\x12$\n" +
	"\rtotalWriteOps\x18\x05 \x01(\x04R\rtotalWriteOps\x12,\n" +
	"\x11totalDiscardBytes\x18\x06 \x01(\x04R\x11totalDiscardBytes\x12(\n" +
	"\x0ftotalDiscardOps\x18\a \x01(\x04R\x0ftotalDiscardOps\x12\x18\n" +
	"\areadBPS\x18\b \x01(\x01R\areadBPS\x12\x1a\n" +
	"\bwriteBPS\x18\t \x01(\x01R\bwriteBPS\x12\x1a\n" +
	"\breadIOPS\x18\n" +
	" \x01(\x01R\breadIOPS\x12\x1c\n" +
	"\twriteIOPS\x18\v \x01(\x01R\twriteIOPS\x12&\n" +
	"\x0epressureSome10\x18\f \x01(\x01R\x0epressureSome10\x12&\n" +
	"\x0epressureSome60\x18\r \x01(\x01R\x0epressureSome60\x12(\n" +
	"\x0fpressureSome300\x18\x0e \x01(\x01R\x0fpressureSome300\x12&\n" +
	"\x0epressureFull10\x18\x0f \x01(\x01R\x0epressureFull10\x12&\n" +
	"\x0epressureFull60\x18\x10 \x01(\x01R\x0epressureFull60\x12(\n" +
	"\x0fpressureFull300\x18\x11 \x01(\x01R\x0fpressureFull300\x1aS\n" +
	"\fDevicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.joblet.DeviceIOMetricsR\x05value:\x028\x01\"\xe1\x01\n" +
	"\x0fDeviceIOMetrics\x12\x16\n" +
	"\x06device\x18\x01 \x01(\tR\x06device\x12\x1c\n" +
	"\treadBytes\x18\x02 \x01(\x04R\treadBytes\x12\x1e\n" +
	"\n" +
	"writeBytes\x18\x03 \x01(\x04R\n" +
	"writeBytes\x12\x18\n" +
	"\areadOps\x18\x04 \x01(\x04R\areadOps\x12\x1a\n" +
	"\bwriteOps\x18\x05 \x01(\x04R\bwriteOps\x12\"\n" +
	"\fdiscardBytes\x18\x06 \x01(\x04R\fdiscardBytes\x12\x1e\n" +
	"\n" +
	"discardOps\x18\a \x01(\x04R\n" +
	"discardOps\"\x9e\x04\n" +
	"\x11JobNetworkMetrics\x12I\n" +
	"\n" +
	"interfaces\x18\x01 \x03(\v2).joblet.JobNetworkMetrics.InterfacesEntryR\n" +
	"interfaces\x12\"\n" +
	"\ftotalRxBytes\x18\x02 \x01(\x04R\ftotalRxBytes\x12\"\n" +
	"\ftotalTxBytes\x18\x03 \x01(\x04R\ftotalTxBytes\x12&\n" +
	"\x0etotalRxPackets\x18\x04 \x01(\x04R\x0etotalRxPackets\x12&\n" +
	"\x0etotalTxPackets\x18\x05 \x01(\x04R\x0etotalTxPackets\x12$\n" +
	"\rtotalRxErrors\x18\x06 \x01(\x04R\rtotalRxErrors\x12$\n" +
	"\rtotalTxErrors\x18\a \x01(\x04R\rtotalTxErrors\x12&\n" +
	"\x0etotalRxDropped\x18\b \x01(\x04R\x0etotalRxDropped\x12&\n" +
	"\x0etotalTxDropped\x18\t \x01(\x04R\x0etotalTxDropped\x12\x14\n" +
	"\x05rxBPS\x18\n" +
	" \x01(\x01R\x05rxBPS\x12\x14\n" +
	"\x05txBPS\x18\v \x01(\x01R\x05txBPS\x1a^\n" +
	"\x0fInterfacesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.joblet.NetworkInterfaceMetricsR\x05value:\x028\x01\"\x9b\x02\n" +
	"\x17NetworkInterfaceMetrics\x12\x1c\n" +
	"\tinterface\x18\x01 \x01(\tR\tinterface\x12\x18\n" +
	"\arxBytes\x18\x02 \x01(\x04R\arxBytes\x12\x18\n" +
	"\atxBytes\x18\x03 \x01(\x04R\atxBytes\x12\x1c\n" +
	"\trxPackets\x18\x04 \x01(\x04R\trxPackets\x12\x1c\n" +
	"\ttxPackets\x18\x05 \x01(\x04R\ttxPackets\x12\x1a\n" +
	"\brxErrors\x18\x06 \x01(\x04R\brxErrors\x12\x1a\n" +
	"\btxErrors\x18\a \x01(\x04R\btxErrors\x12\x1c\n" +
	"\trxDropped\x18\b \x01(\x04R\trxDropped\x12\x1c\n" +
	"\ttxDropped\x18\t \x01(\x04R\ttxDropped\"\x8b\x02\n" +
	"\x11JobProcessMetrics\x12\x18\n" +
	"\acurrent\x18\x01 \x01(\x04R\acurrent\x12\x10\n" +
	"\x03max\x18\x02 \x01(\x04R\x03max\x12\x16\n" +
	"\x06events\x18\x03 \x01(\x04R\x06events\x12\x18\n" +
	"\athreads\x18\x04 \x01(\x04R\athreads\x12\x18\n" +
	"\arunning\x18\x05 \x01(\x04R\arunning\x12\x1a\n" +
	"\bsleeping\x18\x06 \x01(\x04R\bsleeping\x12\x18\n" +
	"\astopped\x18\a \x01(\x04R\astopped\x12\x16\n" +
	"\x06zombie\x18\b \x01(\x04R\x06zombie\x12\x18\n" +
	"\aopenFDs\x18\t \x01(\x04R\aopenFDs\x12\x16\n" +
	"\x06maxFDs\x18\n" +
	" \x01(\x04R\x06maxFDs\"\x81\b\n" +
	"\rJobGPUMetrics\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x12\n" +
	"\x04uuid\x18\x02 \x01(\tR\x04uuid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12,\n" +
	"\x11computeCapability\x18\x04 \x01(\tR\x11computeCapability\x12$\n" +
	"\rdriverVersion\x18\x05 \x01(\tR\rdriverVersion\x12 \n" +
	"\vutilization\x18\x06 \x01(\x01R\vutilization\x12\x1e\n" +
	"\n" +
	"memoryUsed\x18\a \x01(\x04R\n" +
	"memoryUsed\x12 \n" +
	"\vmemoryTotal\x18\b \x01(\x04R\vmemoryTotal\x12\x1e\n" +
	"\n" +
	"memoryFree\x18\t \x01(\x04R\n" +
	"memoryFree\x12$\n" +
	"\rmemoryPercent\x18\n" +
	" \x01(\x01R\rmemoryPercent\x12 \n" +
	"\vencoderUtil\x18\v \x01(\x01R\vencoderUtil\x12 \n" +
	"\vdecoderUtil\x18\f \x01(\x01R\vdecoderUtil\x12\x18\n" +
	"\asmClock\x18\r \x01(\x04R\asmClock\x12 \n" +
	"\vmemoryClock\x18\x0e \x01(\x04R\vmemoryClock\x12*\n" +
	"\x10pcieThroughputRx\x18\x0f \x01(\x01R\x10pcieThroughputRx\x12*\n" +
	"\x10pcieThroughputTx\x18\x10 \x01(\x01R\x10pcieThroughputTx\x12 \n" +
	"\vtemperature\x18\x11 \x01(\x01R\vtemperature\x12,\n" +
	"\x11temperatureMemory\x18\x12 \x01(\x01R\x11temperatureMemory\x12\x1c\n" +
	"\tpowerDraw\x18\x13 \x01(\x01R\tpowerDraw\x12\x1e\n" +
	"\n" +
	"powerLimit\x18\x14 \x01(\x01R\n" +
	"powerLimit\x12\x1a\n" +
	"\bfanSpeed\x18\x15 \x01(\x01R\bfanSpeed\x12(\n" +
	"\x0feccErrorsSingle\x18\x16 \x01(\x04R\x0feccErrorsSingle\x12(\n" +
	"\x0feccErrorsDouble\x18\x17 \x01(\x04R\x0feccErrorsDouble\x12\x1c\n" +
	"\txidErrors\x18\x18 \x01(\x04R\txidErrors\x12\"\n" +
	"\fretiredPages\x18\x19 \x01(\x04R\fretiredPages\x12(\n" +
	"\x0fthrottleReasons\x18\x1a \x01(\x04R\x0fthrottleReasons\x12&\n" +
	"\x0eprocessesCount\x18\x1b \x01(\x04R\x0eprocessesCount\x12(\n" +
	"\x0fprocessesMemory\x18\x1c \x01(\x04R\x0fprocessesMemory\x12 \n" +
	"\vcomputeMode\x18\x1d \x01(\tR\vcomputeMode\"\x81\x01\n" +
	"\x13JobMetricsAggregate\x12\x10\n" +
	"\x03min\x18\x01 \x01(\x01R\x03min\x12\x10\n" +
	"\x03max\x18\x02 \x01(\x01R\x03max\x12\x10\n" +
	"\x03avg\x18\x03 \x01(\x01R\x03avg\x12\x10\n" +
	"\x03p50\x18\x04 \x01(\x01R\x03p50\x12\x10\n" +
	"\x03p95\x18\x05 \x01(\x01R\x03p95\x12\x10\n" +
	"\x03p99\x18\x06 \x01(\x01R\x03p992\xff\x06\n" +
	"\n" +
	"JobService\x129\n" +
	"\x06RunJob\x12\x15.joblet.RunJobRequest\x1a\x16.joblet.RunJobResponse\"\x00\x12B\n" +
	"\fGetJobStatus\x12\x17.joblet.GetJobStatusReq\x1a\x17.joblet.GetJobStatusRes\"\x00\x123\n" +
	"\aStopJob\x12\x12.joblet.StopJobReq\x1a\x12.joblet.StopJobRes\"\x00\x129\n" +
	"\tCancelJob\x12\x14.joblet.CancelJobReq\x1a\x14.joblet.CancelJobRes\"\x00\x129\n" +
	"\tDeleteJob\x12\x14.joblet.DeleteJobReq\x1a\x14.joblet.DeleteJobRes\"\x00\x12E\n" +
	"\rDeleteAllJobs\x12\x18.joblet.DeleteAllJobsReq\x1a\x18.joblet.DeleteAllJobsRes\"\x00\x128\n" +
	"\n" +
	"GetJobLogs\x12\x15.joblet.GetJobLogsReq\x1a\x11.joblet.DataChunk0\x01\x120\n" +
	"\bListJobs\x12\x14.joblet.EmptyRequest\x1a\f.joblet.Jobs\"\x00\x12H\n" +
	"\rGetJobMetrics\x12\x19.joblet.JobMetricsRequest\x1a\x18.joblet.JobMetricsSample\"\x000\x01\x12H\n" +
	"\vRunWorkflow\x12\x1a.joblet.RunWorkflowRequest\x1a\x1b.joblet.RunWorkflowResponse\"\x00\x12Z\n" +
	"\x11GetWorkflowStatus\x12 .joblet.GetWorkflowStatusRequest\x1a!.joblet.GetWorkflowStatusResponse\"\x00\x12N\n" +
	"\rListWorkflows\x12\x1c.joblet.ListWorkflowsRequest\x1a\x1d.joblet.ListWorkflowsResponse\"\x00\x12T\n" +
	"\x0fGetWorkflowJobs\x12\x1e.joblet.GetWorkflowJobsRequest\x1a\x1f.joblet.GetWorkflowJobsResponse\"\x002\xd8\x01\n" +
	"\x0eNetworkService\x12E\n" +
	"\rCreateNetwork\x12\x18.joblet.CreateNetworkReq\x1a\x18.joblet.CreateNetworkRes\"\x00\x128\n" +
	"\fListNetworks\x12\x14.joblet.EmptyRequest\x1a\x10.joblet.Networks\"\x00\x12E\n" +
	"\rRemoveNetwork\x12\x18.joblet.RemoveNetworkReq\x1a\x18.joblet.RemoveNetworkRes\"\x002\xcf\x01\n" +
	"\rVolumeService\x12B\n" +
	"\fCreateVolume\x12\x17.joblet.CreateVolumeReq\x1a\x17.joblet.CreateVolumeRes\"\x00\x126\n" +
	"\vListVolumes\x12\x14.joblet.EmptyRequest\x1a\x0f.joblet.Volumes\"\x00\x12B\n" +
	"\fRemoveVolume\x12\x17.joblet.RemoveVolumeReq\x1a\x17.joblet.RemoveVolumeRes\"\x002\xa6\x01\n" +
	"\x11MonitoringService\x12B\n" +
	"\x0fGetSystemStatus\x12\x14.joblet.EmptyRequest\x1a\x17.joblet.SystemStatusRes\"\x00\x12M\n" +
	"\x13StreamSystemMetrics\x12\x18.joblet.StreamMetricsReq\x1a\x18.joblet.SystemMetricsRes\"\x000\x012\x99\x06\n" +
	"\x0eRuntimeService\x12;\n" +
	"\fListRuntimes\x12\x14.joblet.EmptyRequest\x1a\x13.joblet.RuntimesRes\"\x00\x12B\n" +
	"\x0eGetRuntimeInfo\x12\x16.joblet.RuntimeInfoReq\x1a\x16.joblet.RuntimeInfoRes\"\x00\x12?\n" +
	"\vTestRuntime\x12\x16.joblet.RuntimeTestReq\x1a\x16.joblet.RuntimeTestRes\"\x00\x12[\n" +
	"\x18InstallRuntimeFromGithub\x12\x1d.joblet.InstallRuntimeRequest\x1a\x1e.joblet.InstallRuntimeResponse\"\x00\x12c\n" +
	"\x17InstallRuntimeFromLocal\x12&.joblet.InstallRuntimeFromLocalRequest\x1a\x1e.joblet.InstallRuntimeResponse\"\x00\x12h\n" +
	"!StreamingInstallRuntimeFromGithub\x12\x1d.joblet.InstallRuntimeRequest\x1a .joblet.RuntimeInstallationChunk\"\x000\x01\x12p\n" +
	" StreamingInstallRuntimeFromLocal\x12&.joblet.InstallRuntimeFromLocalRequest\x1a .joblet.RuntimeInstallationChunk\"\x000\x01\x12`\n" +
	"\x13ValidateRuntimeSpec\x12\".joblet.ValidateRuntimeSpecRequest\x1a#.joblet.ValidateRuntimeSpecResponse\"\x00\x12E\n" +
	"\rRemoveRuntime\x12\x18.joblet.RuntimeRemoveReq\x1a\x18.joblet.RuntimeRemoveRes\"\x00B*Z(github.com/ehsaniara/joblet-proto/v2/genb\x06proto3"

var (
	file_joblet_proto_rawDescOnce sync.Once
	file_joblet_proto_rawDescData []byte
)

func file_joblet_proto_rawDescGZIP() []byte {
	file_joblet_proto_rawDescOnce.Do(func() {
		file_joblet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_joblet_proto_rawDesc), len(file_joblet_proto_rawDesc)))
	})
	return file_joblet_proto_rawDescData
}

var file_joblet_proto_msgTypes = make([]protoimpl.MessageInfo, 99)
var file_joblet_proto_goTypes = []any{
	(*Jobs)(nil),                           // 0: joblet.Jobs
	(*Job)(nil),                            // 1: joblet.Job
	(*EmptyRequest)(nil),                   // 2: joblet.EmptyRequest
	(*FileUpload)(nil),                     // 3: joblet.FileUpload
	(*GetJobStatusReq)(nil),                // 4: joblet.GetJobStatusReq
	(*GetJobStatusRes)(nil),                // 5: joblet.GetJobStatusRes
	(*StopJobReq)(nil),                     // 6: joblet.StopJobReq
	(*StopJobRes)(nil),                     // 7: joblet.StopJobRes
	(*CancelJobReq)(nil),                   // 8: joblet.CancelJobReq
	(*CancelJobRes)(nil),                   // 9: joblet.CancelJobRes
	(*DeleteJobReq)(nil),                   // 10: joblet.DeleteJobReq
	(*DeleteJobRes)(nil),                   // 11: joblet.DeleteJobRes
	(*DeleteAllJobsReq)(nil),               // 12: joblet.DeleteAllJobsReq
	(*DeleteAllJobsRes)(nil),               // 13: joblet.DeleteAllJobsRes
	(*GetJobLogsReq)(nil),                  // 14: joblet.GetJobLogsReq
	(*DataChunk)(nil),                      // 15: joblet.DataChunk
	(*RuntimeInstallationChunk)(nil),       // 16: joblet.RuntimeInstallationChunk
	(*RuntimeInstallationProgress)(nil),    // 17: joblet.RuntimeInstallationProgress
	(*RuntimeInstallationLog)(nil),         // 18: joblet.RuntimeInstallationLog
	(*RuntimeInstallationResult)(nil),      // 19: joblet.RuntimeInstallationResult
	(*CreateNetworkReq)(nil),               // 20: joblet.CreateNetworkReq
	(*CreateNetworkRes)(nil),               // 21: joblet.CreateNetworkRes
	(*RemoveNetworkReq)(nil),               // 22: joblet.RemoveNetworkReq
	(*RemoveNetworkRes)(nil),               // 23: joblet.RemoveNetworkRes
	(*Network)(nil),                        // 24: joblet.Network
	(*Networks)(nil),                       // 25: joblet.Networks
	(*CreateVolumeReq)(nil),                // 26: joblet.CreateVolumeReq
	(*CreateVolumeRes)(nil),                // 27: joblet.CreateVolumeRes
	(*RemoveVolumeReq)(nil),                // 28: joblet.RemoveVolumeReq
	(*RemoveVolumeRes)(nil),                // 29: joblet.RemoveVolumeRes
	(*Volume)(nil),                         // 30: joblet.Volume
	(*Volumes)(nil),                        // 31: joblet.Volumes
	(*SystemStatusRes)(nil),                // 32: joblet.SystemStatusRes
	(*SystemMetricsRes)(nil),               // 33: joblet.SystemMetricsRes
	(*StreamMetricsReq)(nil),               // 34: joblet.StreamMetricsReq
	(*HostInfo)(nil),                       // 35: joblet.HostInfo
	(*CPUMetrics)(nil),                     // 36: joblet.CPUMetrics
	(*MemoryMetrics)(nil),                  // 37: joblet.MemoryMetrics
	(*DiskMetrics)(nil),                    // 38: joblet.DiskMetrics
	(*NetworkMetrics)(nil),                 // 39: joblet.NetworkMetrics
	(*IOMetrics)(nil),                      // 40: joblet.IOMetrics
	(*DiskIOMetrics)(nil),                  // 41: joblet.DiskIOMetrics
	(*ProcessMetrics)(nil),                 // 42: joblet.ProcessMetrics
	(*ProcessInfo)(nil),                    // 43: joblet.ProcessInfo
	(*CloudInfo)(nil),                      // 44: joblet.CloudInfo
	(*ServerVersionInfo)(nil),              // 45: joblet.ServerVersionInfo
	(*RuntimesRes)(nil),                    // 46: joblet.RuntimesRes
	(*RuntimeInfo)(nil),                    // 47: joblet.RuntimeInfo
	(*RuntimeRequirements)(nil),            // 48: joblet.RuntimeRequirements
	(*RuntimeInfoReq)(nil),                 // 49: joblet.RuntimeInfoReq
	(*RuntimeInfoRes)(nil),                 // 50: joblet.RuntimeInfoRes
	(*RuntimeTestReq)(nil),                 // 51: joblet.RuntimeTestReq
	(*RuntimeTestRes)(nil),                 // 52: joblet.RuntimeTestRes
	(*RunJobRequest)(nil),                  // 53: joblet.RunJobRequest
	(*RunJobResponse)(nil),                 // 54: joblet.RunJobResponse
	(*JobRequirement)(nil),                 // 55: joblet.JobRequirement
	(*RunWorkflowRequest)(nil),             // 56: joblet.RunWorkflowRequest
	(*RunWorkflowResponse)(nil),            // 57: joblet.RunWorkflowResponse
	(*GetWorkflowStatusRequest)(nil),       // 58: joblet.GetWorkflowStatusRequest
	(*GetWorkflowStatusResponse)(nil),      // 59: joblet.GetWorkflowStatusResponse
	(*ListWorkflowsRequest)(nil),           // 60: joblet.ListWorkflowsRequest
	(*ListWorkflowsResponse)(nil),          // 61: joblet.ListWorkflowsResponse
	(*GetWorkflowJobsRequest)(nil),         // 62: joblet.GetWorkflowJobsRequest
	(*GetWorkflowJobsResponse)(nil),        // 63: joblet.GetWorkflowJobsResponse
	(*WorkflowInfo)(nil),                   // 64: joblet.WorkflowInfo
	(*WorkflowJob)(nil),                    // 65: joblet.WorkflowJob
	(*Timestamp)(nil),                      // 66: joblet.Timestamp
	(*InstallRuntimeRequest)(nil),          // 67: joblet.InstallRuntimeRequest
	(*InstallRuntimeResponse)(nil),         // 68: joblet.InstallRuntimeResponse
	(*InstallRuntimeFromLocalRequest)(nil), // 69: joblet.InstallRuntimeFromLocalRequest
	(*RuntimeFile)(nil),                    // 70: joblet.RuntimeFile
	(*ValidateRuntimeSpecRequest)(nil),     // 71: joblet.ValidateRuntimeSpecRequest
	(*ValidateRuntimeSpecResponse)(nil),    // 72: joblet.ValidateRuntimeSpecResponse
	(*RuntimeRemoveReq)(nil),               // 73: joblet.RuntimeRemoveReq
	(*RuntimeRemoveRes)(nil),               // 74: joblet.RuntimeRemoveRes
	(*RuntimeSpecInfo)(nil),                // 75: joblet.RuntimeSpecInfo
	(*JobMetricsRequest)(nil),              // 76: joblet.JobMetricsRequest
	(*JobMetricsSummaryRequest)(nil),       // 77: joblet.JobMetricsSummaryRequest
	(*JobMetricsSummaryResponse)(nil),      // 78: joblet.JobMetricsSummaryResponse
	(*JobMetricsSample)(nil),               // 79: joblet.JobMetricsSample
	(*JobResourceLimits)(nil),              // 80: joblet.JobResourceLimits
	(*JobCPUMetrics)(nil),                  // 81: joblet.JobCPUMetrics
	(*JobMemoryMetrics)(nil),               // 82: joblet.JobMemoryMetrics
	(*JobIOMetrics)(nil),                   // 83: joblet.JobIOMetrics
	(*DeviceIOMetrics)(nil),                // 84: joblet.DeviceIOMetrics
	(*JobNetworkMetrics)(nil),              // 85: joblet.JobNetworkMetrics
	(*NetworkInterfaceMetrics)(nil),        // 86: joblet.NetworkInterfaceMetrics
	(*JobProcessMetrics)(nil),              // 87: joblet.JobProcessMetrics
	(*JobGPUMetrics)(nil),                  // 88: joblet.JobGPUMetrics
	(*JobMetricsAggregate)(nil),            // 89: joblet.JobMetricsAggregate
	nil,                                    // 90: joblet.Job.EnvironmentEntry
	nil,                                    // 91: joblet.Job.SecretEnvironmentEntry
	nil,                                    // 92: joblet.GetJobStatusRes.EnvironmentEntry
	nil,                                    // 93: joblet.GetJobStatusRes.SecretEnvironmentEntry
	nil,                                    // 94: joblet.CloudInfo.MetadataEntry
	nil,                                    // 95: joblet.RunJobRequest.EnvironmentEntry
	nil,                                    // 96: joblet.RunJobRequest.SecretEnvironmentEntry
	nil,                                    // 97: joblet.JobIOMetrics.DevicesEntry
	nil,                                    // 98: joblet.JobNetworkMetrics.InterfacesEntry
}
var file_joblet_proto_depIdxs = []int32{
	1,  // 0: joblet.Jobs.jobs:type_name -> joblet.Job
	90, // 1: joblet.Job.environment:type_name -> joblet.Job.EnvironmentEntry
	91, // 2: joblet.Job.secret_environment:type_name -> joblet.Job.SecretEnvironmentEntry
	92, // 3: joblet.GetJobStatusRes.environment:type_name -> joblet.GetJobStatusRes.EnvironmentEntry
	93, // 4: joblet.GetJobStatusRes.secret_environment:type_name -> joblet.GetJobStatusRes.SecretEnvironmentEntry
	17, // 5: joblet.RuntimeInstallationChunk.progress:type_name -> joblet.RuntimeInstallationProgress
	18, // 6: joblet.RuntimeInstallationChunk.log:type_name -> joblet.RuntimeInstallationLog
	19, // 7: joblet.RuntimeInstallationChunk.result:type_name -> joblet.RuntimeInstallationResult
	24, // 8: joblet.Networks.networks:type_name -> joblet.Network
	30, // 9: joblet.Volumes.volumes:type_name -> joblet.Volume
	35, // 10: joblet.SystemStatusRes.host:type_name -> joblet.HostInfo
	36, // 11: joblet.SystemStatusRes.cpu:type_name -> joblet.CPUMetrics
	37, // 12: joblet.SystemStatusRes.memory:type_name -> joblet.MemoryMetrics
	38, // 13: joblet.SystemStatusRes.disks:type_name -> joblet.DiskMetrics
	39, // 14: joblet.SystemStatusRes.networks:type_name -> joblet.NetworkMetrics
	40, // 15: joblet.SystemStatusRes.io:type_name -> joblet.IOMetrics
	42, // 16: joblet.SystemStatusRes.processes:type_name -> joblet.ProcessMetrics
	44, // 17: joblet.SystemStatusRes.cloud:type_name -> joblet.CloudInfo
	45, // 18: joblet.SystemStatusRes.server_version:type_name -> joblet.ServerVersionInfo
	35, // 19: joblet.SystemMetricsRes.host:type_name -> joblet.HostInfo
	36, // 20: joblet.SystemMetricsRes.cpu:type_name -> joblet.CPUMetrics
	37, // 21: joblet.SystemMetricsRes.memory:type_name -> joblet.MemoryMetrics
	38, // 22: joblet.SystemMetricsRes.disks:type_name -> joblet.DiskMetrics
	39, // 23: joblet.SystemMetricsRes.networks:type_name -> joblet.NetworkMetrics
	40, // 24: joblet.SystemMetricsRes.io:type_name -> joblet.IOMetrics
	42, // 25: joblet.SystemMetricsRes.processes:type_name -> joblet.ProcessMetrics
	44, // 26: joblet.SystemMetricsRes.cloud:type_name -> joblet.CloudInfo
	41, // 27: joblet.IOMetrics.diskIO:type_name -> joblet.DiskIOMetrics
	43, // 28: joblet.ProcessMetrics.topByCPU:type_name -> joblet.ProcessInfo
	43, // 29: joblet.ProcessMetrics.topByMemory:type_name -> joblet.ProcessInfo
	94, // 30: joblet.CloudInfo.metadata:type_name -> joblet.CloudInfo.MetadataEntry
	47, // 31: joblet.RuntimesRes.runtimes:type_name -> joblet.RuntimeInfo
	48, // 32: joblet.RuntimeInfo.requirements:type_name -> joblet.RuntimeRequirements
	47, // 33: joblet.RuntimeInfoRes.runtime:type_name -> joblet.RuntimeInfo
	3,  // 34: joblet.RunJobRequest.uploads:type_name -> joblet.FileUpload
	95, // 35: joblet.RunJobRequest.environment:type_name -> joblet.RunJobRequest.EnvironmentEntry
	96, // 36: joblet.RunJobRequest.secret_environment:type_name -> joblet.RunJobRequest.SecretEnvironmentEntry
	55, // 37: joblet.RunJobRequest.requirements:type_name -> joblet.JobRequirement
	3,  // 38: joblet.RunWorkflowRequest.workflowFiles:type_name -> joblet.FileUpload
	64, // 39: joblet.GetWorkflowStatusResponse.workflow:type_name -> joblet.WorkflowInfo
	65, // 40: joblet.GetWorkflowStatusResponse.jobs:type_name -> joblet.WorkflowJob
	64, // 41: joblet.ListWorkflowsResponse.workflows:type_name -> joblet.WorkflowInfo
	65, // 42: joblet.GetWorkflowJobsResponse.jobs:type_name -> joblet.WorkflowJob
	66, // 43: joblet.WorkflowInfo.createdAt:type_name -> joblet.Timestamp
	66, // 44: joblet.WorkflowInfo.startedAt:type_name -> joblet.Timestamp
	66, // 45: joblet.WorkflowInfo.completedAt:type_name -> joblet.Timestamp
	66, // 46: joblet.WorkflowJob.startTime:type_name -> joblet.Timestamp
	66, // 47: joblet.WorkflowJob.endTime:type_name -> joblet.Timestamp
	70, // 48: joblet.InstallRuntimeFromLocalRequest.files:type_name -> joblet.RuntimeFile
	75, // 49: joblet.ValidateRuntimeSpecResponse.specInfo:type_name -> joblet.RuntimeSpecInfo
	89, // 50: joblet.JobMetricsSummaryResponse.cpu:type_name -> joblet.JobMetricsAggregate
	89, // 51: joblet.JobMetricsSummaryResponse.memory:type_name -> joblet.JobMetricsAggregate
	89, // 52: joblet.JobMetricsSummaryResponse.io:type_name -> joblet.JobMetricsAggregate
	89, // 53: joblet.JobMetricsSummaryResponse.network:type_name -> joblet.JobMetricsAggregate
	81, // 54: joblet.JobMetricsSample.cpu:type_name -> joblet.JobCPUMetrics
	82, // 55: joblet.JobMetricsSample.memory:type_name -> joblet.JobMemoryMetrics
	83, // 56: joblet.JobMetricsSample.io:type_name -> joblet.JobIOMetrics
	85, // 57: joblet.JobMetricsSample.network:type_name -> joblet.JobNetworkMetrics
	87, // 58: joblet.JobMetricsSample.process:type_name -> joblet.JobProcessMetrics
	88, // 59: joblet.JobMetricsSample.gpu:type_name -> joblet.JobGPUMetrics
	80, // 60: joblet.JobMetricsSample.limits:type_name -> joblet.JobResourceLimits
	97, // 61: joblet.JobIOMetrics.devices:type_name -> joblet.JobIOMetrics.DevicesEntry
	98, // 62: joblet.JobNetworkMetrics.interfaces:type_name -> joblet.JobNetworkMetrics.InterfacesEntry
	84, // 63: joblet.JobIOMetrics.DevicesEntry.value:type_name -> joblet.DeviceIOMetrics
	86, // 64: joblet.JobNetworkMetrics.InterfacesEntry.value:type_name -> joblet.NetworkInterfaceMetrics
	53, // 65: joblet.JobService.RunJob:input_type -> joblet.RunJobRequest
	4,  // 66: joblet.JobService.GetJobStatus:input_type -> joblet.GetJobStatusReq
	6,  // 67: joblet.JobService.StopJob:input_type -> joblet.StopJobReq
	8,  // 68: joblet.JobService.CancelJob:input_type -> joblet.CancelJobReq
	10, // 69: joblet.JobService.DeleteJob:input_type -> joblet.DeleteJobReq
	12, // 70: joblet.JobService.DeleteAllJobs:input_type -> joblet.DeleteAllJobsReq
	14, // 71: joblet.JobService.GetJobLogs:input_type -> joblet.GetJobLogsReq
	2,  // 72: joblet.JobService.ListJobs:input_type -> joblet.EmptyRequest
	76, // 73: joblet.JobService.GetJobMetrics:input_type -> joblet.JobMetricsRequest
	56, // 74: joblet.JobService.RunWorkflow:input_type -> joblet.RunWorkflowRequest
	58, // 75: joblet.JobService.GetWorkflowStatus:input_type -> joblet.GetWorkflowStatusRequest
	60, // 76: joblet.JobService.ListWorkflows:input_type -> joblet.ListWorkflowsRequest
	62, // 77: joblet.JobService.GetWorkflowJobs:input_type -> joblet.GetWorkflowJobsRequest
	20, // 78: joblet.NetworkService.CreateNetwork:input_type -> joblet.CreateNetworkReq
	2,  // 79: joblet.NetworkService.ListNetworks:input_type -> joblet.EmptyRequest
	22, // 80: joblet.NetworkService.RemoveNetwork:input_type -> joblet.RemoveNetworkReq
	26, // 81: joblet.VolumeService.CreateVolume:input_type -> joblet.CreateVolumeReq
	2,  // 82: joblet.VolumeService.ListVolumes:input_type -> joblet.EmptyRequest
	28, // 83: joblet.VolumeService.RemoveVolume:input_type -> joblet.RemoveVolumeReq
	2,  // 84: joblet.MonitoringService.GetSystemStatus:input_type -> joblet.EmptyRequest
	34, // 85: joblet.MonitoringService.StreamSystemMetrics:input_type -> joblet.StreamMetricsReq
	2,  // 86: joblet.RuntimeService.ListRuntimes:input_type -> joblet.EmptyRequest
	49, // 87: joblet.RuntimeService.GetRuntimeInfo:input_type -> joblet.RuntimeInfoReq
	51, // 88: joblet.RuntimeService.TestRuntime:input_type -> joblet.RuntimeTestReq
	67, // 89: joblet.RuntimeService.InstallRuntimeFromGithub:input_type -> joblet.InstallRuntimeRequest
	69, // 90: joblet.RuntimeService.InstallRuntimeFromLocal:input_type -> joblet.InstallRuntimeFromLocalRequest
	67, // 91: joblet.RuntimeService.StreamingInstallRuntimeFromGithub:input_type -> joblet.InstallRuntimeRequest
	69, // 92: joblet.RuntimeService.StreamingInstallRuntimeFromLocal:input_type -> joblet.InstallRuntimeFromLocalRequest
	71, // 93: joblet.RuntimeService.ValidateRuntimeSpec:input_type -> joblet.ValidateRuntimeSpecRequest
	73, // 94: joblet.RuntimeService.RemoveRuntime:input_type -> joblet.RuntimeRemoveReq
	54, // 95: joblet.JobService.RunJob:output_type -> joblet.RunJobResponse
	5,  // 96: joblet.JobService.GetJobStatus:output_type -> joblet.GetJobStatusRes
	7,  // 97: joblet.JobService.StopJob:output_type -> joblet.StopJobRes
	9,  // 98: joblet.JobService.CancelJob:output_type -> joblet.CancelJobRes
	11, // 99: joblet.JobService.DeleteJob:output_type -> joblet.DeleteJobRes
	13, // 100: joblet.JobService.DeleteAllJobs:output_type -> joblet.DeleteAllJobsRes
	15, // 101: joblet.JobService.GetJobLogs:output_type -> joblet.DataChunk
	0,  // 102: joblet.JobService.ListJobs:output_type -> joblet.Jobs
	79, // 103: joblet.JobService.GetJobMetrics:output_type -> joblet.JobMetricsSample
	57, // 104: joblet.JobService.RunWorkflow:output_type -> joblet.RunWorkflowResponse
	59, // 105: joblet.JobService.GetWorkflowStatus:output_type -> joblet.GetWorkflowStatusResponse
	61, // 106: joblet.JobService.ListWorkflows:output_type -> joblet.ListWorkflowsResponse
	63, // 107: joblet.JobService.GetWorkflowJobs:output_type -> joblet.GetWorkflowJobsResponse
	21, // 108: joblet.NetworkService.CreateNetwork:output_type -> joblet.CreateNetworkRes
	25, // 109: joblet.NetworkService.ListNetworks:output_type -> joblet.Networks
	23, // 110: joblet.NetworkService.RemoveNetwork:output_type -> joblet.RemoveNetworkRes
	27, // 111: joblet.VolumeService.CreateVolume:output_type -> joblet.CreateVolumeRes
	31, // 112: joblet.VolumeService.ListVolumes:output_type -> joblet.Volumes
	29, // 113: joblet.VolumeService.RemoveVolume:output_type -> joblet.RemoveVolumeRes
	32, // 114: joblet.MonitoringService.GetSystemStatus:output_type -> joblet.SystemStatusRes
	33, // 115: joblet.MonitoringService.StreamSystemMetrics:output_type -> joblet.SystemMetricsRes
	46, // 116: joblet.RuntimeService.ListRuntimes:output_type -> joblet.RuntimesRes
	50, // 117: joblet.RuntimeService.GetRuntimeInfo:output_type -> joblet.RuntimeInfoRes
	52, // 118: joblet.RuntimeService.TestRuntime:output_type -> joblet.RuntimeTestRes
	68, // 119: joblet.RuntimeService.InstallRuntimeFromGithub:output_type -> joblet.InstallRuntimeResponse
	68, // 120: joblet.RuntimeService.InstallRuntimeFromLocal:output_type -> joblet.InstallRuntimeResponse
	16, // 121: joblet.RuntimeService.StreamingInstallRuntimeFromGithub:output_type -> joblet.RuntimeInstallationChunk
	16, // 122: joblet.RuntimeService.StreamingInstallRuntimeFromLocal:output_type -> joblet.RuntimeInstallationChunk
	72, // 123: joblet.RuntimeService.ValidateRuntimeSpec:output_type -> joblet.ValidateRuntimeSpecResponse
	74, // 124: joblet.RuntimeService.RemoveRuntime:output_type -> joblet.RuntimeRemoveRes
	95, // [95:125] is the sub-list for method output_type
	65, // [65:95] is the sub-list for method input_type
	65, // [65:65] is the sub-list for extension type_name
	65, // [65:65] is the sub-list for extension extendee
	0,  // [0:65] is the sub-list for field type_name
}

func init() { file_joblet_proto_init() }
func file_joblet_proto_init() {
	if File_joblet_proto != nil {
		return
	}
	file_joblet_proto_msgTypes[16].OneofWrappers = []any{
		(*RuntimeInstallationChunk_Progress)(nil),
		(*RuntimeInstallationChunk_Log)(nil),
		(*RuntimeInstallationChunk_Result)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_joblet_proto_rawDesc), len(file_joblet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   99,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_joblet_proto_goTypes,
		DependencyIndexes: file_joblet_proto_depIdxs,
		MessageInfos:      file_joblet_proto_msgTypes,
	}.Build()
	File_joblet_proto = out.File
	file_joblet_proto_goTypes = nil
	file_joblet_proto_depIdxs = nil
}
