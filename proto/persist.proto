syntax = "proto3";

option go_package = "github.com/ehsaniara/joblet-proto/gen/persist";

package joblet.persist;

import "ipc.proto";

// PersistService handles historical log and metrics queries
// This service is provided by joblet-persist
service PersistService {
  // Query logs for a job
  rpc QueryLogs(QueryLogsRequest) returns (stream joblet.ipc.LogLine);

  // Query metrics for a job
  rpc QueryMetrics(QueryMetricsRequest) returns (stream joblet.ipc.Metric);

  // Get information about a job's stored data
  rpc GetJobInfo(GetJobInfoRequest) returns (GetJobInfoResponse);

  // List jobs with stored data
  rpc ListJobs(ListJobsRequest) returns (ListJobsResponse);

  // Delete job data
  rpc DeleteJob(DeleteJobRequest) returns (DeleteJobResponse);

  // Get persistence service statistics
  rpc GetStats(GetStatsRequest) returns (GetStatsResponse);

  // Cleanup old data according to retention policies
  rpc CleanupOldData(CleanupRequest) returns (CleanupResponse);
}

// QueryLogsRequest specifies parameters for log queries
message QueryLogsRequest {
  string job_id = 1;

  // Stream filter
  joblet.ipc.StreamType stream = 2;  // STDOUT, STDERR, or both (UNSPECIFIED)

  // Time range (optional)
  int64 start_time = 3;  // Unix nanoseconds
  int64 end_time = 4;    // Unix nanoseconds

  // Pagination
  int32 limit = 5;       // Max lines to return (0 = all)
  int32 offset = 6;      // Skip lines

  // Future features
  string text_filter = 7;  // Text search (v1.1+)
}

// QueryMetricsRequest specifies parameters for metrics queries
message QueryMetricsRequest {
  string job_id = 1;

  // Time range (optional)
  int64 start_time = 2;  // Unix nanoseconds
  int64 end_time = 3;    // Unix nanoseconds

  // Aggregation (future)
  string aggregation = 4;  // "raw", "1s", "5s", "1m" (v1.1+)

  // Pagination
  int32 limit = 5;
  int32 offset = 6;
}

// GetJobInfoRequest requests info about a specific job
message GetJobInfoRequest {
  string job_id = 1;
}

// GetJobInfoResponse contains information about stored job data
message GetJobInfoResponse {
  string job_id = 1;
  int64 created_at = 2;      // Unix timestamp (seconds)
  int64 last_updated = 3;    // Unix timestamp (seconds)
  int64 log_count = 4;       // Number of log lines
  int64 metric_count = 5;    // Number of metric samples
  int64 size_bytes = 6;      // Total storage size
}

// ListJobsRequest requests a list of jobs with stored data
message ListJobsRequest {
  // Filters
  int64 since = 1;      // Unix timestamp (seconds)
  int64 until = 2;      // Unix timestamp (seconds)

  // Pagination
  int32 limit = 3;
  int32 offset = 4;
}

// ListJobsResponse returns a list of jobs
message ListJobsResponse {
  repeated JobInfo jobs = 1;
  int32 total_count = 2;
}

// JobInfo contains summary information about a job
message JobInfo {
  string job_id = 1;
  int64 created_at = 2;
  int64 last_updated = 3;
  int64 log_count = 4;
  int64 metric_count = 5;
  int64 size_bytes = 6;
}

// DeleteJobRequest requests deletion of job data
message DeleteJobRequest {
  string job_id = 1;
}

// DeleteJobResponse confirms deletion
message DeleteJobResponse {
  bool success = 1;
  string message = 2;
}

// GetStatsRequest requests statistics about the persistence service
message GetStatsRequest {}

// GetStatsResponse contains service statistics
message GetStatsResponse {
  int64 total_jobs = 1;
  int64 total_logs = 2;
  int64 total_metrics = 3;
  int64 total_size_bytes = 4;
  int64 messages_received = 5;
  int64 messages_written = 6;
  int64 write_errors = 7;
}

// CleanupRequest requests cleanup of old data
message CleanupRequest {
  bool dry_run = 1;  // If true, only report what would be deleted
}

// CleanupResponse reports cleanup results
message CleanupResponse {
  int32 jobs_deleted = 1;
  int64 bytes_freed = 2;
  repeated string deleted_job_ids = 3;
}
